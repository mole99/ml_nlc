// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Block_codeRepl5_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_ce,
        ap_idle,
        ap_ready,
        buf_clr,
        cfg_gain_val_V,
        xn_0_V_TDATA,
        xn_0_V_TVALID,
        xn_0_V_TREADY,
        cfg_delay_val_V,
        cfg_delay_sel,
        cfg_filt_en_1,
        cfg_filt_en_2,
        cfg_filt_en_3,
        cfg_filt_en_4,
        cfg_filt_en_5,
        cfg_filt_en_6,
        cfg_filt_en_7,
        cfg_filt_en_8,
        cfg_filt_en_9,
        cfg_filt_en_10,
        cfg_filt_en_11,
        cfg_filt_en_0,
        yn_0_V_TDATA,
        yn_0_V_TVALID,
        yn_0_V_TREADY,
        cfg_filt_en_13,
        cfg_filt_en_14,
        cfg_filt_en_15,
        cfg_filt_en_16,
        cfg_filt_en_17,
        cfg_filt_en_12,
        coeff_mem_address0,
        coeff_mem_ce0,
        coeff_mem_q0,
        yn_1_V_TDATA,
        yn_1_V_TVALID,
        yn_1_V_TREADY,
        mem_address0,
        mem_ce0,
        mem_we0,
        mem_d0,
        mem_q0
);

parameter    ap_ST_fsm_state1 = 6'd0;
parameter    ap_ST_fsm_state2 = 6'd1;
parameter    ap_ST_fsm_state3 = 6'd2;
parameter    ap_ST_fsm_state4 = 6'd3;
parameter    ap_ST_fsm_state5 = 6'd4;
parameter    ap_ST_fsm_state6 = 6'd5;
parameter    ap_ST_fsm_state7 = 6'd6;
parameter    ap_ST_fsm_state8 = 6'd7;
parameter    ap_ST_fsm_state9 = 6'd8;
parameter    ap_ST_fsm_state10 = 6'd9;
parameter    ap_ST_fsm_state11 = 6'd10;
parameter    ap_ST_fsm_state12 = 6'd11;
parameter    ap_ST_fsm_state13 = 6'd12;
parameter    ap_ST_fsm_state14 = 6'd13;
parameter    ap_ST_fsm_state15 = 6'd14;
parameter    ap_ST_fsm_state16 = 6'd15;
parameter    ap_ST_fsm_state17 = 6'd16;
parameter    ap_ST_fsm_state18 = 6'd17;
parameter    ap_ST_fsm_state19 = 6'd18;
parameter    ap_ST_fsm_state20 = 6'd19;
parameter    ap_ST_fsm_state21 = 6'd20;
parameter    ap_ST_fsm_state22 = 6'd21;
parameter    ap_ST_fsm_state23 = 6'd22;
parameter    ap_ST_fsm_state24 = 6'd23;
parameter    ap_ST_fsm_state25 = 6'd24;
parameter    ap_ST_fsm_state26 = 6'd25;
parameter    ap_ST_fsm_state27 = 6'd26;
parameter    ap_ST_fsm_state28 = 6'd27;
parameter    ap_ST_fsm_state29 = 6'd28;
parameter    ap_ST_fsm_state30 = 6'd29;
parameter    ap_ST_fsm_state31 = 6'd30;
parameter    ap_ST_fsm_state32 = 6'd31;
parameter    ap_ST_fsm_state33 = 6'd32;
parameter    ap_ST_fsm_state34 = 6'd33;
parameter    ap_ST_fsm_state35 = 6'd34;
parameter    ap_ST_fsm_state36 = 6'd35;
parameter    ap_ST_fsm_state37 = 6'd36;
parameter    ap_ST_fsm_state38 = 6'd37;
parameter    ap_ST_fsm_state39 = 6'd38;
parameter    ap_ST_fsm_state40 = 6'd39;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
input   ap_ce;
output   ap_idle;
output   ap_ready;
input  [0:0] buf_clr;
input  [5:0] cfg_gain_val_V;
input  [23:0] xn_0_V_TDATA;
input   xn_0_V_TVALID;
output   xn_0_V_TREADY;
input  [4:0] cfg_delay_val_V;
input  [0:0] cfg_delay_sel;
input  [0:0] cfg_filt_en_1;
input  [0:0] cfg_filt_en_2;
input  [0:0] cfg_filt_en_3;
input  [0:0] cfg_filt_en_4;
input  [0:0] cfg_filt_en_5;
input  [0:0] cfg_filt_en_6;
input  [0:0] cfg_filt_en_7;
input  [0:0] cfg_filt_en_8;
input  [0:0] cfg_filt_en_9;
input  [0:0] cfg_filt_en_10;
input  [0:0] cfg_filt_en_11;
input  [0:0] cfg_filt_en_0;
output  [23:0] yn_0_V_TDATA;
output   yn_0_V_TVALID;
input   yn_0_V_TREADY;
input  [0:0] cfg_filt_en_13;
input  [0:0] cfg_filt_en_14;
input  [0:0] cfg_filt_en_15;
input  [0:0] cfg_filt_en_16;
input  [0:0] cfg_filt_en_17;
input  [0:0] cfg_filt_en_12;
output  [6:0] coeff_mem_address0;
output   coeff_mem_ce0;
input  [15:0] coeff_mem_q0;
output  [23:0] yn_1_V_TDATA;
output   yn_1_V_TVALID;
input   yn_1_V_TREADY;
output  [6:0] mem_address0;
output   mem_ce0;
output   mem_we0;
output  [23:0] mem_d0;
input  [23:0] mem_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] coeff_mem_address0;
reg coeff_mem_ce0;
reg[6:0] mem_address0;
reg mem_ce0;
reg mem_we0;
reg[23:0] mem_d0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
reg  signed [23:0] xn_0_V_0_data_out;
wire    xn_0_V_0_vld_in;
wire    xn_0_V_0_vld_out;
wire    xn_0_V_0_ack_in;
reg    xn_0_V_0_ack_out;
reg   [23:0] xn_0_V_0_payload_A;
reg   [23:0] xn_0_V_0_payload_B;
reg    xn_0_V_0_sel_rd;
reg    xn_0_V_0_sel_wr;
wire    xn_0_V_0_sel;
wire    xn_0_V_0_load_A;
wire    xn_0_V_0_load_B;
reg   [1:0] xn_0_V_0_state;
wire    xn_0_V_0_state_cmp_full;
reg   [23:0] yn_0_V_1_data_out;
reg    yn_0_V_1_vld_in;
wire    yn_0_V_1_vld_out;
wire    yn_0_V_1_ack_in;
wire    yn_0_V_1_ack_out;
reg   [23:0] yn_0_V_1_payload_A;
reg   [23:0] yn_0_V_1_payload_B;
reg    yn_0_V_1_sel_rd;
reg    yn_0_V_1_sel_wr;
wire    yn_0_V_1_sel;
wire    yn_0_V_1_load_A;
wire    yn_0_V_1_load_B;
reg   [1:0] yn_0_V_1_state;
wire    yn_0_V_1_state_cmp_full;
reg   [23:0] yn_1_V_1_data_out;
reg    yn_1_V_1_vld_in;
wire    yn_1_V_1_vld_out;
wire    yn_1_V_1_ack_in;
wire    yn_1_V_1_ack_out;
reg   [23:0] yn_1_V_1_payload_A;
reg   [23:0] yn_1_V_1_payload_B;
reg    yn_1_V_1_sel_rd;
reg    yn_1_V_1_sel_wr;
wire    yn_1_V_1_sel;
wire    yn_1_V_1_load_A;
wire    yn_1_V_1_load_B;
reg   [1:0] yn_1_V_1_state;
wire    yn_1_V_1_state_cmp_full;
reg   [4:0] delay_ptr_V;
reg    xn_0_V_TDATA_blk_n;
reg    yn_0_V_TDATA_blk_n;
wire   [0:0] exitcond_fu_1424_p2;
reg   [0:0] tweeter_enabled_load_reg_1799;
reg    yn_1_V_TDATA_blk_n;
wire   [0:0] buf_clr_read_read_fu_354_p2;
reg   [0:0] woofer_enabled_load_reg_1848;
reg   [15:0] reg_768;
reg   [15:0] reg_773;
reg   [15:0] reg_778;
reg   [63:0] reg_783;
wire   [0:0] tmp_5_fu_1080_p2;
wire    grp_filter_c_engine_fu_720_ap_idle;
wire    grp_filter_c_engine_fu_720_ap_ready;
wire    grp_filter_c_engine_fu_720_ap_done;
reg    ap_predicate_op269_write_state23;
reg    ap_block_state23_io;
wire   [0:0] newSel4_fu_1341_p3;
wire   [0:0] ap_phi_mux_cfg_filt_en_load_phi_phi_fu_658_p24;
wire   [63:0] tmp_11_fu_1158_p1;
wire   [0:0] exitcond3_fu_1146_p2;
reg   [15:0] reg_788;
reg   [23:0] reg_793;
wire   [4:0] tmp_11_cast_fu_1170_p1;
reg   [15:0] reg_798;
wire   [6:0] tmp_12_cast1_fu_1259_p1;
reg   [23:0] reg_803;
wire   [4:0] grp_fu_1440_p2;
reg   [4:0] reg_808;
reg   [15:0] reg_814;
reg   [23:0] reg_819;
wire   [6:0] tmp_11_cast1_fu_1162_p1;
reg   [23:0] reg_824;
wire   [5:0] tmp_12_cast_fu_1263_p1;
wire   [5:0] tmp_9_cast_fu_1436_p1;
wire   [0:0] exitcond1_fu_1247_p2;
reg    ap_block_state34_io;
wire   [23:0] xn_woofer_V_3_fu_1072_p3;
reg   [23:0] reg_834;
reg   [6:0] reg_839;
reg   [0:0] tmp_5_reg_1641;
reg   [6:0] reg_1719;
reg   [6:0] reg_1724;
wire   [5:0] tmp_11_cast2_fu_1166_p1;
wire   [23:0] grp_fu_1105_p2;
reg   [3:0] i_3_reg_1729;
reg   [0:0] newSel4_reg_1785;
wire    grp_filter_c_engine_fu_720_ap_start;
wire   [23:0] grp_filter_c_engine_fu_720_buf_xn_2_V_read;
wire   [23:0] grp_filter_c_engine_fu_720_ap_return_0;
wire   [23:0] grp_filter_c_engine_fu_720_ap_return_1;
wire   [23:0] grp_filter_c_engine_fu_720_ap_return_2;
wire   [23:0] grp_filter_c_engine_fu_720_ap_return_3;
wire   [23:0] grp_filter_c_engine_fu_720_ap_return_4;
reg    grp_filter_c_engine_fu_720_ap_ce;
wire   [23:0] xn_woofer_V_3_xn_woo_fu_1116_p3;
reg   [23:0] ap_phi_mux_p_051_1_phi_fu_628_p4;
reg   [23:0] p_051_1_reg_625;
wire   [23:0] xn_woofer_V_xn_woofe_fu_1123_p3;
reg   [23:0] p_065_1_reg_634;
wire   [3:0] ap_phi_mux_i2_phi_fu_648_p4;
reg   [3:0] i2_reg_644;
reg   [0:0] cfg_filt_en_load_phi_reg_655;
reg   [4:0] i3_reg_685;
reg   [4:0] i_reg_697;
reg   [4:0] i1_reg_709;
wire   [0:0] exitcond2_fu_1487_p2;
reg    grp_filter_c_engine_fu_720_ap_start_reg;
wire   [63:0] addr_cast_fu_1111_p1;
wire   [63:0] addr10_cast_fu_1194_p1;
wire   [63:0] addr11_cast_fu_1205_p1;
wire   [63:0] addr12_cast_fu_1216_p1;
wire   [63:0] addr13_cast_fu_1227_p1;
wire   [63:0] addr14_cast_fu_1237_p1;
wire   [63:0] tmp_12_fu_1253_p1;
wire   [63:0] addr5_cast_fu_1362_p1;
wire   [63:0] addr6_cast_fu_1373_p1;
wire   [63:0] addr7_cast_fu_1384_p1;
wire   [63:0] addr8_cast_fu_1395_p1;
wire   [63:0] addr9_cast_fu_1405_p1;
wire   [63:0] addr1_cast_fu_1446_p1;
wire   [63:0] addr2_cast_fu_1467_p1;
wire   [63:0] tmp_9_fu_1472_p1;
wire   [63:0] addr3_cast_fu_1482_p1;
wire   [63:0] addr4_cast_fu_1509_p1;
wire   [4:0] grp_fu_1096_p2;
reg   [0:0] tweeter_enabled_fu_206;
reg   [23:0] xn_0_gain_V_1_fu_210;
reg   [0:0] woofer_enabled_fu_214;
reg   [23:0] xn_woofer_V_2_fu_218;
reg    ap_block_state35;
reg    ap_predicate_op329_write_state35;
reg    ap_block_state35_io;
wire  signed [29:0] p_Val2_s_fu_1514_p2;
wire   [0:0] tmp_22_fu_869_p3;
wire   [0:0] newsignbit_fu_893_p3;
wire   [0:0] tmp_23_fu_886_p3;
wire   [0:0] tmp_8_fu_901_p2;
wire   [2:0] p_Result_8_fu_920_p4;
wire   [3:0] p_Result_9_fu_935_p4;
wire   [0:0] carry_fu_907_p2;
wire   [0:0] Range1_all_ones_fu_944_p2;
wire   [0:0] Range1_all_zeros_fu_950_p2;
wire   [0:0] tmp_25_fu_913_p3;
wire   [0:0] Range2_all_ones_fu_929_p2;
wire   [0:0] tmp_6_fu_964_p2;
wire   [0:0] p_41_i_fu_970_p2;
wire   [0:0] deleted_zeros_fu_956_p3;
wire   [0:0] p_not_i_fu_990_p2;
wire   [0:0] signbit_fu_853_p3;
wire   [0:0] brmerge_i_fu_996_p2;
wire   [0:0] tmp_4_fu_1002_p2;
wire   [0:0] deleted_ones_fu_976_p3;
wire   [0:0] p_38_i_fu_984_p2;
wire   [0:0] brmerge40_demorgan_i_fu_1014_p2;
wire   [0:0] tmp_demorgan_fu_1020_p2;
wire   [0:0] tmp_fu_1026_p2;
wire   [0:0] underflow_fu_1032_p2;
wire   [0:0] overflow_fu_1008_p2;
wire   [0:0] tmp1_fu_1044_p2;
wire   [0:0] brmerge_i_i_fu_1038_p2;
wire   [0:0] underflow_not_fu_1050_p2;
wire   [23:0] p_Val2_2_mux_fu_1056_p3;
wire   [23:0] p_Val2_2_37_fu_1064_p3;
wire   [4:0] grp_fu_1096_p0;
wire   [4:0] tmp_7_cast_fu_1102_p0;
reg   [23:0] grp_fu_1105_p0;
wire   [6:0] tmp_9_cast1_fu_1457_p1;
wire   [6:0] tmp_7_cast_fu_1102_p1;
wire   [6:0] tmp_cast_fu_1499_p1;
reg   [23:0] grp_fu_1105_p1;
wire   [23:0] tmp_3_fu_876_p1;
wire   [6:0] addr_cast_fu_1111_p0;
wire   [4:0] addr10_cast_fu_1194_p0;
wire   [5:0] addr11_cast_fu_1205_p0;
wire   [6:0] addr12_cast_fu_1216_p0;
wire   [6:0] addr13_cast_fu_1227_p0;
wire   [6:0] addr14_cast_fu_1237_p0;
wire   [0:0] sel_tmp8_fu_1291_p2;
wire   [0:0] sel_tmp6_fu_1285_p2;
wire   [0:0] sel_tmp4_fu_1279_p2;
wire   [0:0] sel_tmp2_fu_1273_p2;
wire   [0:0] sel_tmp_fu_1267_p2;
wire   [0:0] or_cond_fu_1303_p2;
wire   [0:0] newSel_fu_1297_p3;
wire   [0:0] newSel1_fu_1309_p3;
wire   [0:0] or_cond1_fu_1315_p2;
wire   [0:0] or_cond2_fu_1335_p2;
wire   [0:0] newSel3_fu_1327_p3;
wire   [0:0] newSel2_fu_1321_p3;
wire   [5:0] addr5_cast_fu_1362_p0;
wire   [5:0] addr6_cast_fu_1373_p0;
wire   [6:0] addr7_cast_fu_1384_p0;
wire   [6:0] addr8_cast_fu_1395_p0;
wire   [6:0] addr9_cast_fu_1405_p0;
reg   [4:0] grp_fu_1440_p0;
wire   [5:0] addr1_cast_fu_1446_p0;
wire   [6:0] addr2_cast_fu_1467_p0;
wire   [5:0] addr3_cast_fu_1482_p0;
wire   [6:0] addr4_cast_fu_1509_p0;
wire   [5:0] p_Val2_s_fu_1514_p1;
reg    grp_fu_1096_ap_start;
wire    grp_fu_1096_ap_done;
reg    grp_fu_1096_ce;
reg   [5:0] ap_NS_fsm;
reg    ap_block_state1;
wire   [29:0] p_Val2_s_fu_1514_p10;
reg    ap_condition_1341;
reg    ap_condition_410;
reg    ap_condition_1349;
reg    ap_condition_1353;
reg    ap_condition_1358;
reg    ap_condition_110;
reg    ap_condition_115;
reg    ap_condition_120;
reg    ap_condition_190;
reg    ap_condition_195;
reg    ap_condition_200;
reg    ap_condition_267;
reg    ap_condition_272;
reg    ap_condition_277;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd0;
#0 xn_0_V_0_sel_rd = 1'b0;
#0 xn_0_V_0_sel_wr = 1'b0;
#0 xn_0_V_0_state = 2'd0;
#0 yn_0_V_1_sel_rd = 1'b0;
#0 yn_0_V_1_sel_wr = 1'b0;
#0 yn_0_V_1_state = 2'd0;
#0 yn_1_V_1_sel_rd = 1'b0;
#0 yn_1_V_1_sel_wr = 1'b0;
#0 yn_1_V_1_state = 2'd0;
#0 delay_ptr_V = 5'd0;
#0 grp_filter_c_engine_fu_720_ap_start_reg = 1'b0;
end

filter_c_engine grp_filter_c_engine_fu_720(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_filter_c_engine_fu_720_ap_start),
    .ap_done(grp_filter_c_engine_fu_720_ap_done),
    .ap_idle(grp_filter_c_engine_fu_720_ap_idle),
    .ap_ready(grp_filter_c_engine_fu_720_ap_ready),
    .xn_0_V(reg_824),
    .coeff_gain_V_read(reg_768),
    .coeff_b0_V_read(reg_773),
    .coeff_b1_V_read(reg_778),
    .coeff_b2_V_read(reg_788),
    .coeff_a1_n_V_read(reg_798),
    .coeff_a2_n_V_read(reg_814),
    .buf_yn_1_V_read(reg_819),
    .buf_yn_2_V_read(reg_793),
    .buf_xn_1_V_read(reg_803),
    .buf_xn_2_V_read(grp_filter_c_engine_fu_720_buf_xn_2_V_read),
    .ap_return_0(grp_filter_c_engine_fu_720_ap_return_0),
    .ap_return_1(grp_filter_c_engine_fu_720_ap_return_1),
    .ap_return_2(grp_filter_c_engine_fu_720_ap_return_2),
    .ap_return_3(grp_filter_c_engine_fu_720_ap_return_3),
    .ap_return_4(grp_filter_c_engine_fu_720_ap_return_4),
    .ap_ce(grp_filter_c_engine_fu_720_ap_ce)
);

filter_c_top_urembkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
filter_c_top_urembkb_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1096_ap_start),
    .done(grp_fu_1096_ap_done),
    .din0(grp_fu_1096_p0),
    .din1(cfg_delay_val_V),
    .ce(grp_fu_1096_ce),
    .dout(grp_fu_1096_p2)
);

filter_c_top_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 30 ))
filter_c_top_mul_cud_U13(
    .din0(xn_0_V_0_data_out),
    .din1(p_Val2_s_fu_1514_p1),
    .dout(p_Val2_s_fu_1514_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        if ((1'b1 == ap_ce)) begin
            ap_CS_fsm <= ap_NS_fsm;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'b1 == ap_block_state35_io) | (yn_1_V_1_ack_in == 1'b0) | (yn_0_V_1_ack_in == 1'b0)) & (1'b1 == ap_ce) & (ap_ST_fsm_state35 == ap_CS_fsm))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        delay_ptr_V <= 5'd0;
    end else begin
        if ((1'b1 == ap_ce)) begin
            if (((exitcond1_fu_1247_p2 == 1'd1) & (ap_ST_fsm_state36 == ap_CS_fsm))) begin
                delay_ptr_V <= 5'd0;
            end else if (((tmp_5_reg_1641 == 1'd0) & (ap_ST_fsm_state10 == ap_CS_fsm))) begin
                delay_ptr_V <= grp_fu_1096_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_filter_c_engine_fu_720_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_ce) & (ap_ST_fsm_state18 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state29 == ap_CS_fsm)))) begin
            grp_filter_c_engine_fu_720_ap_start_reg <= 1'b1;
        end else if ((grp_filter_c_engine_fu_720_ap_ready == 1'b1)) begin
            grp_filter_c_engine_fu_720_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        xn_0_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == ap_ce) & (xn_0_V_0_ack_out == 1'b1) & (xn_0_V_0_vld_out == 1'b1))) begin
            xn_0_V_0_sel_rd <= ~xn_0_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        xn_0_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == ap_ce) & (xn_0_V_0_ack_in == 1'b1) & (xn_0_V_0_vld_in == 1'b1))) begin
            xn_0_V_0_sel_wr <= ~xn_0_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        xn_0_V_0_state <= 2'd0;
    end else begin
        if ((1'b1 == ap_ce)) begin
            if ((1'b1 == ap_condition_120)) begin
                xn_0_V_0_state <= 2'd2;
            end else if ((1'b1 == ap_condition_115)) begin
                xn_0_V_0_state <= 2'd1;
            end else if ((1'b1 == ap_condition_110)) begin
                xn_0_V_0_state <= 2'd3;
            end else begin
                xn_0_V_0_state <= 2'd2;
            end
        end else begin
            xn_0_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        yn_0_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == ap_ce) & (yn_0_V_1_ack_out == 1'b1) & (yn_0_V_1_vld_out == 1'b1))) begin
            yn_0_V_1_sel_rd <= ~yn_0_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        yn_0_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == ap_ce) & (yn_0_V_1_ack_in == 1'b1) & (yn_0_V_1_vld_in == 1'b1))) begin
            yn_0_V_1_sel_wr <= ~yn_0_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        yn_0_V_1_state <= 2'd0;
    end else begin
        if ((1'b1 == ap_ce)) begin
            if ((1'b1 == ap_condition_200)) begin
                yn_0_V_1_state <= 2'd2;
            end else if ((1'b1 == ap_condition_195)) begin
                yn_0_V_1_state <= 2'd1;
            end else if ((1'b1 == ap_condition_190)) begin
                yn_0_V_1_state <= 2'd3;
            end else begin
                yn_0_V_1_state <= 2'd2;
            end
        end else begin
            yn_0_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        yn_1_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == ap_ce) & (yn_1_V_1_ack_out == 1'b1) & (yn_1_V_1_vld_out == 1'b1))) begin
            yn_1_V_1_sel_rd <= ~yn_1_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        yn_1_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == ap_ce) & (yn_1_V_1_ack_in == 1'b1) & (yn_1_V_1_vld_in == 1'b1))) begin
            yn_1_V_1_sel_wr <= ~yn_1_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        yn_1_V_1_state <= 2'd0;
    end else begin
        if ((1'b1 == ap_ce)) begin
            if ((1'b1 == ap_condition_277)) begin
                yn_1_V_1_state <= 2'd2;
            end else if ((1'b1 == ap_condition_272)) begin
                yn_1_V_1_state <= 2'd1;
            end else if ((1'b1 == ap_condition_267)) begin
                yn_1_V_1_state <= 2'd3;
            end else begin
                yn_1_V_1_state <= 2'd2;
            end
        end else begin
            yn_1_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_410)) begin
        if ((ap_phi_mux_i2_phi_fu_648_p4 == 4'd0)) begin
            cfg_filt_en_load_phi_reg_655 <= cfg_filt_en_0;
        end else if ((1'b1 == ap_condition_1341)) begin
            cfg_filt_en_load_phi_reg_655 <= cfg_filt_en_11;
        end else if ((ap_phi_mux_i2_phi_fu_648_p4 == 4'd10)) begin
            cfg_filt_en_load_phi_reg_655 <= cfg_filt_en_10;
        end else if ((ap_phi_mux_i2_phi_fu_648_p4 == 4'd9)) begin
            cfg_filt_en_load_phi_reg_655 <= cfg_filt_en_9;
        end else if ((ap_phi_mux_i2_phi_fu_648_p4 == 4'd8)) begin
            cfg_filt_en_load_phi_reg_655 <= cfg_filt_en_8;
        end else if ((ap_phi_mux_i2_phi_fu_648_p4 == 4'd7)) begin
            cfg_filt_en_load_phi_reg_655 <= cfg_filt_en_7;
        end else if ((ap_phi_mux_i2_phi_fu_648_p4 == 4'd6)) begin
            cfg_filt_en_load_phi_reg_655 <= cfg_filt_en_6;
        end else if ((ap_phi_mux_i2_phi_fu_648_p4 == 4'd5)) begin
            cfg_filt_en_load_phi_reg_655 <= cfg_filt_en_5;
        end else if ((ap_phi_mux_i2_phi_fu_648_p4 == 4'd4)) begin
            cfg_filt_en_load_phi_reg_655 <= cfg_filt_en_4;
        end else if ((ap_phi_mux_i2_phi_fu_648_p4 == 4'd3)) begin
            cfg_filt_en_load_phi_reg_655 <= cfg_filt_en_3;
        end else if ((ap_phi_mux_i2_phi_fu_648_p4 == 4'd2)) begin
            cfg_filt_en_load_phi_reg_655 <= cfg_filt_en_2;
        end else if ((ap_phi_mux_i2_phi_fu_648_p4 == 4'd1)) begin
            cfg_filt_en_load_phi_reg_655 <= cfg_filt_en_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if (((exitcond2_fu_1487_p2 == 1'd0) & (ap_ST_fsm_state40 == ap_CS_fsm))) begin
            i1_reg_709 <= grp_fu_1440_p2;
        end else if (((exitcond1_fu_1247_p2 == 1'd1) & (ap_ST_fsm_state36 == ap_CS_fsm))) begin
            i1_reg_709 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((ap_ST_fsm_state22 == ap_CS_fsm)) begin
            i2_reg_644 <= i_3_reg_1729;
        end else if ((ap_ST_fsm_state10 == ap_CS_fsm)) begin
            i2_reg_644 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if (((exitcond3_fu_1146_p2 == 1'd1) & (ap_ST_fsm_state11 == ap_CS_fsm))) begin
            i3_reg_685 <= 5'd12;
        end else if ((ap_ST_fsm_state33 == ap_CS_fsm)) begin
            i3_reg_685 <= grp_fu_1440_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_1349)) begin
            i_reg_697 <= 5'd0;
        end else if ((ap_ST_fsm_state39 == ap_CS_fsm)) begin
            i_reg_697 <= reg_808;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_1353)) begin
            p_051_1_reg_625 <= xn_woofer_V_3_fu_1072_p3;
        end else if (((tmp_5_reg_1641 == 1'd0) & (ap_ST_fsm_state10 == ap_CS_fsm))) begin
            p_051_1_reg_625 <= xn_woofer_V_3_xn_woo_fu_1116_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_1353)) begin
            p_065_1_reg_634 <= xn_woofer_V_3_fu_1072_p3;
        end else if (((tmp_5_reg_1641 == 1'd0) & (ap_ST_fsm_state10 == ap_CS_fsm))) begin
            p_065_1_reg_634 <= xn_woofer_V_xn_woofe_fu_1123_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((ap_ST_fsm_state13 == ap_CS_fsm)) begin
                        reg_1719[5 : 0] <= addr10_cast_fu_1194_p1[5 : 0];
        end else if ((ap_ST_fsm_state24 == ap_CS_fsm)) begin
                        reg_1719[5 : 0] <= addr5_cast_fu_1362_p1[5 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if (((exitcond3_fu_1146_p2 == 1'd0) & (ap_ST_fsm_state11 == ap_CS_fsm))) begin
            reg_1724 <= tmp_11_cast2_fu_1166_p1;
        end else if ((ap_ST_fsm_state14 == ap_CS_fsm)) begin
            reg_1724 <= addr11_cast_fu_1205_p1;
        end else if ((ap_ST_fsm_state25 == ap_CS_fsm)) begin
            reg_1724 <= addr6_cast_fu_1373_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (ap_ST_fsm_state17 == ap_CS_fsm))) begin
        reg_783 <= addr14_cast_fu_1237_p1;
    end else if (((1'b1 == ap_ce) & (ap_ST_fsm_state25 == ap_CS_fsm))) begin
        reg_783 <= addr6_cast_fu_1373_p1;
    end else if (((1'b1 == ap_ce) & (ap_ST_fsm_state26 == ap_CS_fsm))) begin
        reg_783 <= addr7_cast_fu_1384_p1;
    end else if (((1'b1 == ap_ce) & (ap_ST_fsm_state27 == ap_CS_fsm))) begin
        reg_783 <= addr8_cast_fu_1395_p1;
    end else if (((1'b1 == ap_ce) & (ap_ST_fsm_state28 == ap_CS_fsm))) begin
        reg_783 <= addr9_cast_fu_1405_p1;
    end else if (((exitcond3_fu_1146_p2 == 1'd0) & (1'b1 == ap_ce) & (ap_ST_fsm_state11 == ap_CS_fsm))) begin
        reg_783 <= tmp_11_fu_1158_p1;
    end else if (((ap_phi_mux_cfg_filt_en_load_phi_phi_fu_658_p24 == 1'd1) & (1'b1 == ap_ce) & (ap_ST_fsm_state12 == ap_CS_fsm))) begin
        reg_783 <= reg_783;
    end else if (((newSel4_fu_1341_p3 == 1'd1) & (exitcond_fu_1424_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_state23_io) & (ap_ST_fsm_state23 == ap_CS_fsm))) begin
        reg_783 <= tmp_12_fu_1253_p1;
    end else if (((1'b1 == ap_ce) & (ap_ST_fsm_state24 == ap_CS_fsm))) begin
        reg_783 <= addr5_cast_fu_1362_p1;
    end else if ((((1'b1 == ap_ce) & (grp_filter_c_engine_fu_720_ap_done == 1'b1) & (ap_ST_fsm_state19 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (grp_filter_c_engine_fu_720_ap_done == 1'b1) & (ap_ST_fsm_state30 == ap_CS_fsm)))) begin
        reg_783 <= grp_filter_c_engine_fu_720_ap_return_3;
    end else if ((((1'b1 == ap_ce) & (ap_ST_fsm_state18 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state29 == ap_CS_fsm)))) begin
        reg_783 <= mem_q0;
    end else if (((tmp_5_fu_1080_p2 == 1'd0) & (buf_clr == 1'd0) & (xn_0_V_0_vld_out == 1'b1) & (1'b1 == ap_ce) & (ap_ST_fsm_state2 == ap_CS_fsm))) begin
        reg_783 <= delay_ptr_V;
    end else if (((1'b1 == ap_ce) & (ap_ST_fsm_state13 == ap_CS_fsm))) begin
        reg_783 <= addr10_cast_fu_1194_p1;
    end else if (((1'b1 == ap_ce) & (ap_ST_fsm_state14 == ap_CS_fsm))) begin
        reg_783 <= addr11_cast_fu_1205_p1;
    end else if (((1'b1 == ap_ce) & (ap_ST_fsm_state16 == ap_CS_fsm))) begin
        reg_783 <= addr13_cast_fu_1227_p1;
    end else if (((1'b1 == ap_ce) & (ap_ST_fsm_state15 == ap_CS_fsm))) begin
        reg_783 <= addr12_cast_fu_1216_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_ce) & (ap_ST_fsm_state17 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state28 == ap_CS_fsm)))) begin
        reg_798 <= coeff_mem_q0;
    end else if (((exitcond_fu_1424_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_state23_io) & (ap_ST_fsm_state23 == ap_CS_fsm))) begin
        reg_798 <= tmp_12_cast1_fu_1259_p1;
    end else if (((exitcond3_fu_1146_p2 == 1'd0) & (1'b1 == ap_ce) & (ap_ST_fsm_state11 == ap_CS_fsm))) begin
        reg_798 <= tmp_11_cast_fu_1170_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((buf_clr == 1'd0) & (xn_0_V_0_vld_out == 1'b1) & (1'b1 == ap_ce) & (ap_ST_fsm_state2 == ap_CS_fsm))) begin
        reg_824 <= xn_woofer_V_3_fu_1072_p3;
    end else if (((1'b1 == ap_ce) & (ap_ST_fsm_state40 == ap_CS_fsm))) begin
        reg_824 <= grp_fu_1440_p2;
    end else if (((exitcond1_fu_1247_p2 == 1'd0) & (1'b1 == ap_ce) & (ap_ST_fsm_state36 == ap_CS_fsm))) begin
        reg_824 <= tmp_9_cast_fu_1436_p1;
    end else if ((((1'b1 == ap_ce) & (grp_filter_c_engine_fu_720_ap_done == 1'b1) & (ap_ST_fsm_state19 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (grp_filter_c_engine_fu_720_ap_done == 1'b1) & (ap_ST_fsm_state30 == ap_CS_fsm)))) begin
        reg_824 <= grp_filter_c_engine_fu_720_ap_return_2;
    end else if ((((1'b1 == ap_ce) & (ap_ST_fsm_state18 == ap_CS_fsm)) | ((ap_predicate_op269_write_state23 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_state23_io) & (ap_ST_fsm_state23 == ap_CS_fsm)))) begin
        reg_824 <= xn_0_gain_V_1_fu_210;
    end else if ((((1'b1 == ap_ce) & (ap_ST_fsm_state29 == ap_CS_fsm)) | ((woofer_enabled_fu_214 == 1'd1) & (1'b1 == ap_ce) & (1'b0 == ap_block_state34_io) & (ap_ST_fsm_state34 == ap_CS_fsm)))) begin
        reg_824 <= xn_woofer_V_2_fu_218;
    end else if (((exitcond_fu_1424_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_state23_io) & (ap_ST_fsm_state23 == ap_CS_fsm))) begin
        reg_824 <= tmp_12_cast_fu_1263_p1;
    end else if (((exitcond3_fu_1146_p2 == 1'd0) & (1'b1 == ap_ce) & (ap_ST_fsm_state11 == ap_CS_fsm))) begin
        reg_824 <= tmp_11_cast1_fu_1162_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (ap_ST_fsm_state9 == ap_CS_fsm))) begin
        reg_834 <= addr_cast_fu_1111_p1;
    end else if ((((1'b1 == ap_ce) & (grp_filter_c_engine_fu_720_ap_done == 1'b1) & (ap_ST_fsm_state19 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (grp_filter_c_engine_fu_720_ap_done == 1'b1) & (ap_ST_fsm_state30 == ap_CS_fsm)))) begin
        reg_834 <= grp_filter_c_engine_fu_720_ap_return_4;
    end else if (((newSel4_fu_1341_p3 == 1'd1) & (exitcond_fu_1424_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_state23_io) & (ap_ST_fsm_state23 == ap_CS_fsm))) begin
        reg_834 <= tmp_12_fu_1253_p1;
    end else if (((ap_phi_mux_cfg_filt_en_load_phi_phi_fu_658_p24 == 1'd1) & (1'b1 == ap_ce) & (ap_ST_fsm_state12 == ap_CS_fsm))) begin
        reg_834 <= reg_783;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((ap_ST_fsm_state26 == ap_CS_fsm)) begin
            reg_839 <= addr7_cast_fu_1384_p1;
        end else if ((ap_ST_fsm_state15 == ap_CS_fsm)) begin
            reg_839 <= addr12_cast_fu_1216_p1;
        end else if (((xn_0_V_0_vld_out == 1'b1) & (ap_ST_fsm_state2 == ap_CS_fsm))) begin
            reg_839 <= cfg_delay_val_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if (((ap_phi_mux_cfg_filt_en_load_phi_phi_fu_658_p24 == 1'd1) & (ap_ST_fsm_state12 == ap_CS_fsm))) begin
            tweeter_enabled_fu_206 <= 1'd1;
        end else if ((ap_ST_fsm_state10 == ap_CS_fsm)) begin
            tweeter_enabled_fu_206 <= 1'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_1358)) begin
            woofer_enabled_fu_214 <= 1'd1;
        end else if (((exitcond3_fu_1146_p2 == 1'd1) & (ap_ST_fsm_state11 == ap_CS_fsm))) begin
            woofer_enabled_fu_214 <= 1'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if (((grp_filter_c_engine_fu_720_ap_done == 1'b1) & (ap_ST_fsm_state19 == ap_CS_fsm))) begin
            xn_0_gain_V_1_fu_210 <= grp_filter_c_engine_fu_720_ap_return_0;
        end else if ((ap_ST_fsm_state10 == ap_CS_fsm)) begin
            xn_0_gain_V_1_fu_210 <= ap_phi_mux_p_051_1_phi_fu_628_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if (((grp_filter_c_engine_fu_720_ap_done == 1'b1) & (ap_ST_fsm_state30 == ap_CS_fsm))) begin
            xn_woofer_V_2_fu_218 <= grp_filter_c_engine_fu_720_ap_return_0;
        end else if (((exitcond3_fu_1146_p2 == 1'd1) & (ap_ST_fsm_state11 == ap_CS_fsm))) begin
            xn_woofer_V_2_fu_218 <= p_065_1_reg_634;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (ap_ST_fsm_state11 == ap_CS_fsm))) begin
        i_3_reg_1729 <= grp_fu_1105_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1424_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_state23_io) & (ap_ST_fsm_state23 == ap_CS_fsm))) begin
        newSel4_reg_1785 <= newSel4_fu_1341_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_ce) & (ap_ST_fsm_state13 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state24 == ap_CS_fsm)))) begin
        reg_768 <= coeff_mem_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_ce) & (ap_ST_fsm_state25 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state14 == ap_CS_fsm)))) begin
        reg_773 <= coeff_mem_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_ce) & (ap_ST_fsm_state26 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state15 == ap_CS_fsm)))) begin
        reg_778 <= coeff_mem_q0;
        reg_819 <= mem_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_ce) & (ap_ST_fsm_state27 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state16 == ap_CS_fsm)))) begin
        reg_788 <= coeff_mem_q0;
        reg_793 <= mem_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_ce) & (ap_ST_fsm_state17 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state28 == ap_CS_fsm)))) begin
        reg_803 <= mem_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_ce) & (ap_ST_fsm_state33 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state36 == ap_CS_fsm)) | ((tmp_5_fu_1080_p2 == 1'd0) & (buf_clr == 1'd0) & (xn_0_V_0_vld_out == 1'b1) & (1'b1 == ap_ce) & (ap_ST_fsm_state2 == ap_CS_fsm)))) begin
        reg_808 <= grp_fu_1440_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_ce) & (ap_ST_fsm_state18 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state29 == ap_CS_fsm)))) begin
        reg_814 <= coeff_mem_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((buf_clr == 1'd0) & (xn_0_V_0_vld_out == 1'b1) & (1'b1 == ap_ce) & (ap_ST_fsm_state2 == ap_CS_fsm))) begin
        tmp_5_reg_1641 <= tmp_5_fu_1080_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1424_p2 == 1'd1) & (1'b1 == ap_ce) & (1'b0 == ap_block_state23_io) & (ap_ST_fsm_state23 == ap_CS_fsm))) begin
        tweeter_enabled_load_reg_1799 <= tweeter_enabled_fu_206;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_state34_io) & (ap_ST_fsm_state34 == ap_CS_fsm))) begin
        woofer_enabled_load_reg_1848 <= woofer_enabled_fu_214;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (xn_0_V_0_load_A == 1'b1))) begin
        xn_0_V_0_payload_A <= xn_0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (xn_0_V_0_load_B == 1'b1))) begin
        xn_0_V_0_payload_B <= xn_0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (yn_0_V_1_load_A == 1'b1))) begin
        yn_0_V_1_payload_A <= xn_0_gain_V_1_fu_210;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (yn_0_V_1_load_B == 1'b1))) begin
        yn_0_V_1_payload_B <= xn_0_gain_V_1_fu_210;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (yn_1_V_1_load_A == 1'b1))) begin
        yn_1_V_1_payload_A <= xn_woofer_V_2_fu_218;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (yn_1_V_1_load_B == 1'b1))) begin
        yn_1_V_1_payload_B <= xn_woofer_V_2_fu_218;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state35_io) | (yn_1_V_1_ack_in == 1'b0) | (yn_0_V_1_ack_in == 1'b0)) & (1'b1 == ap_ce) & (ap_ST_fsm_state35 == ap_CS_fsm))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_state1 == ap_CS_fsm) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_5_reg_1641 == 1'd0) & (ap_ST_fsm_state10 == ap_CS_fsm))) begin
        ap_phi_mux_p_051_1_phi_fu_628_p4 = xn_woofer_V_3_xn_woo_fu_1116_p3;
    end else begin
        ap_phi_mux_p_051_1_phi_fu_628_p4 = p_051_1_reg_625;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state35_io) | (yn_1_V_1_ack_in == 1'b0) | (yn_0_V_1_ack_in == 1'b0)) & (1'b1 == ap_ce) & (ap_ST_fsm_state35 == ap_CS_fsm))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state28 == ap_CS_fsm)) begin
        coeff_mem_address0 = addr9_cast_fu_1405_p1;
    end else if ((ap_ST_fsm_state27 == ap_CS_fsm)) begin
        coeff_mem_address0 = addr8_cast_fu_1395_p1;
    end else if ((ap_ST_fsm_state26 == ap_CS_fsm)) begin
        coeff_mem_address0 = addr7_cast_fu_1384_p1;
    end else if ((ap_ST_fsm_state25 == ap_CS_fsm)) begin
        coeff_mem_address0 = addr6_cast_fu_1373_p1;
    end else if ((ap_ST_fsm_state24 == ap_CS_fsm)) begin
        coeff_mem_address0 = addr5_cast_fu_1362_p1;
    end else if ((ap_ST_fsm_state23 == ap_CS_fsm)) begin
        coeff_mem_address0 = tmp_12_fu_1253_p1;
    end else if ((ap_ST_fsm_state17 == ap_CS_fsm)) begin
        coeff_mem_address0 = addr14_cast_fu_1237_p1;
    end else if ((ap_ST_fsm_state16 == ap_CS_fsm)) begin
        coeff_mem_address0 = addr13_cast_fu_1227_p1;
    end else if ((ap_ST_fsm_state15 == ap_CS_fsm)) begin
        coeff_mem_address0 = addr12_cast_fu_1216_p1;
    end else if ((ap_ST_fsm_state14 == ap_CS_fsm)) begin
        coeff_mem_address0 = addr11_cast_fu_1205_p1;
    end else if ((ap_ST_fsm_state13 == ap_CS_fsm)) begin
        coeff_mem_address0 = addr10_cast_fu_1194_p1;
    end else if ((ap_ST_fsm_state12 == ap_CS_fsm)) begin
        coeff_mem_address0 = reg_783;
    end else begin
        coeff_mem_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (ap_ST_fsm_state17 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state27 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state28 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state12 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state16 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state26 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state15 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state25 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state14 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state13 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state24 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_state23_io) & (ap_ST_fsm_state23 == ap_CS_fsm)))) begin
        coeff_mem_ce0 = 1'b1;
    end else begin
        coeff_mem_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & ((ap_ST_fsm_state30 == ap_CS_fsm) | (ap_ST_fsm_state29 == ap_CS_fsm) | (ap_ST_fsm_state19 == ap_CS_fsm) | (ap_ST_fsm_state18 == ap_CS_fsm)))) begin
        grp_filter_c_engine_fu_720_ap_ce = 1'b1;
    end else begin
        grp_filter_c_engine_fu_720_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_5_fu_1080_p2 == 1'd0) & (buf_clr == 1'd0) & (xn_0_V_0_vld_out == 1'b1) & (1'b1 == ap_ce) & (ap_ST_fsm_state2 == ap_CS_fsm))) begin
        grp_fu_1096_ap_start = 1'b1;
    end else begin
        grp_fu_1096_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & ((ap_ST_fsm_state7 == ap_CS_fsm) | (ap_ST_fsm_state6 == ap_CS_fsm) | (ap_ST_fsm_state5 == ap_CS_fsm) | (ap_ST_fsm_state4 == ap_CS_fsm) | (ap_ST_fsm_state3 == ap_CS_fsm) | (ap_ST_fsm_state2 == ap_CS_fsm) | (ap_ST_fsm_state10 == ap_CS_fsm) | (ap_ST_fsm_state9 == ap_CS_fsm) | (ap_ST_fsm_state8 == ap_CS_fsm)))) begin
        grp_fu_1096_ce = 1'b1;
    end else begin
        grp_fu_1096_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state40 == ap_CS_fsm)) begin
        grp_fu_1105_p0 = tmp_cast_fu_1499_p1;
    end else if ((ap_ST_fsm_state37 == ap_CS_fsm)) begin
        grp_fu_1105_p0 = tmp_9_cast1_fu_1457_p1;
    end else if ((ap_ST_fsm_state36 == ap_CS_fsm)) begin
        grp_fu_1105_p0 = tmp_9_cast_fu_1436_p1;
    end else if (((ap_ST_fsm_state39 == ap_CS_fsm) | (ap_ST_fsm_state25 == ap_CS_fsm) | (ap_ST_fsm_state24 == ap_CS_fsm) | (ap_ST_fsm_state17 == ap_CS_fsm) | (ap_ST_fsm_state16 == ap_CS_fsm) | (ap_ST_fsm_state15 == ap_CS_fsm))) begin
        grp_fu_1105_p0 = reg_824;
    end else if ((ap_ST_fsm_state14 == ap_CS_fsm)) begin
        grp_fu_1105_p0 = reg_1724;
    end else if (((ap_ST_fsm_state28 == ap_CS_fsm) | (ap_ST_fsm_state27 == ap_CS_fsm) | (ap_ST_fsm_state26 == ap_CS_fsm) | (ap_ST_fsm_state13 == ap_CS_fsm))) begin
        grp_fu_1105_p0 = reg_798;
    end else if ((ap_ST_fsm_state11 == ap_CS_fsm)) begin
        grp_fu_1105_p0 = i2_reg_644;
    end else if ((ap_ST_fsm_state9 == ap_CS_fsm)) begin
        grp_fu_1105_p0 = tmp_7_cast_fu_1102_p1;
    end else if ((ap_ST_fsm_state2 == ap_CS_fsm)) begin
        grp_fu_1105_p0 = {{p_Val2_s_fu_1514_p2[25:2]}};
    end else begin
        grp_fu_1105_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_state39 == ap_CS_fsm) | (ap_ST_fsm_state24 == ap_CS_fsm))) begin
        grp_fu_1105_p1 = 6'd18;
    end else if (((ap_ST_fsm_state28 == ap_CS_fsm) | (ap_ST_fsm_state17 == ap_CS_fsm))) begin
        grp_fu_1105_p1 = 7'd90;
    end else if (((ap_ST_fsm_state37 == ap_CS_fsm) | (ap_ST_fsm_state26 == ap_CS_fsm) | (ap_ST_fsm_state15 == ap_CS_fsm))) begin
        grp_fu_1105_p1 = 7'd54;
    end else if (((ap_ST_fsm_state36 == ap_CS_fsm) | (ap_ST_fsm_state25 == ap_CS_fsm) | (ap_ST_fsm_state14 == ap_CS_fsm))) begin
        grp_fu_1105_p1 = 6'd36;
    end else if ((ap_ST_fsm_state13 == ap_CS_fsm)) begin
        grp_fu_1105_p1 = 5'd18;
    end else if ((ap_ST_fsm_state11 == ap_CS_fsm)) begin
        grp_fu_1105_p1 = 4'd1;
    end else if (((ap_ST_fsm_state40 == ap_CS_fsm) | (ap_ST_fsm_state27 == ap_CS_fsm) | (ap_ST_fsm_state16 == ap_CS_fsm) | (ap_ST_fsm_state9 == ap_CS_fsm))) begin
        grp_fu_1105_p1 = 7'd72;
    end else if ((ap_ST_fsm_state2 == ap_CS_fsm)) begin
        grp_fu_1105_p1 = tmp_3_fu_876_p1;
    end else begin
        grp_fu_1105_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state40 == ap_CS_fsm)) begin
        grp_fu_1440_p0 = i1_reg_709;
    end else if ((ap_ST_fsm_state36 == ap_CS_fsm)) begin
        grp_fu_1440_p0 = i_reg_697;
    end else if ((ap_ST_fsm_state33 == ap_CS_fsm)) begin
        grp_fu_1440_p0 = i3_reg_685;
    end else if ((ap_ST_fsm_state2 == ap_CS_fsm)) begin
        grp_fu_1440_p0 = delay_ptr_V;
    end else begin
        grp_fu_1440_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state40 == ap_CS_fsm)) begin
        mem_address0 = addr4_cast_fu_1509_p1;
    end else if ((ap_ST_fsm_state39 == ap_CS_fsm)) begin
        mem_address0 = addr3_cast_fu_1482_p1;
    end else if ((ap_ST_fsm_state38 == ap_CS_fsm)) begin
        mem_address0 = tmp_9_fu_1472_p1;
    end else if ((ap_ST_fsm_state37 == ap_CS_fsm)) begin
        mem_address0 = addr2_cast_fu_1467_p1;
    end else if ((ap_ST_fsm_state36 == ap_CS_fsm)) begin
        mem_address0 = addr1_cast_fu_1446_p1;
    end else if (((ap_ST_fsm_state33 == ap_CS_fsm) | (ap_ST_fsm_state28 == ap_CS_fsm) | (ap_ST_fsm_state22 == ap_CS_fsm) | (ap_ST_fsm_state17 == ap_CS_fsm))) begin
        mem_address0 = reg_839;
    end else if (((ap_ST_fsm_state32 == ap_CS_fsm) | (ap_ST_fsm_state27 == ap_CS_fsm) | (ap_ST_fsm_state21 == ap_CS_fsm) | (ap_ST_fsm_state16 == ap_CS_fsm))) begin
        mem_address0 = reg_1724;
    end else if (((ap_ST_fsm_state31 == ap_CS_fsm) | (ap_ST_fsm_state26 == ap_CS_fsm) | (ap_ST_fsm_state20 == ap_CS_fsm) | (ap_ST_fsm_state15 == ap_CS_fsm))) begin
        mem_address0 = reg_1719;
    end else if (((ap_ST_fsm_state30 == ap_CS_fsm) | (ap_ST_fsm_state25 == ap_CS_fsm) | (ap_ST_fsm_state19 == ap_CS_fsm) | (ap_ST_fsm_state14 == ap_CS_fsm) | (ap_ST_fsm_state10 == ap_CS_fsm))) begin
        mem_address0 = reg_834;
    end else if ((ap_ST_fsm_state9 == ap_CS_fsm)) begin
        mem_address0 = addr_cast_fu_1111_p1;
    end else begin
        mem_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (ap_ST_fsm_state32 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state31 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state21 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state20 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state38 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state37 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state39 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state22 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state10 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state9 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state40 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state33 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state36 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state17 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state27 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state28 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (grp_filter_c_engine_fu_720_ap_done == 1'b1) & (ap_ST_fsm_state19 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (grp_filter_c_engine_fu_720_ap_done == 1'b1) & (ap_ST_fsm_state30 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state16 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state26 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state15 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state25 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state14 == ap_CS_fsm)))) begin
        mem_ce0 = 1'b1;
    end else begin
        mem_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_state40 == ap_CS_fsm) | (ap_ST_fsm_state39 == ap_CS_fsm) | (ap_ST_fsm_state38 == ap_CS_fsm) | (ap_ST_fsm_state37 == ap_CS_fsm) | (ap_ST_fsm_state36 == ap_CS_fsm))) begin
        mem_d0 = 24'd0;
    end else if (((ap_ST_fsm_state33 == ap_CS_fsm) | (ap_ST_fsm_state22 == ap_CS_fsm))) begin
        mem_d0 = reg_834;
    end else if (((ap_ST_fsm_state32 == ap_CS_fsm) | (ap_ST_fsm_state21 == ap_CS_fsm))) begin
        mem_d0 = reg_783;
    end else if (((ap_ST_fsm_state30 == ap_CS_fsm) | (ap_ST_fsm_state19 == ap_CS_fsm))) begin
        mem_d0 = grp_filter_c_engine_fu_720_ap_return_1;
    end else if (((ap_ST_fsm_state31 == ap_CS_fsm) | (ap_ST_fsm_state20 == ap_CS_fsm) | (ap_ST_fsm_state10 == ap_CS_fsm))) begin
        mem_d0 = reg_824;
    end else begin
        mem_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (ap_ST_fsm_state32 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state31 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state21 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state20 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state38 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state37 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (ap_ST_fsm_state39 == ap_CS_fsm)) | ((cfg_filt_en_load_phi_reg_655 == 1'd1) & (1'b1 == ap_ce) & (ap_ST_fsm_state22 == ap_CS_fsm)) | ((tmp_5_reg_1641 == 1'd0) & (1'b1 == ap_ce) & (ap_ST_fsm_state10 == ap_CS_fsm)) | ((exitcond2_fu_1487_p2 == 1'd0) & (1'b1 == ap_ce) & (ap_ST_fsm_state40 == ap_CS_fsm)) | ((newSel4_reg_1785 == 1'd1) & (1'b1 == ap_ce) & (ap_ST_fsm_state33 == ap_CS_fsm)) | ((exitcond1_fu_1247_p2 == 1'd0) & (1'b1 == ap_ce) & (ap_ST_fsm_state36 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (grp_filter_c_engine_fu_720_ap_done == 1'b1) & (ap_ST_fsm_state19 == ap_CS_fsm)) | ((1'b1 == ap_ce) & (grp_filter_c_engine_fu_720_ap_done == 1'b1) & (ap_ST_fsm_state30 == ap_CS_fsm)))) begin
        mem_we0 = 1'b1;
    end else begin
        mem_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((xn_0_V_0_vld_out == 1'b1) & (1'b1 == ap_ce) & (ap_ST_fsm_state2 == ap_CS_fsm))) begin
        xn_0_V_0_ack_out = 1'b1;
    end else begin
        xn_0_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((xn_0_V_0_sel == 1'b1)) begin
        xn_0_V_0_data_out = xn_0_V_0_payload_B;
    end else begin
        xn_0_V_0_data_out = xn_0_V_0_payload_A;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state2 == ap_CS_fsm)) begin
        xn_0_V_TDATA_blk_n = xn_0_V_0_state[1'd0];
    end else begin
        xn_0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((yn_0_V_1_sel == 1'b1)) begin
        yn_0_V_1_data_out = yn_0_V_1_payload_B;
    end else begin
        yn_0_V_1_data_out = yn_0_V_1_payload_A;
    end
end

always @ (*) begin
    if (((ap_predicate_op269_write_state23 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_state23_io) & (ap_ST_fsm_state23 == ap_CS_fsm))) begin
        yn_0_V_1_vld_in = 1'b1;
    end else begin
        yn_0_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((tweeter_enabled_load_reg_1799 == 1'd1) & (ap_ST_fsm_state34 == ap_CS_fsm)) | ((tweeter_enabled_fu_206 == 1'd1) & (exitcond_fu_1424_p2 == 1'd1) & (ap_ST_fsm_state23 == ap_CS_fsm)))) begin
        yn_0_V_TDATA_blk_n = yn_0_V_1_state[1'd1];
    end else begin
        yn_0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((yn_1_V_1_sel == 1'b1)) begin
        yn_1_V_1_data_out = yn_1_V_1_payload_B;
    end else begin
        yn_1_V_1_data_out = yn_1_V_1_payload_A;
    end
end

always @ (*) begin
    if (((woofer_enabled_fu_214 == 1'd1) & (1'b1 == ap_ce) & (1'b0 == ap_block_state34_io) & (ap_ST_fsm_state34 == ap_CS_fsm))) begin
        yn_1_V_1_vld_in = 1'b1;
    end else begin
        yn_1_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((woofer_enabled_load_reg_1848 == 1'd1) & (buf_clr == 1'd0) & (ap_ST_fsm_state35 == ap_CS_fsm)) | ((woofer_enabled_fu_214 == 1'd1) & (ap_ST_fsm_state34 == ap_CS_fsm)))) begin
        yn_1_V_TDATA_blk_n = yn_1_V_1_state[1'd1];
    end else begin
        yn_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_ce) & (ap_ST_fsm_state1 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((buf_clr_read_read_fu_354_p2 == 1'd1) & (xn_0_V_0_vld_out == 1'b1) & (1'b1 == ap_ce) & (ap_ST_fsm_state2 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else if (((tmp_5_fu_1080_p2 == 1'd1) & (buf_clr == 1'd0) & (xn_0_V_0_vld_out == 1'b1) & (1'b1 == ap_ce) & (ap_ST_fsm_state2 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((tmp_5_fu_1080_p2 == 1'd0) & (buf_clr == 1'd0) & (xn_0_V_0_vld_out == 1'b1) & (1'b1 == ap_ce) & (ap_ST_fsm_state2 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((ap_ST_fsm_state3 == ap_CS_fsm) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((ap_ST_fsm_state4 == ap_CS_fsm) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((ap_ST_fsm_state5 == ap_CS_fsm) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((ap_ST_fsm_state6 == ap_CS_fsm) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((ap_ST_fsm_state7 == ap_CS_fsm) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state8 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state9 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state10 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((exitcond3_fu_1146_p2 == 1'd1) & (1'b1 == ap_ce) & (ap_ST_fsm_state11 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else if (((exitcond3_fu_1146_p2 == 1'd0) & (1'b1 == ap_ce) & (ap_ST_fsm_state11 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((ap_phi_mux_cfg_filt_en_load_phi_phi_fu_658_p24 == 1'd0) & (1'b1 == ap_ce) & (ap_ST_fsm_state12 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else if (((ap_phi_mux_cfg_filt_en_load_phi_phi_fu_658_p24 == 1'd1) & (1'b1 == ap_ce) & (ap_ST_fsm_state12 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state13 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state14 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state15 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state16 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state17 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state18 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_ce) & (grp_filter_c_engine_fu_720_ap_done == 1'b1) & (ap_ST_fsm_state19 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state20 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state21 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state22 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((exitcond_fu_1424_p2 == 1'd1) & (1'b1 == ap_ce) & (1'b0 == ap_block_state23_io) & (ap_ST_fsm_state23 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else if (((newSel4_fu_1341_p3 == 1'd0) & (exitcond_fu_1424_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_state23_io) & (ap_ST_fsm_state23 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else if (((newSel4_fu_1341_p3 == 1'd1) & (exitcond_fu_1424_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_state23_io) & (ap_ST_fsm_state23 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state24 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state25 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state26 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state27 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state28 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state29 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_ce) & (grp_filter_c_engine_fu_720_ap_done == 1'b1) & (ap_ST_fsm_state30 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state31 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state32 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state33 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_ce) & (1'b0 == ap_block_state34_io) & (ap_ST_fsm_state34 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if ((~((1'b1 == ap_block_state35_io) | (yn_1_V_1_ack_in == 1'b0) | (yn_0_V_1_ack_in == 1'b0)) & (1'b1 == ap_ce) & (ap_ST_fsm_state35 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((exitcond1_fu_1247_p2 == 1'd1) & (1'b1 == ap_ce) & (ap_ST_fsm_state36 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else if (((exitcond1_fu_1247_p2 == 1'd0) & (1'b1 == ap_ce) & (ap_ST_fsm_state36 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state37 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state38 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_ce) & (ap_ST_fsm_state39 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((exitcond2_fu_1487_p2 == 1'd1) & (1'b1 == ap_ce) & (ap_ST_fsm_state40 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else if (((exitcond2_fu_1487_p2 == 1'd0) & (1'b1 == ap_ce) & (ap_ST_fsm_state40 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_fu_944_p2 = ((p_Result_9_fu_935_p4 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_950_p2 = ((p_Result_9_fu_935_p4 == 4'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_929_p2 = ((p_Result_8_fu_920_p4 == 3'd7) ? 1'b1 : 1'b0);

assign addr10_cast_fu_1194_p0 = grp_fu_1105_p2;

assign addr10_cast_fu_1194_p1 = addr10_cast_fu_1194_p0;

assign addr11_cast_fu_1205_p0 = grp_fu_1105_p2;

assign addr11_cast_fu_1205_p1 = addr11_cast_fu_1205_p0;

assign addr12_cast_fu_1216_p0 = grp_fu_1105_p2;

assign addr12_cast_fu_1216_p1 = addr12_cast_fu_1216_p0;

assign addr13_cast_fu_1227_p0 = grp_fu_1105_p2;

assign addr13_cast_fu_1227_p1 = addr13_cast_fu_1227_p0;

assign addr14_cast_fu_1237_p0 = grp_fu_1105_p2;

assign addr14_cast_fu_1237_p1 = addr14_cast_fu_1237_p0;

assign addr1_cast_fu_1446_p0 = grp_fu_1105_p2;

assign addr1_cast_fu_1446_p1 = addr1_cast_fu_1446_p0;

assign addr2_cast_fu_1467_p0 = grp_fu_1105_p2;

assign addr2_cast_fu_1467_p1 = addr2_cast_fu_1467_p0;

assign addr3_cast_fu_1482_p0 = grp_fu_1105_p2;

assign addr3_cast_fu_1482_p1 = addr3_cast_fu_1482_p0;

assign addr4_cast_fu_1509_p0 = grp_fu_1105_p2;

assign addr4_cast_fu_1509_p1 = addr4_cast_fu_1509_p0;

assign addr5_cast_fu_1362_p0 = grp_fu_1105_p2;

assign addr5_cast_fu_1362_p1 = addr5_cast_fu_1362_p0;

assign addr6_cast_fu_1373_p0 = grp_fu_1105_p2;

assign addr6_cast_fu_1373_p1 = addr6_cast_fu_1373_p0;

assign addr7_cast_fu_1384_p0 = grp_fu_1105_p2;

assign addr7_cast_fu_1384_p1 = addr7_cast_fu_1384_p0;

assign addr8_cast_fu_1395_p0 = grp_fu_1105_p2;

assign addr8_cast_fu_1395_p1 = addr8_cast_fu_1395_p0;

assign addr9_cast_fu_1405_p0 = grp_fu_1105_p2;

assign addr9_cast_fu_1405_p1 = addr9_cast_fu_1405_p0;

assign addr_cast_fu_1111_p0 = grp_fu_1105_p2;

assign addr_cast_fu_1111_p1 = addr_cast_fu_1111_p0;

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state23_io = ((ap_predicate_op269_write_state23 == 1'b1) & (yn_0_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_block_state34_io = (((woofer_enabled_fu_214 == 1'd1) & (yn_1_V_1_ack_in == 1'b0)) | ((tweeter_enabled_load_reg_1799 == 1'd1) & (yn_0_V_1_ack_in == 1'b0)));
end

always @ (*) begin
    ap_block_state35 = ((yn_1_V_1_ack_in == 1'b0) | (yn_0_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_block_state35_io = ((ap_predicate_op329_write_state35 == 1'b1) & (yn_1_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_condition_110 = ((~((xn_0_V_0_vld_in == 1'b0) & (xn_0_V_0_ack_out == 1'b1)) & ~((xn_0_V_0_ack_out == 1'b0) & (xn_0_V_0_vld_in == 1'b1)) & (xn_0_V_0_state == 2'd3)) | ((xn_0_V_0_state == 2'd1) & (xn_0_V_0_ack_out == 1'b1)) | ((xn_0_V_0_state == 2'd2) & (xn_0_V_0_vld_in == 1'b1)));
end

always @ (*) begin
    ap_condition_115 = (((xn_0_V_0_state == 2'd1) & (xn_0_V_0_ack_out == 1'b0)) | ((xn_0_V_0_state == 2'd3) & (xn_0_V_0_ack_out == 1'b0) & (xn_0_V_0_vld_in == 1'b1)));
end

always @ (*) begin
    ap_condition_120 = (((xn_0_V_0_state == 2'd2) & (xn_0_V_0_vld_in == 1'b0)) | ((xn_0_V_0_state == 2'd3) & (xn_0_V_0_vld_in == 1'b0) & (xn_0_V_0_ack_out == 1'b1)));
end

always @ (*) begin
    ap_condition_1341 = (~(ap_phi_mux_i2_phi_fu_648_p4 == 4'd0) & ~(ap_phi_mux_i2_phi_fu_648_p4 == 4'd10) & ~(ap_phi_mux_i2_phi_fu_648_p4 == 4'd9) & ~(ap_phi_mux_i2_phi_fu_648_p4 == 4'd8) & ~(ap_phi_mux_i2_phi_fu_648_p4 == 4'd7) & ~(ap_phi_mux_i2_phi_fu_648_p4 == 4'd6) & ~(ap_phi_mux_i2_phi_fu_648_p4 == 4'd5) & ~(ap_phi_mux_i2_phi_fu_648_p4 == 4'd4) & ~(ap_phi_mux_i2_phi_fu_648_p4 == 4'd3) & ~(ap_phi_mux_i2_phi_fu_648_p4 == 4'd2) & ~(ap_phi_mux_i2_phi_fu_648_p4 == 4'd1));
end

always @ (*) begin
    ap_condition_1349 = ((buf_clr_read_read_fu_354_p2 == 1'd1) & (xn_0_V_0_vld_out == 1'b1) & (ap_ST_fsm_state2 == ap_CS_fsm));
end

always @ (*) begin
    ap_condition_1353 = ((tmp_5_fu_1080_p2 == 1'd1) & (buf_clr == 1'd0) & (xn_0_V_0_vld_out == 1'b1) & (ap_ST_fsm_state2 == ap_CS_fsm));
end

always @ (*) begin
    ap_condition_1358 = ((newSel4_fu_1341_p3 == 1'd1) & (exitcond_fu_1424_p2 == 1'd0) & (1'b0 == ap_block_state23_io) & (ap_ST_fsm_state23 == ap_CS_fsm));
end

always @ (*) begin
    ap_condition_190 = ((~((yn_0_V_1_vld_in == 1'b0) & (yn_0_V_1_ack_out == 1'b1)) & ~((yn_0_V_1_ack_out == 1'b0) & (yn_0_V_1_vld_in == 1'b1)) & (yn_0_V_1_state == 2'd3)) | ((yn_0_V_1_state == 2'd1) & (yn_0_V_1_ack_out == 1'b1)) | ((yn_0_V_1_state == 2'd2) & (yn_0_V_1_vld_in == 1'b1)));
end

always @ (*) begin
    ap_condition_195 = (((yn_0_V_1_state == 2'd1) & (yn_0_V_1_ack_out == 1'b0)) | ((yn_0_V_1_state == 2'd3) & (yn_0_V_1_ack_out == 1'b0) & (yn_0_V_1_vld_in == 1'b1)));
end

always @ (*) begin
    ap_condition_200 = (((yn_0_V_1_state == 2'd2) & (yn_0_V_1_vld_in == 1'b0)) | ((yn_0_V_1_state == 2'd3) & (yn_0_V_1_vld_in == 1'b0) & (yn_0_V_1_ack_out == 1'b1)));
end

always @ (*) begin
    ap_condition_267 = ((~((yn_1_V_1_vld_in == 1'b0) & (yn_1_V_1_ack_out == 1'b1)) & ~((yn_1_V_1_ack_out == 1'b0) & (yn_1_V_1_vld_in == 1'b1)) & (yn_1_V_1_state == 2'd3)) | ((yn_1_V_1_state == 2'd1) & (yn_1_V_1_ack_out == 1'b1)) | ((yn_1_V_1_state == 2'd2) & (yn_1_V_1_vld_in == 1'b1)));
end

always @ (*) begin
    ap_condition_272 = (((yn_1_V_1_state == 2'd1) & (yn_1_V_1_ack_out == 1'b0)) | ((yn_1_V_1_state == 2'd3) & (yn_1_V_1_ack_out == 1'b0) & (yn_1_V_1_vld_in == 1'b1)));
end

always @ (*) begin
    ap_condition_277 = (((yn_1_V_1_state == 2'd2) & (yn_1_V_1_vld_in == 1'b0)) | ((yn_1_V_1_state == 2'd3) & (yn_1_V_1_vld_in == 1'b0) & (yn_1_V_1_ack_out == 1'b1)));
end

always @ (*) begin
    ap_condition_410 = ((exitcond3_fu_1146_p2 == 1'd0) & (1'b1 == ap_ce) & (ap_ST_fsm_state11 == ap_CS_fsm));
end

assign ap_phi_mux_cfg_filt_en_load_phi_phi_fu_658_p24 = cfg_filt_en_load_phi_reg_655;

assign ap_phi_mux_i2_phi_fu_648_p4 = i2_reg_644;

always @ (*) begin
    ap_predicate_op269_write_state23 = ((tweeter_enabled_fu_206 == 1'd1) & (exitcond_fu_1424_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op329_write_state35 = ((woofer_enabled_load_reg_1848 == 1'd1) & (buf_clr == 1'd0));
end

assign brmerge40_demorgan_i_fu_1014_p2 = (newsignbit_fu_893_p3 & deleted_ones_fu_976_p3);

assign brmerge_i_fu_996_p2 = (p_not_i_fu_990_p2 | newsignbit_fu_893_p3);

assign brmerge_i_i_fu_1038_p2 = (underflow_fu_1032_p2 | overflow_fu_1008_p2);

assign buf_clr_read_read_fu_354_p2 = buf_clr;

assign carry_fu_907_p2 = (tmp_8_fu_901_p2 & tmp_23_fu_886_p3);

assign deleted_ones_fu_976_p3 = ((carry_fu_907_p2[0:0] === 1'b1) ? p_41_i_fu_970_p2 : Range1_all_ones_fu_944_p2);

assign deleted_zeros_fu_956_p3 = ((carry_fu_907_p2[0:0] === 1'b1) ? Range1_all_ones_fu_944_p2 : Range1_all_zeros_fu_950_p2);

assign exitcond1_fu_1247_p2 = ((i_reg_697 == 5'd18) ? 1'b1 : 1'b0);

assign exitcond2_fu_1487_p2 = ((i1_reg_709 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond3_fu_1146_p2 = ((i2_reg_644 == 4'd12) ? 1'b1 : 1'b0);

assign exitcond_fu_1424_p2 = ((i3_reg_685 == 5'd18) ? 1'b1 : 1'b0);

assign grp_filter_c_engine_fu_720_ap_start = grp_filter_c_engine_fu_720_ap_start_reg;

assign grp_filter_c_engine_fu_720_buf_xn_2_V_read = reg_783;

assign grp_fu_1096_p0 = (grp_fu_1440_p0 + 5'd1);

assign grp_fu_1105_p2 = (grp_fu_1105_p0 + grp_fu_1105_p1);

assign grp_fu_1440_p2 = (grp_fu_1440_p0 + 5'd1);

assign newSel1_fu_1309_p3 = ((sel_tmp4_fu_1279_p2[0:0] === 1'b1) ? cfg_filt_en_15 : cfg_filt_en_14);

assign newSel2_fu_1321_p3 = ((sel_tmp_fu_1267_p2[0:0] === 1'b1) ? cfg_filt_en_13 : cfg_filt_en_17);

assign newSel3_fu_1327_p3 = ((or_cond_fu_1303_p2[0:0] === 1'b1) ? newSel_fu_1297_p3 : newSel1_fu_1309_p3);

assign newSel4_fu_1341_p3 = ((or_cond2_fu_1335_p2[0:0] === 1'b1) ? newSel3_fu_1327_p3 : newSel2_fu_1321_p3);

assign newSel_fu_1297_p3 = ((sel_tmp8_fu_1291_p2[0:0] === 1'b1) ? cfg_filt_en_12 : cfg_filt_en_16);

assign newsignbit_fu_893_p3 = grp_fu_1105_p2[32'd23];

assign or_cond1_fu_1315_p2 = (sel_tmp4_fu_1279_p2 | sel_tmp2_fu_1273_p2);

assign or_cond2_fu_1335_p2 = (or_cond_fu_1303_p2 | or_cond1_fu_1315_p2);

assign or_cond_fu_1303_p2 = (sel_tmp8_fu_1291_p2 | sel_tmp6_fu_1285_p2);

assign overflow_fu_1008_p2 = (tmp_4_fu_1002_p2 & brmerge_i_fu_996_p2);

assign p_38_i_fu_984_p2 = (carry_fu_907_p2 & Range1_all_ones_fu_944_p2);

assign p_41_i_fu_970_p2 = (tmp_6_fu_964_p2 & Range2_all_ones_fu_929_p2);

assign p_Result_8_fu_920_p4 = {{p_Val2_s_fu_1514_p2[29:27]}};

assign p_Result_9_fu_935_p4 = {{p_Val2_s_fu_1514_p2[29:26]}};

assign p_Val2_2_37_fu_1064_p3 = ((underflow_fu_1032_p2[0:0] === 1'b1) ? 24'd8388608 : grp_fu_1105_p2);

assign p_Val2_2_mux_fu_1056_p3 = ((brmerge_i_i_fu_1038_p2[0:0] === 1'b1) ? 24'd8388607 : grp_fu_1105_p2);

assign p_Val2_s_fu_1514_p1 = p_Val2_s_fu_1514_p10;

assign p_Val2_s_fu_1514_p10 = cfg_gain_val_V;

assign p_not_i_fu_990_p2 = (deleted_zeros_fu_956_p3 ^ 1'd1);

assign sel_tmp2_fu_1273_p2 = ((i3_reg_685 == 5'd14) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_1279_p2 = ((i3_reg_685 == 5'd15) ? 1'b1 : 1'b0);

assign sel_tmp6_fu_1285_p2 = ((i3_reg_685 == 5'd16) ? 1'b1 : 1'b0);

assign sel_tmp8_fu_1291_p2 = ((i3_reg_685 == 5'd12) ? 1'b1 : 1'b0);

assign sel_tmp_fu_1267_p2 = ((i3_reg_685 == 5'd13) ? 1'b1 : 1'b0);

assign signbit_fu_853_p3 = p_Val2_s_fu_1514_p2[32'd29];

assign tmp1_fu_1044_p2 = (tmp_4_fu_1002_p2 | brmerge40_demorgan_i_fu_1014_p2);

assign tmp_11_cast1_fu_1162_p1 = i2_reg_644;

assign tmp_11_cast2_fu_1166_p1 = i2_reg_644;

assign tmp_11_cast_fu_1170_p1 = i2_reg_644;

assign tmp_11_fu_1158_p1 = i2_reg_644;

assign tmp_12_cast1_fu_1259_p1 = i3_reg_685;

assign tmp_12_cast_fu_1263_p1 = i3_reg_685;

assign tmp_12_fu_1253_p1 = i3_reg_685;

assign tmp_22_fu_869_p3 = p_Val2_s_fu_1514_p2[32'd1];

assign tmp_23_fu_886_p3 = p_Val2_s_fu_1514_p2[32'd25];

assign tmp_25_fu_913_p3 = p_Val2_s_fu_1514_p2[32'd26];

assign tmp_3_fu_876_p1 = tmp_22_fu_869_p3;

assign tmp_4_fu_1002_p2 = (signbit_fu_853_p3 ^ 1'd1);

assign tmp_5_fu_1080_p2 = ((cfg_delay_val_V == 5'd0) ? 1'b1 : 1'b0);

assign tmp_6_fu_964_p2 = (tmp_25_fu_913_p3 ^ 1'd1);

assign tmp_7_cast_fu_1102_p0 = reg_783;

assign tmp_7_cast_fu_1102_p1 = tmp_7_cast_fu_1102_p0;

assign tmp_8_fu_901_p2 = (newsignbit_fu_893_p3 ^ 1'd1);

assign tmp_9_cast1_fu_1457_p1 = i_reg_697;

assign tmp_9_cast_fu_1436_p1 = i_reg_697;

assign tmp_9_fu_1472_p1 = i_reg_697;

assign tmp_cast_fu_1499_p1 = i1_reg_709;

assign tmp_demorgan_fu_1020_p2 = (p_38_i_fu_984_p2 | brmerge40_demorgan_i_fu_1014_p2);

assign tmp_fu_1026_p2 = (tmp_demorgan_fu_1020_p2 ^ 1'd1);

assign underflow_fu_1032_p2 = (tmp_fu_1026_p2 & signbit_fu_853_p3);

assign underflow_not_fu_1050_p2 = (tmp1_fu_1044_p2 | p_38_i_fu_984_p2);

assign xn_0_V_0_ack_in = xn_0_V_0_state[1'd1];

assign xn_0_V_0_load_A = (xn_0_V_0_state_cmp_full & ~xn_0_V_0_sel_wr);

assign xn_0_V_0_load_B = (xn_0_V_0_state_cmp_full & xn_0_V_0_sel_wr);

assign xn_0_V_0_sel = xn_0_V_0_sel_rd;

assign xn_0_V_0_state_cmp_full = ((xn_0_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign xn_0_V_0_vld_in = xn_0_V_TVALID;

assign xn_0_V_0_vld_out = xn_0_V_0_state[1'd0];

assign xn_0_V_TREADY = xn_0_V_0_state[1'd1];

assign xn_woofer_V_3_fu_1072_p3 = ((underflow_not_fu_1050_p2[0:0] === 1'b1) ? p_Val2_2_mux_fu_1056_p3 : p_Val2_2_37_fu_1064_p3);

assign xn_woofer_V_3_xn_woo_fu_1116_p3 = ((cfg_delay_sel[0:0] === 1'b1) ? reg_824 : mem_q0);

assign xn_woofer_V_xn_woofe_fu_1123_p3 = ((cfg_delay_sel[0:0] === 1'b1) ? mem_q0 : reg_824);

assign yn_0_V_1_ack_in = yn_0_V_1_state[1'd1];

assign yn_0_V_1_ack_out = yn_0_V_TREADY;

assign yn_0_V_1_load_A = (yn_0_V_1_state_cmp_full & ~yn_0_V_1_sel_wr);

assign yn_0_V_1_load_B = (yn_0_V_1_state_cmp_full & yn_0_V_1_sel_wr);

assign yn_0_V_1_sel = yn_0_V_1_sel_rd;

assign yn_0_V_1_state_cmp_full = ((yn_0_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign yn_0_V_1_vld_out = yn_0_V_1_state[1'd0];

assign yn_0_V_TDATA = yn_0_V_1_data_out;

assign yn_0_V_TVALID = yn_0_V_1_state[1'd0];

assign yn_1_V_1_ack_in = yn_1_V_1_state[1'd1];

assign yn_1_V_1_ack_out = yn_1_V_TREADY;

assign yn_1_V_1_load_A = (yn_1_V_1_state_cmp_full & ~yn_1_V_1_sel_wr);

assign yn_1_V_1_load_B = (yn_1_V_1_state_cmp_full & yn_1_V_1_sel_wr);

assign yn_1_V_1_sel = yn_1_V_1_sel_rd;

assign yn_1_V_1_state_cmp_full = ((yn_1_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign yn_1_V_1_vld_out = yn_1_V_1_state[1'd0];

assign yn_1_V_TDATA = yn_1_V_1_data_out;

assign yn_1_V_TVALID = yn_1_V_1_state[1'd0];

always @ (posedge ap_clk) begin
    reg_1719[6] <= 1'b0;
end

endmodule //Block_codeRepl5_proc
