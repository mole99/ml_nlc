// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "filter_c_engine.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic filter_c_engine::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic filter_c_engine::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> filter_c_engine::ap_ST_fsm_state1 = "0000";
const sc_lv<4> filter_c_engine::ap_ST_fsm_state2 = "1";
const sc_lv<4> filter_c_engine::ap_ST_fsm_state3 = "10";
const sc_lv<4> filter_c_engine::ap_ST_fsm_state4 = "11";
const sc_lv<4> filter_c_engine::ap_ST_fsm_state5 = "100";
const sc_lv<4> filter_c_engine::ap_ST_fsm_state6 = "101";
const sc_lv<4> filter_c_engine::ap_ST_fsm_state7 = "110";
const sc_lv<4> filter_c_engine::ap_ST_fsm_state8 = "111";
const sc_lv<4> filter_c_engine::ap_ST_fsm_state9 = "1000";
const sc_lv<32> filter_c_engine::ap_const_lv32_17 = "10111";
const sc_lv<32> filter_c_engine::ap_const_lv32_B = "1011";
const sc_lv<32> filter_c_engine::ap_const_lv32_C = "1100";
const sc_lv<32> filter_c_engine::ap_const_lv32_23 = "100011";
const sc_lv<32> filter_c_engine::ap_const_lv32_27 = "100111";
const sc_lv<1> filter_c_engine::ap_const_lv1_1 = "1";
const sc_lv<32> filter_c_engine::ap_const_lv32_24 = "100100";
const sc_lv<4> filter_c_engine::ap_const_lv4_F = "1111";
const sc_lv<32> filter_c_engine::ap_const_lv32_25 = "100101";
const sc_lv<3> filter_c_engine::ap_const_lv3_7 = "111";
const sc_lv<4> filter_c_engine::ap_const_lv4_0 = "0000";
const sc_lv<24> filter_c_engine::ap_const_lv24_800000 = "100000000000000000000000";
const sc_lv<32> filter_c_engine::ap_const_lv32_E = "1110";
const sc_lv<32> filter_c_engine::ap_const_lv32_D = "1101";
const sc_lv<32> filter_c_engine::ap_const_lv32_29 = "101001";
const sc_lv<32> filter_c_engine::ap_const_lv32_26 = "100110";
const sc_lv<24> filter_c_engine::ap_const_lv24_7FFFFF = "11111111111111111111111";
const bool filter_c_engine::ap_const_boolean_1 = true;

filter_c_engine::filter_c_engine(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_OP1_V_1_fu_477_p1);
    sensitive << ( xn_0_scaled_V_reg_188 );

    SC_METHOD(thread_OP1_V_2_fu_468_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( buf_xn_1_V_read );

    SC_METHOD(thread_OP1_V_2_fu_468_p1);
    sensitive << ( OP1_V_2_fu_468_p0 );

    SC_METHOD(thread_OP1_V_3_fu_492_p1);
    sensitive << ( buf_xn_2_V_read );

    SC_METHOD(thread_OP1_V_4_fu_512_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( buf_yn_1_V_read );

    SC_METHOD(thread_OP1_V_4_fu_512_p1);
    sensitive << ( OP1_V_4_fu_512_p0 );

    SC_METHOD(thread_OP1_V_5_fu_527_p1);
    sensitive << ( buf_yn_2_V_read );

    SC_METHOD(thread_OP1_V_fu_507_p1);
    sensitive << ( coeff_gain_V_read );

    SC_METHOD(thread_OP2_V_1_fu_472_p1);
    sensitive << ( coeff_b0_V_read );

    SC_METHOD(thread_OP2_V_2_fu_482_p1);
    sensitive << ( coeff_b1_V_read );

    SC_METHOD(thread_OP2_V_3_fu_497_p1);
    sensitive << ( coeff_b2_V_read );

    SC_METHOD(thread_OP2_V_4_fu_517_p1);
    sensitive << ( coeff_a1_n_V_read );

    SC_METHOD(thread_OP2_V_5_fu_532_p1);
    sensitive << ( coeff_a2_n_V_read );

    SC_METHOD(thread_OP2_V_fu_241_p1);
    sensitive << ( xn_0_V );

    SC_METHOD(thread_Range1_all_ones_1_fu_588_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_ce );
    sensitive << ( tmp_11_fu_594_p4 );

    SC_METHOD(thread_Range1_all_ones_fu_316_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_ce );
    sensitive << ( tmp_2_fu_306_p4 );

    SC_METHOD(thread_Range1_all_zeros_1_fu_610_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_ce );
    sensitive << ( tmp_11_fu_594_p4 );

    SC_METHOD(thread_Range1_all_zeros_fu_338_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_ce );
    sensitive << ( tmp_2_fu_306_p4 );

    SC_METHOD(thread_Range2_all_ones_1_fu_604_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_ce );
    sensitive << ( tmp_7_fu_578_p4 );

    SC_METHOD(thread_Range2_all_ones_fu_332_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_ce );
    sensitive << ( tmp_1_fu_322_p4 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_ce );
    sensitive << ( grp_fu_444_p3 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_ce );
    sensitive << ( grp_fu_444_p3 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( buf_yn_1_V_read );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_ce );
    sensitive << ( xn_0_scaled_V_reg_188 );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( ap_CS_fsm );
    sensitive << ( buf_xn_1_V_read );
    sensitive << ( ap_ce );

    SC_METHOD(thread_brmerge40_demorgan_i_1_fu_700_p2);
    sensitive << ( grp_fu_228_p3 );
    sensitive << ( deleted_ones_1_fu_665_p3 );

    SC_METHOD(thread_brmerge40_demorgan_i_fu_372_p2);
    sensitive << ( grp_fu_228_p3 );
    sensitive << ( deleted_ones_fu_344_p3 );

    SC_METHOD(thread_brmerge_i1_fu_706_p2);
    sensitive << ( grp_fu_228_p3 );
    sensitive << ( p_not_i1_fu_677_p2 );

    SC_METHOD(thread_brmerge_i_fu_408_p2);
    sensitive << ( grp_fu_228_p3 );
    sensitive << ( p_not_i_fu_352_p2 );

    SC_METHOD(thread_brmerge_i_i1_fu_729_p2);
    sensitive << ( underflow_1_fu_718_p2 );
    sensitive << ( overflow_1_fu_660_p2 );

    SC_METHOD(thread_brmerge_i_i_fu_432_p2);
    sensitive << ( underflow_fu_396_p2 );
    sensitive << ( overflow_fu_420_p2 );

    SC_METHOD(thread_carry_1_fu_634_p2);
    sensitive << ( grp_fu_286_p2 );
    sensitive << ( tmp_18_fu_640_p3 );

    SC_METHOD(thread_carry_fu_358_p2);
    sensitive << ( tmp_13_fu_278_p3 );
    sensitive << ( grp_fu_286_p2 );

    SC_METHOD(thread_deleted_ones_1_fu_665_p3);
    sensitive << ( Range1_all_ones_1_reg_829 );
    sensitive << ( carry_1_fu_634_p2 );
    sensitive << ( p_41_i1_fu_694_p2 );

    SC_METHOD(thread_deleted_ones_fu_344_p3);
    sensitive << ( carry_fu_358_p2 );
    sensitive << ( p_41_i_fu_292_p2 );
    sensitive << ( Range1_all_ones_fu_316_p2 );

    SC_METHOD(thread_deleted_zeros_1_fu_648_p3);
    sensitive << ( Range1_all_ones_1_reg_829 );
    sensitive << ( Range1_all_zeros_1_reg_836 );
    sensitive << ( carry_1_fu_634_p2 );

    SC_METHOD(thread_deleted_zeros_fu_364_p3);
    sensitive << ( carry_fu_358_p2 );
    sensitive << ( Range1_all_ones_fu_316_p2 );
    sensitive << ( Range1_all_zeros_fu_338_p2 );

    SC_METHOD(thread_grp_fu_164_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_178 );
    sensitive << ( p_Val2_10_reg_808 );
    sensitive << ( tmp_17_cast_fu_487_p1 );
    sensitive << ( tmp_20_cast_cast_fu_522_p1 );
    sensitive << ( tmp4_cast_fu_565_p1 );
    sensitive << ( grp_fu_164_p00 );

    SC_METHOD(thread_grp_fu_164_p00);
    sensitive << ( grp_fu_194_p2 );

    SC_METHOD(thread_grp_fu_164_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_191 );
    sensitive << ( tmp_s_fu_616_p1 );
    sensitive << ( tmp_19_cast_fu_502_p1 );
    sensitive << ( tmp_18_cast_fu_236_p1 );
    sensitive << ( tmp_21_cast_cast_fu_537_p1 );
    sensitive << ( p_Val2_8_cast_fu_560_p1 );
    sensitive << ( tmp_8_fu_273_p1 );

    SC_METHOD(thread_grp_fu_164_p2);
    sensitive << ( grp_fu_164_p0 );
    sensitive << ( grp_fu_164_p1 );

    SC_METHOD(thread_grp_fu_194_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( OP2_V_fu_241_p1 );
    sensitive << ( OP1_V_1_fu_477_p1 );
    sensitive << ( OP1_V_2_fu_468_p1 );
    sensitive << ( OP1_V_3_fu_492_p1 );
    sensitive << ( OP1_V_4_fu_512_p1 );
    sensitive << ( OP1_V_5_fu_527_p1 );

    SC_METHOD(thread_grp_fu_194_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( OP1_V_fu_507_p1 );
    sensitive << ( OP2_V_1_fu_472_p1 );
    sensitive << ( OP2_V_2_fu_482_p1 );
    sensitive << ( OP2_V_3_fu_497_p1 );
    sensitive << ( OP2_V_4_fu_517_p1 );
    sensitive << ( OP2_V_5_fu_532_p1 );

    SC_METHOD(thread_grp_fu_194_p2);
    sensitive << ( grp_fu_194_p0 );
    sensitive << ( grp_fu_194_p1 );

    SC_METHOD(thread_grp_fu_228_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_fu_164_p2 );

    SC_METHOD(thread_grp_fu_228_p3);
    sensitive << ( grp_fu_228_p1 );

    SC_METHOD(thread_grp_fu_286_p2);
    sensitive << ( grp_fu_228_p3 );

    SC_METHOD(thread_grp_fu_444_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( underflow_not_fu_438_p2 );
    sensitive << ( underflow_1_not_fu_735_p2 );

    SC_METHOD(thread_grp_fu_444_p3);
    sensitive << ( grp_fu_444_p0 );
    sensitive << ( grp_fu_741_p3 );
    sensitive << ( grp_fu_452_p3 );

    SC_METHOD(thread_grp_fu_452_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( underflow_fu_396_p2 );
    sensitive << ( underflow_1_fu_718_p2 );

    SC_METHOD(thread_grp_fu_452_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_fu_164_p2 );

    SC_METHOD(thread_grp_fu_452_p3);
    sensitive << ( grp_fu_452_p0 );
    sensitive << ( grp_fu_452_p2 );

    SC_METHOD(thread_grp_fu_741_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( brmerge_i_i1_fu_729_p2 );
    sensitive << ( brmerge_i_i_fu_432_p2 );

    SC_METHOD(thread_grp_fu_741_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_fu_164_p2 );

    SC_METHOD(thread_grp_fu_741_p3);
    sensitive << ( grp_fu_741_p0 );
    sensitive << ( grp_fu_741_p2 );

    SC_METHOD(thread_overflow_1_fu_660_p2);
    sensitive << ( brmerge_i1_fu_706_p2 );
    sensitive << ( tmp_12_fu_628_p2 );

    SC_METHOD(thread_overflow_fu_420_p2);
    sensitive << ( brmerge_i_fu_408_p2 );
    sensitive << ( tmp_6_fu_390_p2 );

    SC_METHOD(thread_p_38_i1_fu_672_p2);
    sensitive << ( Range1_all_ones_1_reg_829 );
    sensitive << ( carry_1_fu_634_p2 );

    SC_METHOD(thread_p_38_i_fu_402_p2);
    sensitive << ( carry_fu_358_p2 );
    sensitive << ( Range1_all_ones_fu_316_p2 );

    SC_METHOD(thread_p_41_i1_fu_694_p2);
    sensitive << ( Range2_all_ones_1_reg_824 );
    sensitive << ( tmp_10_fu_654_p2 );

    SC_METHOD(thread_p_41_i_fu_292_p2);
    sensitive << ( Range2_all_ones_fu_332_p2 );
    sensitive << ( tmp_4_fu_378_p2 );

    SC_METHOD(thread_p_Val2_10_fu_542_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_fu_164_p2 );

    SC_METHOD(thread_p_Val2_8_cast_fu_560_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_178 );

    SC_METHOD(thread_p_Val2_8_cast_fu_560_p1);
    sensitive << ( p_Val2_8_cast_fu_560_p0 );

    SC_METHOD(thread_p_not_i1_fu_677_p2);
    sensitive << ( deleted_zeros_1_fu_648_p3 );

    SC_METHOD(thread_p_not_i_fu_352_p2);
    sensitive << ( deleted_zeros_fu_364_p3 );

    SC_METHOD(thread_signbit_fu_265_p3);
    sensitive << ( grp_fu_194_p2 );

    SC_METHOD(thread_tmp1_demorgan_fu_384_p2);
    sensitive << ( p_38_i_fu_402_p2 );
    sensitive << ( brmerge40_demorgan_i_fu_372_p2 );

    SC_METHOD(thread_tmp1_fu_414_p2);
    sensitive << ( tmp1_demorgan_fu_384_p2 );

    SC_METHOD(thread_tmp2_fu_426_p2);
    sensitive << ( brmerge40_demorgan_i_fu_372_p2 );
    sensitive << ( tmp_6_fu_390_p2 );

    SC_METHOD(thread_tmp4_cast_fu_565_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_191 );

    SC_METHOD(thread_tmp4_cast_fu_565_p1);
    sensitive << ( tmp4_cast_fu_565_p0 );

    SC_METHOD(thread_tmp5_demorgan_fu_683_p2);
    sensitive << ( p_38_i1_fu_672_p2 );
    sensitive << ( brmerge40_demorgan_i_1_fu_700_p2 );

    SC_METHOD(thread_tmp5_fu_712_p2);
    sensitive << ( tmp5_demorgan_fu_683_p2 );

    SC_METHOD(thread_tmp6_fu_723_p2);
    sensitive << ( tmp_12_fu_628_p2 );
    sensitive << ( brmerge40_demorgan_i_1_fu_700_p2 );

    SC_METHOD(thread_tmp_10_fu_654_p2);
    sensitive << ( tmp_20_fu_620_p3 );

    SC_METHOD(thread_tmp_11_fu_594_p4);
    sensitive << ( grp_fu_164_p2 );

    SC_METHOD(thread_tmp_12_fu_628_p2);
    sensitive << ( signbit_1_reg_818 );

    SC_METHOD(thread_tmp_13_fu_278_p3);
    sensitive << ( grp_fu_194_p2 );

    SC_METHOD(thread_tmp_15_fu_298_p3);
    sensitive << ( grp_fu_194_p2 );

    SC_METHOD(thread_tmp_17_cast_fu_487_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_171 );

    SC_METHOD(thread_tmp_17_cast_fu_487_p1);
    sensitive << ( tmp_17_cast_fu_487_p0 );

    SC_METHOD(thread_tmp_17_fu_552_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_fu_164_p2 );

    SC_METHOD(thread_tmp_18_cast_fu_236_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_191 );

    SC_METHOD(thread_tmp_18_cast_fu_236_p1);
    sensitive << ( tmp_18_cast_fu_236_p0 );

    SC_METHOD(thread_tmp_18_fu_640_p3);
    sensitive << ( reg_171 );

    SC_METHOD(thread_tmp_19_cast_fu_502_p1);
    sensitive << ( grp_fu_194_p2 );

    SC_METHOD(thread_tmp_1_fu_322_p4);
    sensitive << ( grp_fu_194_p2 );

    SC_METHOD(thread_tmp_20_cast_cast_fu_522_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_171 );

    SC_METHOD(thread_tmp_20_cast_cast_fu_522_p1);
    sensitive << ( tmp_20_cast_cast_fu_522_p0 );

    SC_METHOD(thread_tmp_20_fu_620_p3);
    sensitive << ( reg_171 );

    SC_METHOD(thread_tmp_21_cast_cast_fu_537_p1);
    sensitive << ( grp_fu_194_p2 );

    SC_METHOD(thread_tmp_2_fu_306_p4);
    sensitive << ( grp_fu_194_p2 );

    SC_METHOD(thread_tmp_4_fu_378_p2);
    sensitive << ( tmp_15_fu_298_p3 );

    SC_METHOD(thread_tmp_6_fu_390_p2);
    sensitive << ( signbit_fu_265_p3 );

    SC_METHOD(thread_tmp_7_fu_578_p4);
    sensitive << ( grp_fu_164_p2 );

    SC_METHOD(thread_tmp_8_fu_273_p1);
    sensitive << ( tmp_17_reg_813 );

    SC_METHOD(thread_tmp_fu_246_p3);
    sensitive << ( grp_fu_194_p2 );

    SC_METHOD(thread_tmp_s_fu_616_p1);
    sensitive << ( tmp_fu_246_p3 );

    SC_METHOD(thread_underflow_1_fu_718_p2);
    sensitive << ( signbit_1_reg_818 );
    sensitive << ( tmp5_fu_712_p2 );

    SC_METHOD(thread_underflow_1_not_fu_735_p2);
    sensitive << ( p_38_i1_fu_672_p2 );
    sensitive << ( tmp6_fu_723_p2 );

    SC_METHOD(thread_underflow_fu_396_p2);
    sensitive << ( signbit_fu_265_p3 );
    sensitive << ( tmp1_fu_414_p2 );

    SC_METHOD(thread_underflow_not_fu_438_p2);
    sensitive << ( p_38_i_fu_402_p2 );
    sensitive << ( tmp2_fu_426_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_ce );

    ap_CS_fsm = "0000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "filter_c_engine_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, xn_0_V, "(port)xn_0_V");
    sc_trace(mVcdFile, coeff_gain_V_read, "(port)coeff_gain_V_read");
    sc_trace(mVcdFile, coeff_b0_V_read, "(port)coeff_b0_V_read");
    sc_trace(mVcdFile, coeff_b1_V_read, "(port)coeff_b1_V_read");
    sc_trace(mVcdFile, coeff_b2_V_read, "(port)coeff_b2_V_read");
    sc_trace(mVcdFile, coeff_a1_n_V_read, "(port)coeff_a1_n_V_read");
    sc_trace(mVcdFile, coeff_a2_n_V_read, "(port)coeff_a2_n_V_read");
    sc_trace(mVcdFile, buf_yn_1_V_read, "(port)buf_yn_1_V_read");
    sc_trace(mVcdFile, buf_yn_2_V_read, "(port)buf_yn_2_V_read");
    sc_trace(mVcdFile, buf_xn_1_V_read, "(port)buf_xn_1_V_read");
    sc_trace(mVcdFile, buf_xn_2_V_read, "(port)buf_xn_2_V_read");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, grp_fu_194_p2, "grp_fu_194_p2");
    sc_trace(mVcdFile, reg_171, "reg_171");
    sc_trace(mVcdFile, grp_fu_164_p2, "grp_fu_164_p2");
    sc_trace(mVcdFile, reg_178, "reg_178");
    sc_trace(mVcdFile, grp_fu_444_p3, "grp_fu_444_p3");
    sc_trace(mVcdFile, xn_0_scaled_V_reg_188, "xn_0_scaled_V_reg_188");
    sc_trace(mVcdFile, reg_191, "reg_191");
    sc_trace(mVcdFile, p_Val2_10_reg_808, "p_Val2_10_reg_808");
    sc_trace(mVcdFile, tmp_17_reg_813, "tmp_17_reg_813");
    sc_trace(mVcdFile, signbit_1_reg_818, "signbit_1_reg_818");
    sc_trace(mVcdFile, Range2_all_ones_1_fu_604_p2, "Range2_all_ones_1_fu_604_p2");
    sc_trace(mVcdFile, Range2_all_ones_1_reg_824, "Range2_all_ones_1_reg_824");
    sc_trace(mVcdFile, Range1_all_ones_1_fu_588_p2, "Range1_all_ones_1_fu_588_p2");
    sc_trace(mVcdFile, Range1_all_ones_1_reg_829, "Range1_all_ones_1_reg_829");
    sc_trace(mVcdFile, Range1_all_zeros_1_fu_610_p2, "Range1_all_zeros_1_fu_610_p2");
    sc_trace(mVcdFile, Range1_all_zeros_1_reg_836, "Range1_all_zeros_1_reg_836");
    sc_trace(mVcdFile, grp_fu_164_p0, "grp_fu_164_p0");
    sc_trace(mVcdFile, tmp_17_cast_fu_487_p1, "tmp_17_cast_fu_487_p1");
    sc_trace(mVcdFile, tmp_20_cast_cast_fu_522_p1, "tmp_20_cast_cast_fu_522_p1");
    sc_trace(mVcdFile, tmp4_cast_fu_565_p1, "tmp4_cast_fu_565_p1");
    sc_trace(mVcdFile, grp_fu_164_p1, "grp_fu_164_p1");
    sc_trace(mVcdFile, tmp_s_fu_616_p1, "tmp_s_fu_616_p1");
    sc_trace(mVcdFile, tmp_19_cast_fu_502_p1, "tmp_19_cast_fu_502_p1");
    sc_trace(mVcdFile, tmp_18_cast_fu_236_p1, "tmp_18_cast_fu_236_p1");
    sc_trace(mVcdFile, tmp_21_cast_cast_fu_537_p1, "tmp_21_cast_cast_fu_537_p1");
    sc_trace(mVcdFile, p_Val2_8_cast_fu_560_p1, "p_Val2_8_cast_fu_560_p1");
    sc_trace(mVcdFile, tmp_8_fu_273_p1, "tmp_8_fu_273_p1");
    sc_trace(mVcdFile, grp_fu_194_p0, "grp_fu_194_p0");
    sc_trace(mVcdFile, OP2_V_fu_241_p1, "OP2_V_fu_241_p1");
    sc_trace(mVcdFile, OP1_V_1_fu_477_p1, "OP1_V_1_fu_477_p1");
    sc_trace(mVcdFile, OP1_V_2_fu_468_p1, "OP1_V_2_fu_468_p1");
    sc_trace(mVcdFile, OP1_V_3_fu_492_p1, "OP1_V_3_fu_492_p1");
    sc_trace(mVcdFile, OP1_V_4_fu_512_p1, "OP1_V_4_fu_512_p1");
    sc_trace(mVcdFile, OP1_V_5_fu_527_p1, "OP1_V_5_fu_527_p1");
    sc_trace(mVcdFile, grp_fu_194_p1, "grp_fu_194_p1");
    sc_trace(mVcdFile, OP1_V_fu_507_p1, "OP1_V_fu_507_p1");
    sc_trace(mVcdFile, OP2_V_1_fu_472_p1, "OP2_V_1_fu_472_p1");
    sc_trace(mVcdFile, OP2_V_2_fu_482_p1, "OP2_V_2_fu_482_p1");
    sc_trace(mVcdFile, OP2_V_3_fu_497_p1, "OP2_V_3_fu_497_p1");
    sc_trace(mVcdFile, OP2_V_4_fu_517_p1, "OP2_V_4_fu_517_p1");
    sc_trace(mVcdFile, OP2_V_5_fu_532_p1, "OP2_V_5_fu_532_p1");
    sc_trace(mVcdFile, grp_fu_228_p1, "grp_fu_228_p1");
    sc_trace(mVcdFile, tmp_18_cast_fu_236_p0, "tmp_18_cast_fu_236_p0");
    sc_trace(mVcdFile, grp_fu_228_p3, "grp_fu_228_p3");
    sc_trace(mVcdFile, Range2_all_ones_fu_332_p2, "Range2_all_ones_fu_332_p2");
    sc_trace(mVcdFile, tmp_4_fu_378_p2, "tmp_4_fu_378_p2");
    sc_trace(mVcdFile, tmp_2_fu_306_p4, "tmp_2_fu_306_p4");
    sc_trace(mVcdFile, tmp_1_fu_322_p4, "tmp_1_fu_322_p4");
    sc_trace(mVcdFile, carry_fu_358_p2, "carry_fu_358_p2");
    sc_trace(mVcdFile, p_41_i_fu_292_p2, "p_41_i_fu_292_p2");
    sc_trace(mVcdFile, Range1_all_ones_fu_316_p2, "Range1_all_ones_fu_316_p2");
    sc_trace(mVcdFile, deleted_zeros_fu_364_p3, "deleted_zeros_fu_364_p3");
    sc_trace(mVcdFile, tmp_13_fu_278_p3, "tmp_13_fu_278_p3");
    sc_trace(mVcdFile, grp_fu_286_p2, "grp_fu_286_p2");
    sc_trace(mVcdFile, Range1_all_zeros_fu_338_p2, "Range1_all_zeros_fu_338_p2");
    sc_trace(mVcdFile, deleted_ones_fu_344_p3, "deleted_ones_fu_344_p3");
    sc_trace(mVcdFile, tmp_15_fu_298_p3, "tmp_15_fu_298_p3");
    sc_trace(mVcdFile, p_38_i_fu_402_p2, "p_38_i_fu_402_p2");
    sc_trace(mVcdFile, brmerge40_demorgan_i_fu_372_p2, "brmerge40_demorgan_i_fu_372_p2");
    sc_trace(mVcdFile, signbit_fu_265_p3, "signbit_fu_265_p3");
    sc_trace(mVcdFile, tmp1_fu_414_p2, "tmp1_fu_414_p2");
    sc_trace(mVcdFile, p_not_i_fu_352_p2, "p_not_i_fu_352_p2");
    sc_trace(mVcdFile, tmp1_demorgan_fu_384_p2, "tmp1_demorgan_fu_384_p2");
    sc_trace(mVcdFile, brmerge_i_fu_408_p2, "brmerge_i_fu_408_p2");
    sc_trace(mVcdFile, tmp_6_fu_390_p2, "tmp_6_fu_390_p2");
    sc_trace(mVcdFile, underflow_fu_396_p2, "underflow_fu_396_p2");
    sc_trace(mVcdFile, overflow_fu_420_p2, "overflow_fu_420_p2");
    sc_trace(mVcdFile, tmp2_fu_426_p2, "tmp2_fu_426_p2");
    sc_trace(mVcdFile, grp_fu_444_p0, "grp_fu_444_p0");
    sc_trace(mVcdFile, underflow_not_fu_438_p2, "underflow_not_fu_438_p2");
    sc_trace(mVcdFile, underflow_1_not_fu_735_p2, "underflow_1_not_fu_735_p2");
    sc_trace(mVcdFile, grp_fu_741_p3, "grp_fu_741_p3");
    sc_trace(mVcdFile, grp_fu_452_p3, "grp_fu_452_p3");
    sc_trace(mVcdFile, grp_fu_452_p0, "grp_fu_452_p0");
    sc_trace(mVcdFile, underflow_1_fu_718_p2, "underflow_1_fu_718_p2");
    sc_trace(mVcdFile, grp_fu_452_p2, "grp_fu_452_p2");
    sc_trace(mVcdFile, OP1_V_2_fu_468_p0, "OP1_V_2_fu_468_p0");
    sc_trace(mVcdFile, tmp_17_cast_fu_487_p0, "tmp_17_cast_fu_487_p0");
    sc_trace(mVcdFile, OP1_V_4_fu_512_p0, "OP1_V_4_fu_512_p0");
    sc_trace(mVcdFile, tmp_20_cast_cast_fu_522_p0, "tmp_20_cast_cast_fu_522_p0");
    sc_trace(mVcdFile, p_Val2_10_fu_542_p1, "p_Val2_10_fu_542_p1");
    sc_trace(mVcdFile, tmp_17_fu_552_p1, "tmp_17_fu_552_p1");
    sc_trace(mVcdFile, p_Val2_8_cast_fu_560_p0, "p_Val2_8_cast_fu_560_p0");
    sc_trace(mVcdFile, tmp4_cast_fu_565_p0, "tmp4_cast_fu_565_p0");
    sc_trace(mVcdFile, tmp_11_fu_594_p4, "tmp_11_fu_594_p4");
    sc_trace(mVcdFile, tmp_7_fu_578_p4, "tmp_7_fu_578_p4");
    sc_trace(mVcdFile, tmp_fu_246_p3, "tmp_fu_246_p3");
    sc_trace(mVcdFile, tmp_18_fu_640_p3, "tmp_18_fu_640_p3");
    sc_trace(mVcdFile, carry_1_fu_634_p2, "carry_1_fu_634_p2");
    sc_trace(mVcdFile, tmp_20_fu_620_p3, "tmp_20_fu_620_p3");
    sc_trace(mVcdFile, brmerge_i1_fu_706_p2, "brmerge_i1_fu_706_p2");
    sc_trace(mVcdFile, tmp_12_fu_628_p2, "tmp_12_fu_628_p2");
    sc_trace(mVcdFile, p_41_i1_fu_694_p2, "p_41_i1_fu_694_p2");
    sc_trace(mVcdFile, deleted_zeros_1_fu_648_p3, "deleted_zeros_1_fu_648_p3");
    sc_trace(mVcdFile, p_38_i1_fu_672_p2, "p_38_i1_fu_672_p2");
    sc_trace(mVcdFile, brmerge40_demorgan_i_1_fu_700_p2, "brmerge40_demorgan_i_1_fu_700_p2");
    sc_trace(mVcdFile, tmp_10_fu_654_p2, "tmp_10_fu_654_p2");
    sc_trace(mVcdFile, deleted_ones_1_fu_665_p3, "deleted_ones_1_fu_665_p3");
    sc_trace(mVcdFile, p_not_i1_fu_677_p2, "p_not_i1_fu_677_p2");
    sc_trace(mVcdFile, tmp5_demorgan_fu_683_p2, "tmp5_demorgan_fu_683_p2");
    sc_trace(mVcdFile, tmp5_fu_712_p2, "tmp5_fu_712_p2");
    sc_trace(mVcdFile, overflow_1_fu_660_p2, "overflow_1_fu_660_p2");
    sc_trace(mVcdFile, tmp6_fu_723_p2, "tmp6_fu_723_p2");
    sc_trace(mVcdFile, grp_fu_741_p0, "grp_fu_741_p0");
    sc_trace(mVcdFile, brmerge_i_i1_fu_729_p2, "brmerge_i_i1_fu_729_p2");
    sc_trace(mVcdFile, brmerge_i_i_fu_432_p2, "brmerge_i_i_fu_432_p2");
    sc_trace(mVcdFile, grp_fu_741_p2, "grp_fu_741_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_164_p00, "grp_fu_164_p00");
#endif

    }
}

filter_c_engine::~filter_c_engine() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void filter_c_engine::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())) {
            ap_CS_fsm = ap_NS_fsm.read();
        }
    }
    if ((esl_seteq<1,4,4>(ap_ST_fsm_state7, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
        reg_171 =  (sc_lv<41>) (grp_fu_164_p2.read());
    } else if (((esl_seteq<1,4,4>(ap_ST_fsm_state2, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())) || 
                (esl_seteq<1,4,4>(ap_ST_fsm_state5, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())))) {
        reg_171 =  (sc_lv<41>) (grp_fu_194_p2.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())) {
        if (esl_seteq<1,4,4>(ap_ST_fsm_state6, ap_CS_fsm.read())) {
            reg_191 =  (sc_lv<41>) (grp_fu_164_p2.read());
        } else if (esl_seteq<1,4,4>(ap_ST_fsm_state3, ap_CS_fsm.read())) {
            reg_191 =  (sc_lv<41>) (grp_fu_194_p2.read());
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()) && esl_seteq<1,4,4>(ap_ST_fsm_state8, ap_CS_fsm.read()))) {
        Range1_all_ones_1_reg_829 = Range1_all_ones_1_fu_588_p2.read();
        Range1_all_zeros_1_reg_836 = Range1_all_zeros_1_fu_610_p2.read();
        Range2_all_ones_1_reg_824 = Range2_all_ones_1_fu_604_p2.read();
        signbit_1_reg_818 = grp_fu_164_p2.read().range(41, 41);
    }
    if ((esl_seteq<1,4,4>(ap_ST_fsm_state7, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
        p_Val2_10_reg_808 = p_Val2_10_fu_542_p1.read().range(37, 14);
        tmp_17_reg_813 = tmp_17_fu_552_p1.read().range(13, 13);
    }
    if (((esl_seteq<1,4,4>(ap_ST_fsm_state5, ap_CS_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())) || (esl_seteq<1,4,4>(ap_ST_fsm_state4, ap_CS_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())))) {
        reg_178 =  (sc_lv<41>) (grp_fu_164_p2.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()) && esl_seteq<1,4,4>(ap_ST_fsm_state1, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        xn_0_scaled_V_reg_188 = grp_fu_444_p3.read();
    }
}

void filter_c_engine::thread_OP1_V_1_fu_477_p1() {
    OP1_V_1_fu_477_p1 = esl_sext<40,24>(xn_0_scaled_V_reg_188.read());
}

void filter_c_engine::thread_OP1_V_2_fu_468_p0() {
    OP1_V_2_fu_468_p0 = buf_xn_1_V_read.read();
}

void filter_c_engine::thread_OP1_V_2_fu_468_p1() {
    OP1_V_2_fu_468_p1 = esl_sext<40,24>(OP1_V_2_fu_468_p0.read());
}

void filter_c_engine::thread_OP1_V_3_fu_492_p1() {
    OP1_V_3_fu_492_p1 = esl_sext<40,24>(buf_xn_2_V_read.read());
}

void filter_c_engine::thread_OP1_V_4_fu_512_p0() {
    OP1_V_4_fu_512_p0 = buf_yn_1_V_read.read();
}

void filter_c_engine::thread_OP1_V_4_fu_512_p1() {
    OP1_V_4_fu_512_p1 = esl_sext<40,24>(OP1_V_4_fu_512_p0.read());
}

void filter_c_engine::thread_OP1_V_5_fu_527_p1() {
    OP1_V_5_fu_527_p1 = esl_sext<40,24>(buf_yn_2_V_read.read());
}

void filter_c_engine::thread_OP1_V_fu_507_p1() {
    OP1_V_fu_507_p1 = esl_sext<40,16>(coeff_gain_V_read.read());
}

void filter_c_engine::thread_OP2_V_1_fu_472_p1() {
    OP2_V_1_fu_472_p1 = esl_sext<40,16>(coeff_b0_V_read.read());
}

void filter_c_engine::thread_OP2_V_2_fu_482_p1() {
    OP2_V_2_fu_482_p1 = esl_sext<40,16>(coeff_b1_V_read.read());
}

void filter_c_engine::thread_OP2_V_3_fu_497_p1() {
    OP2_V_3_fu_497_p1 = esl_sext<40,16>(coeff_b2_V_read.read());
}

void filter_c_engine::thread_OP2_V_4_fu_517_p1() {
    OP2_V_4_fu_517_p1 = esl_sext<40,16>(coeff_a1_n_V_read.read());
}

void filter_c_engine::thread_OP2_V_5_fu_532_p1() {
    OP2_V_5_fu_532_p1 = esl_sext<40,16>(coeff_a2_n_V_read.read());
}

void filter_c_engine::thread_OP2_V_fu_241_p1() {
    OP2_V_fu_241_p1 = esl_sext<40,24>(xn_0_V.read());
}

void filter_c_engine::thread_Range1_all_ones_1_fu_588_p2() {
    Range1_all_ones_1_fu_588_p2 = (!tmp_11_fu_594_p4.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<1>(): sc_lv<1>(tmp_11_fu_594_p4.read() == ap_const_lv4_F);
}

void filter_c_engine::thread_Range1_all_ones_fu_316_p2() {
    Range1_all_ones_fu_316_p2 = (!tmp_2_fu_306_p4.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_306_p4.read() == ap_const_lv4_F);
}

void filter_c_engine::thread_Range1_all_zeros_1_fu_610_p2() {
    Range1_all_zeros_1_fu_610_p2 = (!tmp_11_fu_594_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_11_fu_594_p4.read() == ap_const_lv4_0);
}

void filter_c_engine::thread_Range1_all_zeros_fu_338_p2() {
    Range1_all_zeros_fu_338_p2 = (!tmp_2_fu_306_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_306_p4.read() == ap_const_lv4_0);
}

void filter_c_engine::thread_Range2_all_ones_1_fu_604_p2() {
    Range2_all_ones_1_fu_604_p2 = (!tmp_7_fu_578_p4.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_578_p4.read() == ap_const_lv3_7);
}

void filter_c_engine::thread_Range2_all_ones_fu_332_p2() {
    Range2_all_ones_fu_332_p2 = (!tmp_1_fu_322_p4.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_322_p4.read() == ap_const_lv3_7);
}

void filter_c_engine::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,4,4>(ap_ST_fsm_state1, ap_CS_fsm.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()) && 
          esl_seteq<1,4,4>(ap_ST_fsm_state9, ap_CS_fsm.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void filter_c_engine::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,4,4>(ap_ST_fsm_state1, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void filter_c_engine::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()) && 
         esl_seteq<1,4,4>(ap_ST_fsm_state9, ap_CS_fsm.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void filter_c_engine::thread_ap_return_0() {
    ap_return_0 = grp_fu_444_p3.read();
}

void filter_c_engine::thread_ap_return_1() {
    ap_return_1 = grp_fu_444_p3.read();
}

void filter_c_engine::thread_ap_return_2() {
    ap_return_2 = buf_yn_1_V_read.read();
}

void filter_c_engine::thread_ap_return_3() {
    ap_return_3 = xn_0_scaled_V_reg_188.read();
}

void filter_c_engine::thread_ap_return_4() {
    ap_return_4 = buf_xn_1_V_read.read();
}

void filter_c_engine::thread_brmerge40_demorgan_i_1_fu_700_p2() {
    brmerge40_demorgan_i_1_fu_700_p2 = (grp_fu_228_p3.read() & deleted_ones_1_fu_665_p3.read());
}

void filter_c_engine::thread_brmerge40_demorgan_i_fu_372_p2() {
    brmerge40_demorgan_i_fu_372_p2 = (grp_fu_228_p3.read() & deleted_ones_fu_344_p3.read());
}

void filter_c_engine::thread_brmerge_i1_fu_706_p2() {
    brmerge_i1_fu_706_p2 = (grp_fu_228_p3.read() | p_not_i1_fu_677_p2.read());
}

void filter_c_engine::thread_brmerge_i_fu_408_p2() {
    brmerge_i_fu_408_p2 = (grp_fu_228_p3.read() | p_not_i_fu_352_p2.read());
}

void filter_c_engine::thread_brmerge_i_i1_fu_729_p2() {
    brmerge_i_i1_fu_729_p2 = (underflow_1_fu_718_p2.read() | overflow_1_fu_660_p2.read());
}

void filter_c_engine::thread_brmerge_i_i_fu_432_p2() {
    brmerge_i_i_fu_432_p2 = (underflow_fu_396_p2.read() | overflow_fu_420_p2.read());
}

void filter_c_engine::thread_carry_1_fu_634_p2() {
    carry_1_fu_634_p2 = (tmp_18_fu_640_p3.read() & grp_fu_286_p2.read());
}

void filter_c_engine::thread_carry_fu_358_p2() {
    carry_fu_358_p2 = (tmp_13_fu_278_p3.read() & grp_fu_286_p2.read());
}

void filter_c_engine::thread_deleted_ones_1_fu_665_p3() {
    deleted_ones_1_fu_665_p3 = (!carry_1_fu_634_p2.read()[0].is_01())? sc_lv<1>(): ((carry_1_fu_634_p2.read()[0].to_bool())? p_41_i1_fu_694_p2.read(): Range1_all_ones_1_reg_829.read());
}

void filter_c_engine::thread_deleted_ones_fu_344_p3() {
    deleted_ones_fu_344_p3 = (!carry_fu_358_p2.read()[0].is_01())? sc_lv<1>(): ((carry_fu_358_p2.read()[0].to_bool())? p_41_i_fu_292_p2.read(): Range1_all_ones_fu_316_p2.read());
}

void filter_c_engine::thread_deleted_zeros_1_fu_648_p3() {
    deleted_zeros_1_fu_648_p3 = (!carry_1_fu_634_p2.read()[0].is_01())? sc_lv<1>(): ((carry_1_fu_634_p2.read()[0].to_bool())? Range1_all_ones_1_reg_829.read(): Range1_all_zeros_1_reg_836.read());
}

void filter_c_engine::thread_deleted_zeros_fu_364_p3() {
    deleted_zeros_fu_364_p3 = (!carry_fu_358_p2.read()[0].is_01())? sc_lv<1>(): ((carry_fu_358_p2.read()[0].to_bool())? Range1_all_ones_fu_316_p2.read(): Range1_all_zeros_fu_338_p2.read());
}

void filter_c_engine::thread_grp_fu_164_p0() {
    if (esl_seteq<1,4,4>(ap_ST_fsm_state9, ap_CS_fsm.read())) {
        grp_fu_164_p0 =  (sc_lv<42>) (p_Val2_10_reg_808.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state8, ap_CS_fsm.read())) {
        grp_fu_164_p0 = tmp4_cast_fu_565_p1.read();
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state6, ap_CS_fsm.read())) {
        grp_fu_164_p0 =  (sc_lv<42>) (tmp_20_cast_cast_fu_522_p1.read());
    } else if ((esl_seteq<1,4,4>(ap_ST_fsm_state7, ap_CS_fsm.read()) || 
                esl_seteq<1,4,4>(ap_ST_fsm_state5, ap_CS_fsm.read()))) {
        grp_fu_164_p0 =  (sc_lv<42>) (reg_178.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state4, ap_CS_fsm.read())) {
        grp_fu_164_p0 =  (sc_lv<42>) (tmp_17_cast_fu_487_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state1, ap_CS_fsm.read())) {
        grp_fu_164_p0 =  (sc_lv<42>) (grp_fu_164_p00.read());
    } else {
        grp_fu_164_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void filter_c_engine::thread_grp_fu_164_p00() {
    grp_fu_164_p00 = grp_fu_194_p2.read().range(35, 12);
}

void filter_c_engine::thread_grp_fu_164_p1() {
    if (esl_seteq<1,4,4>(ap_ST_fsm_state9, ap_CS_fsm.read())) {
        grp_fu_164_p1 =  (sc_lv<42>) (tmp_8_fu_273_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state8, ap_CS_fsm.read())) {
        grp_fu_164_p1 = p_Val2_8_cast_fu_560_p1.read();
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state7, ap_CS_fsm.read())) {
        grp_fu_164_p1 =  (sc_lv<42>) (reg_191.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state6, ap_CS_fsm.read())) {
        grp_fu_164_p1 =  (sc_lv<42>) (tmp_21_cast_cast_fu_537_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state5, ap_CS_fsm.read())) {
        grp_fu_164_p1 =  (sc_lv<42>) (tmp_18_cast_fu_236_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state4, ap_CS_fsm.read())) {
        grp_fu_164_p1 =  (sc_lv<42>) (tmp_19_cast_fu_502_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state1, ap_CS_fsm.read())) {
        grp_fu_164_p1 =  (sc_lv<42>) (tmp_s_fu_616_p1.read());
    } else {
        grp_fu_164_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void filter_c_engine::thread_grp_fu_164_p2() {
    grp_fu_164_p2 = (!grp_fu_164_p0.read().is_01() || !grp_fu_164_p1.read().is_01())? sc_lv<42>(): (sc_biguint<42>(grp_fu_164_p0.read()) + sc_biguint<42>(grp_fu_164_p1.read()));
}

void filter_c_engine::thread_grp_fu_194_p0() {
    if (esl_seteq<1,4,4>(ap_ST_fsm_state6, ap_CS_fsm.read())) {
        grp_fu_194_p0 =  (sc_lv<24>) (OP1_V_5_fu_527_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state5, ap_CS_fsm.read())) {
        grp_fu_194_p0 =  (sc_lv<24>) (OP1_V_4_fu_512_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state4, ap_CS_fsm.read())) {
        grp_fu_194_p0 =  (sc_lv<24>) (OP1_V_3_fu_492_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state3, ap_CS_fsm.read())) {
        grp_fu_194_p0 =  (sc_lv<24>) (OP1_V_2_fu_468_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state2, ap_CS_fsm.read())) {
        grp_fu_194_p0 =  (sc_lv<24>) (OP1_V_1_fu_477_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state1, ap_CS_fsm.read())) {
        grp_fu_194_p0 =  (sc_lv<24>) (OP2_V_fu_241_p1.read());
    } else {
        grp_fu_194_p0 =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter_c_engine::thread_grp_fu_194_p1() {
    if (esl_seteq<1,4,4>(ap_ST_fsm_state6, ap_CS_fsm.read())) {
        grp_fu_194_p1 =  (sc_lv<16>) (OP2_V_5_fu_532_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state5, ap_CS_fsm.read())) {
        grp_fu_194_p1 =  (sc_lv<16>) (OP2_V_4_fu_517_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state4, ap_CS_fsm.read())) {
        grp_fu_194_p1 =  (sc_lv<16>) (OP2_V_3_fu_497_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state3, ap_CS_fsm.read())) {
        grp_fu_194_p1 =  (sc_lv<16>) (OP2_V_2_fu_482_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state2, ap_CS_fsm.read())) {
        grp_fu_194_p1 =  (sc_lv<16>) (OP2_V_1_fu_472_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state1, ap_CS_fsm.read())) {
        grp_fu_194_p1 =  (sc_lv<16>) (OP1_V_fu_507_p1.read());
    } else {
        grp_fu_194_p1 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void filter_c_engine::thread_grp_fu_194_p2() {
    grp_fu_194_p2 = (!grp_fu_194_p0.read().is_01() || !grp_fu_194_p1.read().is_01())? sc_lv<40>(): sc_bigint<24>(grp_fu_194_p0.read()) * sc_bigint<16>(grp_fu_194_p1.read());
}

void filter_c_engine::thread_grp_fu_228_p1() {
    grp_fu_228_p1 =  (sc_lv<24>) (grp_fu_164_p2.read());
}

void filter_c_engine::thread_grp_fu_228_p3() {
    grp_fu_228_p3 = grp_fu_228_p1.read().range(23, 23);
}

void filter_c_engine::thread_grp_fu_286_p2() {
    grp_fu_286_p2 = (grp_fu_228_p3.read() ^ ap_const_lv1_1);
}

void filter_c_engine::thread_grp_fu_444_p0() {
    if (esl_seteq<1,4,4>(ap_ST_fsm_state9, ap_CS_fsm.read())) {
        grp_fu_444_p0 = underflow_1_not_fu_735_p2.read();
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state1, ap_CS_fsm.read())) {
        grp_fu_444_p0 = underflow_not_fu_438_p2.read();
    } else {
        grp_fu_444_p0 =  (sc_lv<1>) ("X");
    }
}

void filter_c_engine::thread_grp_fu_444_p3() {
    grp_fu_444_p3 = (!grp_fu_444_p0.read()[0].is_01())? sc_lv<24>(): ((grp_fu_444_p0.read()[0].to_bool())? grp_fu_741_p3.read(): grp_fu_452_p3.read());
}

void filter_c_engine::thread_grp_fu_452_p0() {
    if (esl_seteq<1,4,4>(ap_ST_fsm_state9, ap_CS_fsm.read())) {
        grp_fu_452_p0 = underflow_1_fu_718_p2.read();
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state1, ap_CS_fsm.read())) {
        grp_fu_452_p0 = underflow_fu_396_p2.read();
    } else {
        grp_fu_452_p0 =  (sc_lv<1>) ("X");
    }
}

void filter_c_engine::thread_grp_fu_452_p2() {
    grp_fu_452_p2 =  (sc_lv<24>) (grp_fu_164_p2.read());
}

void filter_c_engine::thread_grp_fu_452_p3() {
    grp_fu_452_p3 = (!grp_fu_452_p0.read()[0].is_01())? sc_lv<24>(): ((grp_fu_452_p0.read()[0].to_bool())? ap_const_lv24_800000: grp_fu_452_p2.read());
}

void filter_c_engine::thread_grp_fu_741_p0() {
    if (esl_seteq<1,4,4>(ap_ST_fsm_state9, ap_CS_fsm.read())) {
        grp_fu_741_p0 = brmerge_i_i1_fu_729_p2.read();
    } else if (esl_seteq<1,4,4>(ap_ST_fsm_state1, ap_CS_fsm.read())) {
        grp_fu_741_p0 = brmerge_i_i_fu_432_p2.read();
    } else {
        grp_fu_741_p0 =  (sc_lv<1>) ("X");
    }
}

void filter_c_engine::thread_grp_fu_741_p2() {
    grp_fu_741_p2 =  (sc_lv<24>) (grp_fu_164_p2.read());
}

void filter_c_engine::thread_grp_fu_741_p3() {
    grp_fu_741_p3 = (!grp_fu_741_p0.read()[0].is_01())? sc_lv<24>(): ((grp_fu_741_p0.read()[0].to_bool())? ap_const_lv24_7FFFFF: grp_fu_741_p2.read());
}

void filter_c_engine::thread_overflow_1_fu_660_p2() {
    overflow_1_fu_660_p2 = (brmerge_i1_fu_706_p2.read() & tmp_12_fu_628_p2.read());
}

void filter_c_engine::thread_overflow_fu_420_p2() {
    overflow_fu_420_p2 = (brmerge_i_fu_408_p2.read() & tmp_6_fu_390_p2.read());
}

void filter_c_engine::thread_p_38_i1_fu_672_p2() {
    p_38_i1_fu_672_p2 = (carry_1_fu_634_p2.read() & Range1_all_ones_1_reg_829.read());
}

void filter_c_engine::thread_p_38_i_fu_402_p2() {
    p_38_i_fu_402_p2 = (carry_fu_358_p2.read() & Range1_all_ones_fu_316_p2.read());
}

void filter_c_engine::thread_p_41_i1_fu_694_p2() {
    p_41_i1_fu_694_p2 = (Range2_all_ones_1_reg_824.read() & tmp_10_fu_654_p2.read());
}

void filter_c_engine::thread_p_41_i_fu_292_p2() {
    p_41_i_fu_292_p2 = (Range2_all_ones_fu_332_p2.read() & tmp_4_fu_378_p2.read());
}

void filter_c_engine::thread_p_Val2_10_fu_542_p1() {
    p_Val2_10_fu_542_p1 =  (sc_lv<41>) (grp_fu_164_p2.read());
}

void filter_c_engine::thread_p_Val2_8_cast_fu_560_p0() {
    p_Val2_8_cast_fu_560_p0 = reg_178.read();
}

void filter_c_engine::thread_p_Val2_8_cast_fu_560_p1() {
    p_Val2_8_cast_fu_560_p1 = esl_sext<42,41>(p_Val2_8_cast_fu_560_p0.read());
}

void filter_c_engine::thread_p_not_i1_fu_677_p2() {
    p_not_i1_fu_677_p2 = (deleted_zeros_1_fu_648_p3.read() ^ ap_const_lv1_1);
}

void filter_c_engine::thread_p_not_i_fu_352_p2() {
    p_not_i_fu_352_p2 = (deleted_zeros_fu_364_p3.read() ^ ap_const_lv1_1);
}

void filter_c_engine::thread_signbit_fu_265_p3() {
    signbit_fu_265_p3 = grp_fu_194_p2.read().range(39, 39);
}

void filter_c_engine::thread_tmp1_demorgan_fu_384_p2() {
    tmp1_demorgan_fu_384_p2 = (p_38_i_fu_402_p2.read() | brmerge40_demorgan_i_fu_372_p2.read());
}

void filter_c_engine::thread_tmp1_fu_414_p2() {
    tmp1_fu_414_p2 = (tmp1_demorgan_fu_384_p2.read() ^ ap_const_lv1_1);
}

void filter_c_engine::thread_tmp2_fu_426_p2() {
    tmp2_fu_426_p2 = (brmerge40_demorgan_i_fu_372_p2.read() | tmp_6_fu_390_p2.read());
}

void filter_c_engine::thread_tmp4_cast_fu_565_p0() {
    tmp4_cast_fu_565_p0 = reg_191.read();
}

void filter_c_engine::thread_tmp4_cast_fu_565_p1() {
    tmp4_cast_fu_565_p1 = esl_sext<42,41>(tmp4_cast_fu_565_p0.read());
}

void filter_c_engine::thread_tmp5_demorgan_fu_683_p2() {
    tmp5_demorgan_fu_683_p2 = (p_38_i1_fu_672_p2.read() | brmerge40_demorgan_i_1_fu_700_p2.read());
}

void filter_c_engine::thread_tmp5_fu_712_p2() {
    tmp5_fu_712_p2 = (tmp5_demorgan_fu_683_p2.read() ^ ap_const_lv1_1);
}

void filter_c_engine::thread_tmp6_fu_723_p2() {
    tmp6_fu_723_p2 = (brmerge40_demorgan_i_1_fu_700_p2.read() | tmp_12_fu_628_p2.read());
}

void filter_c_engine::thread_tmp_10_fu_654_p2() {
    tmp_10_fu_654_p2 = (tmp_20_fu_620_p3.read() ^ ap_const_lv1_1);
}

void filter_c_engine::thread_tmp_11_fu_594_p4() {
    tmp_11_fu_594_p4 = grp_fu_164_p2.read().range(41, 38);
}

void filter_c_engine::thread_tmp_12_fu_628_p2() {
    tmp_12_fu_628_p2 = (signbit_1_reg_818.read() ^ ap_const_lv1_1);
}

void filter_c_engine::thread_tmp_13_fu_278_p3() {
    tmp_13_fu_278_p3 = grp_fu_194_p2.read().range(35, 35);
}

void filter_c_engine::thread_tmp_15_fu_298_p3() {
    tmp_15_fu_298_p3 = grp_fu_194_p2.read().range(36, 36);
}

void filter_c_engine::thread_tmp_17_cast_fu_487_p0() {
    tmp_17_cast_fu_487_p0 =  (sc_lv<40>) (reg_171.read());
}

void filter_c_engine::thread_tmp_17_cast_fu_487_p1() {
    tmp_17_cast_fu_487_p1 = esl_sext<41,40>(tmp_17_cast_fu_487_p0.read());
}

void filter_c_engine::thread_tmp_17_fu_552_p1() {
    tmp_17_fu_552_p1 =  (sc_lv<41>) (grp_fu_164_p2.read());
}

void filter_c_engine::thread_tmp_18_cast_fu_236_p0() {
    tmp_18_cast_fu_236_p0 =  (sc_lv<40>) (reg_191.read());
}

void filter_c_engine::thread_tmp_18_cast_fu_236_p1() {
    tmp_18_cast_fu_236_p1 = esl_sext<41,40>(tmp_18_cast_fu_236_p0.read());
}

void filter_c_engine::thread_tmp_18_fu_640_p3() {
    tmp_18_fu_640_p3 = reg_171.read().range(37, 37);
}

void filter_c_engine::thread_tmp_19_cast_fu_502_p1() {
    tmp_19_cast_fu_502_p1 = esl_sext<41,40>(grp_fu_194_p2.read());
}

void filter_c_engine::thread_tmp_1_fu_322_p4() {
    tmp_1_fu_322_p4 = grp_fu_194_p2.read().range(39, 37);
}

void filter_c_engine::thread_tmp_20_cast_cast_fu_522_p0() {
    tmp_20_cast_cast_fu_522_p0 =  (sc_lv<40>) (reg_171.read());
}

void filter_c_engine::thread_tmp_20_cast_cast_fu_522_p1() {
    tmp_20_cast_cast_fu_522_p1 = esl_sext<41,40>(tmp_20_cast_cast_fu_522_p0.read());
}

void filter_c_engine::thread_tmp_20_fu_620_p3() {
    tmp_20_fu_620_p3 = reg_171.read().range(38, 38);
}

void filter_c_engine::thread_tmp_21_cast_cast_fu_537_p1() {
    tmp_21_cast_cast_fu_537_p1 = esl_sext<41,40>(grp_fu_194_p2.read());
}

void filter_c_engine::thread_tmp_2_fu_306_p4() {
    tmp_2_fu_306_p4 = grp_fu_194_p2.read().range(39, 36);
}

void filter_c_engine::thread_tmp_4_fu_378_p2() {
    tmp_4_fu_378_p2 = (tmp_15_fu_298_p3.read() ^ ap_const_lv1_1);
}

void filter_c_engine::thread_tmp_6_fu_390_p2() {
    tmp_6_fu_390_p2 = (signbit_fu_265_p3.read() ^ ap_const_lv1_1);
}

void filter_c_engine::thread_tmp_7_fu_578_p4() {
    tmp_7_fu_578_p4 = grp_fu_164_p2.read().range(41, 39);
}

void filter_c_engine::thread_tmp_8_fu_273_p1() {
    tmp_8_fu_273_p1 = esl_zext<24,1>(tmp_17_reg_813.read());
}

void filter_c_engine::thread_tmp_fu_246_p3() {
    tmp_fu_246_p3 = grp_fu_194_p2.read().range(11, 11);
}

void filter_c_engine::thread_tmp_s_fu_616_p1() {
    tmp_s_fu_616_p1 = esl_zext<24,1>(tmp_fu_246_p3.read());
}

void filter_c_engine::thread_underflow_1_fu_718_p2() {
    underflow_1_fu_718_p2 = (signbit_1_reg_818.read() & tmp5_fu_712_p2.read());
}

void filter_c_engine::thread_underflow_1_not_fu_735_p2() {
    underflow_1_not_fu_735_p2 = (tmp6_fu_723_p2.read() | p_38_i1_fu_672_p2.read());
}

void filter_c_engine::thread_underflow_fu_396_p2() {
    underflow_fu_396_p2 = (signbit_fu_265_p3.read() & tmp1_fu_414_p2.read());
}

void filter_c_engine::thread_underflow_not_fu_438_p2() {
    underflow_not_fu_438_p2 = (tmp2_fu_426_p2.read() | p_38_i_fu_402_p2.read());
}

void filter_c_engine::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 0 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()) && esl_seteq<1,4,4>(ap_ST_fsm_state1, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,4,4>(ap_ST_fsm_state2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,4,4>(ap_ST_fsm_state3, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 3 : 
            if ((esl_seteq<1,4,4>(ap_ST_fsm_state4, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,4,4>(ap_ST_fsm_state5, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 5 : 
            if ((esl_seteq<1,4,4>(ap_ST_fsm_state6, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 6 : 
            if ((esl_seteq<1,4,4>(ap_ST_fsm_state7, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 7 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()) && esl_seteq<1,4,4>(ap_ST_fsm_state8, ap_CS_fsm.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()) && esl_seteq<1,4,4>(ap_ST_fsm_state9, ap_CS_fsm.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

}

