-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity filter_c_top is
port (
    xn_0_V_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    ap_ce : IN STD_LOGIC;
    yn_0_V_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    yn_1_V_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    buf_clr : IN STD_LOGIC;
    cfg_filt_en_0 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_1 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_2 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_3 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_4 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_5 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_6 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_7 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_8 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_9 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_10 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_11 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_12 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_13 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_14 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_15 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_16 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_filt_en_17 : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_gain_val_V : IN STD_LOGIC_VECTOR (5 downto 0);
    cfg_delay_sel : IN STD_LOGIC_VECTOR (0 downto 0);
    cfg_delay_val_V : IN STD_LOGIC_VECTOR (4 downto 0);
    coeff_mem_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    coeff_mem_ce0 : OUT STD_LOGIC;
    coeff_mem_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    coeff_mem_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    coeff_mem_we0 : OUT STD_LOGIC;
    mem_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    mem_ce0 : OUT STD_LOGIC;
    mem_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    mem_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    mem_we0 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    xn_0_V_TVALID : IN STD_LOGIC;
    xn_0_V_TREADY : OUT STD_LOGIC;
    yn_0_V_TVALID : OUT STD_LOGIC;
    yn_0_V_TREADY : IN STD_LOGIC;
    yn_1_V_TVALID : OUT STD_LOGIC;
    yn_1_V_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of filter_c_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "filter_c_top,hls_ip_2018_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xa7a12tcsg325-1q,HLS_INPUT_CLOCK=100.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=20.350833,HLS_SYN_LAT=160,HLS_SYN_TPT=161,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=850,HLS_SYN_LUT=2344,HLS_VERSION=2018_2_2}";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';

    signal ap_rst_n_inv : STD_LOGIC;
    signal Block_codeRepl5_proc_U0_ap_start : STD_LOGIC;
    signal Block_codeRepl5_proc_U0_ap_done : STD_LOGIC;
    signal Block_codeRepl5_proc_U0_ap_continue : STD_LOGIC;
    signal Block_codeRepl5_proc_U0_ap_idle : STD_LOGIC;
    signal Block_codeRepl5_proc_U0_ap_ready : STD_LOGIC;
    signal Block_codeRepl5_proc_U0_buf_clr : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_codeRepl5_proc_U0_xn_0_V_TREADY : STD_LOGIC;
    signal Block_codeRepl5_proc_U0_yn_0_V_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal Block_codeRepl5_proc_U0_yn_0_V_TVALID : STD_LOGIC;
    signal Block_codeRepl5_proc_U0_coeff_mem_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Block_codeRepl5_proc_U0_coeff_mem_ce0 : STD_LOGIC;
    signal Block_codeRepl5_proc_U0_yn_1_V_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal Block_codeRepl5_proc_U0_yn_1_V_TVALID : STD_LOGIC;
    signal Block_codeRepl5_proc_U0_mem_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Block_codeRepl5_proc_U0_mem_ce0 : STD_LOGIC;
    signal Block_codeRepl5_proc_U0_mem_we0 : STD_LOGIC;
    signal Block_codeRepl5_proc_U0_mem_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal Block_codeRepl5_proc_U0_start_full_n : STD_LOGIC;
    signal Block_codeRepl5_proc_U0_start_write : STD_LOGIC;

    component Block_codeRepl5_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf_clr : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_gain_val_V : IN STD_LOGIC_VECTOR (5 downto 0);
        xn_0_V_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        xn_0_V_TVALID : IN STD_LOGIC;
        xn_0_V_TREADY : OUT STD_LOGIC;
        cfg_delay_val_V : IN STD_LOGIC_VECTOR (4 downto 0);
        cfg_delay_sel : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_1 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_3 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_4 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_5 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_6 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_7 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_8 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_9 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_10 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_11 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_0 : IN STD_LOGIC_VECTOR (0 downto 0);
        yn_0_V_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        yn_0_V_TVALID : OUT STD_LOGIC;
        yn_0_V_TREADY : IN STD_LOGIC;
        cfg_filt_en_13 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_14 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_15 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_16 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_17 : IN STD_LOGIC_VECTOR (0 downto 0);
        cfg_filt_en_12 : IN STD_LOGIC_VECTOR (0 downto 0);
        coeff_mem_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        coeff_mem_ce0 : OUT STD_LOGIC;
        coeff_mem_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        yn_1_V_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        yn_1_V_TVALID : OUT STD_LOGIC;
        yn_1_V_TREADY : IN STD_LOGIC;
        mem_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        mem_ce0 : OUT STD_LOGIC;
        mem_we0 : OUT STD_LOGIC;
        mem_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        mem_q0 : IN STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    Block_codeRepl5_proc_U0 : component Block_codeRepl5_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_codeRepl5_proc_U0_ap_start,
        ap_done => Block_codeRepl5_proc_U0_ap_done,
        ap_continue => Block_codeRepl5_proc_U0_ap_continue,
        ap_ce => ap_ce,
        ap_idle => Block_codeRepl5_proc_U0_ap_idle,
        ap_ready => Block_codeRepl5_proc_U0_ap_ready,
        buf_clr => Block_codeRepl5_proc_U0_buf_clr,
        cfg_gain_val_V => cfg_gain_val_V,
        xn_0_V_TDATA => xn_0_V_TDATA,
        xn_0_V_TVALID => xn_0_V_TVALID,
        xn_0_V_TREADY => Block_codeRepl5_proc_U0_xn_0_V_TREADY,
        cfg_delay_val_V => cfg_delay_val_V,
        cfg_delay_sel => cfg_delay_sel,
        cfg_filt_en_1 => cfg_filt_en_1,
        cfg_filt_en_2 => cfg_filt_en_2,
        cfg_filt_en_3 => cfg_filt_en_3,
        cfg_filt_en_4 => cfg_filt_en_4,
        cfg_filt_en_5 => cfg_filt_en_5,
        cfg_filt_en_6 => cfg_filt_en_6,
        cfg_filt_en_7 => cfg_filt_en_7,
        cfg_filt_en_8 => cfg_filt_en_8,
        cfg_filt_en_9 => cfg_filt_en_9,
        cfg_filt_en_10 => cfg_filt_en_10,
        cfg_filt_en_11 => cfg_filt_en_11,
        cfg_filt_en_0 => cfg_filt_en_0,
        yn_0_V_TDATA => Block_codeRepl5_proc_U0_yn_0_V_TDATA,
        yn_0_V_TVALID => Block_codeRepl5_proc_U0_yn_0_V_TVALID,
        yn_0_V_TREADY => yn_0_V_TREADY,
        cfg_filt_en_13 => cfg_filt_en_13,
        cfg_filt_en_14 => cfg_filt_en_14,
        cfg_filt_en_15 => cfg_filt_en_15,
        cfg_filt_en_16 => cfg_filt_en_16,
        cfg_filt_en_17 => cfg_filt_en_17,
        cfg_filt_en_12 => cfg_filt_en_12,
        coeff_mem_address0 => Block_codeRepl5_proc_U0_coeff_mem_address0,
        coeff_mem_ce0 => Block_codeRepl5_proc_U0_coeff_mem_ce0,
        coeff_mem_q0 => coeff_mem_q0,
        yn_1_V_TDATA => Block_codeRepl5_proc_U0_yn_1_V_TDATA,
        yn_1_V_TVALID => Block_codeRepl5_proc_U0_yn_1_V_TVALID,
        yn_1_V_TREADY => yn_1_V_TREADY,
        mem_address0 => Block_codeRepl5_proc_U0_mem_address0,
        mem_ce0 => Block_codeRepl5_proc_U0_mem_ce0,
        mem_we0 => Block_codeRepl5_proc_U0_mem_we0,
        mem_d0 => Block_codeRepl5_proc_U0_mem_d0,
        mem_q0 => mem_q0);




    Block_codeRepl5_proc_U0_ap_continue <= ap_const_logic_1;
    Block_codeRepl5_proc_U0_ap_start <= ap_start;
    Block_codeRepl5_proc_U0_buf_clr <= (0=>buf_clr, others=>'-');
    Block_codeRepl5_proc_U0_start_full_n <= ap_const_logic_1;
    Block_codeRepl5_proc_U0_start_write <= ap_const_logic_0;
    ap_done <= Block_codeRepl5_proc_U0_ap_done;
    ap_idle <= Block_codeRepl5_proc_U0_ap_idle;
    ap_ready <= Block_codeRepl5_proc_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Block_codeRepl5_proc_U0_ap_done;
    ap_sync_ready <= Block_codeRepl5_proc_U0_ap_ready;
    coeff_mem_address0 <= Block_codeRepl5_proc_U0_coeff_mem_address0;
    coeff_mem_ce0 <= Block_codeRepl5_proc_U0_coeff_mem_ce0;
    coeff_mem_d0 <= ap_const_lv16_0;
    coeff_mem_we0 <= ap_const_logic_0;
    mem_address0 <= Block_codeRepl5_proc_U0_mem_address0;
    mem_ce0 <= Block_codeRepl5_proc_U0_mem_ce0;
    mem_d0 <= Block_codeRepl5_proc_U0_mem_d0;
    mem_we0 <= Block_codeRepl5_proc_U0_mem_we0;
    xn_0_V_TREADY <= Block_codeRepl5_proc_U0_xn_0_V_TREADY;
    yn_0_V_TDATA <= Block_codeRepl5_proc_U0_yn_0_V_TDATA;
    yn_0_V_TVALID <= Block_codeRepl5_proc_U0_yn_0_V_TVALID;
    yn_1_V_TDATA <= Block_codeRepl5_proc_U0_yn_1_V_TDATA;
    yn_1_V_TVALID <= Block_codeRepl5_proc_U0_yn_1_V_TVALID;
end behav;
