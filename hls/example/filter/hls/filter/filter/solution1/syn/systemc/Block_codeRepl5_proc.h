// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Block_codeRepl5_proc_HH_
#define _Block_codeRepl5_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "filter_c_engine.h"
#include "filter_c_top_urembkb.h"
#include "filter_c_top_mul_cud.h"

namespace ap_rtl {

struct Block_codeRepl5_proc : public sc_module {
    // Port declarations 47
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_in< sc_logic > ap_ce;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<1> > buf_clr;
    sc_in< sc_lv<6> > cfg_gain_val_V;
    sc_in< sc_lv<24> > xn_0_V_TDATA;
    sc_in< sc_logic > xn_0_V_TVALID;
    sc_out< sc_logic > xn_0_V_TREADY;
    sc_in< sc_lv<5> > cfg_delay_val_V;
    sc_in< sc_lv<1> > cfg_delay_sel;
    sc_in< sc_lv<1> > cfg_filt_en_1;
    sc_in< sc_lv<1> > cfg_filt_en_2;
    sc_in< sc_lv<1> > cfg_filt_en_3;
    sc_in< sc_lv<1> > cfg_filt_en_4;
    sc_in< sc_lv<1> > cfg_filt_en_5;
    sc_in< sc_lv<1> > cfg_filt_en_6;
    sc_in< sc_lv<1> > cfg_filt_en_7;
    sc_in< sc_lv<1> > cfg_filt_en_8;
    sc_in< sc_lv<1> > cfg_filt_en_9;
    sc_in< sc_lv<1> > cfg_filt_en_10;
    sc_in< sc_lv<1> > cfg_filt_en_11;
    sc_in< sc_lv<1> > cfg_filt_en_0;
    sc_out< sc_lv<24> > yn_0_V_TDATA;
    sc_out< sc_logic > yn_0_V_TVALID;
    sc_in< sc_logic > yn_0_V_TREADY;
    sc_in< sc_lv<1> > cfg_filt_en_13;
    sc_in< sc_lv<1> > cfg_filt_en_14;
    sc_in< sc_lv<1> > cfg_filt_en_15;
    sc_in< sc_lv<1> > cfg_filt_en_16;
    sc_in< sc_lv<1> > cfg_filt_en_17;
    sc_in< sc_lv<1> > cfg_filt_en_12;
    sc_out< sc_lv<7> > coeff_mem_address0;
    sc_out< sc_logic > coeff_mem_ce0;
    sc_in< sc_lv<16> > coeff_mem_q0;
    sc_out< sc_lv<24> > yn_1_V_TDATA;
    sc_out< sc_logic > yn_1_V_TVALID;
    sc_in< sc_logic > yn_1_V_TREADY;
    sc_out< sc_lv<7> > mem_address0;
    sc_out< sc_logic > mem_ce0;
    sc_out< sc_logic > mem_we0;
    sc_out< sc_lv<24> > mem_d0;
    sc_in< sc_lv<24> > mem_q0;


    // Module declarations
    Block_codeRepl5_proc(sc_module_name name);
    SC_HAS_PROCESS(Block_codeRepl5_proc);

    ~Block_codeRepl5_proc();

    sc_trace_file* mVcdFile;

    filter_c_engine* grp_filter_c_engine_fu_720;
    filter_c_top_urembkb<1,9,5,5,5>* filter_c_top_urembkb_U12;
    filter_c_top_mul_cud<1,1,24,6,30>* filter_c_top_mul_cud_U13;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_lv<24> > xn_0_V_0_data_out;
    sc_signal< sc_logic > xn_0_V_0_vld_in;
    sc_signal< sc_logic > xn_0_V_0_vld_out;
    sc_signal< sc_logic > xn_0_V_0_ack_in;
    sc_signal< sc_logic > xn_0_V_0_ack_out;
    sc_signal< sc_lv<24> > xn_0_V_0_payload_A;
    sc_signal< sc_lv<24> > xn_0_V_0_payload_B;
    sc_signal< sc_logic > xn_0_V_0_sel_rd;
    sc_signal< sc_logic > xn_0_V_0_sel_wr;
    sc_signal< sc_logic > xn_0_V_0_sel;
    sc_signal< sc_logic > xn_0_V_0_load_A;
    sc_signal< sc_logic > xn_0_V_0_load_B;
    sc_signal< sc_lv<2> > xn_0_V_0_state;
    sc_signal< sc_logic > xn_0_V_0_state_cmp_full;
    sc_signal< sc_lv<24> > yn_0_V_1_data_out;
    sc_signal< sc_logic > yn_0_V_1_vld_in;
    sc_signal< sc_logic > yn_0_V_1_vld_out;
    sc_signal< sc_logic > yn_0_V_1_ack_in;
    sc_signal< sc_logic > yn_0_V_1_ack_out;
    sc_signal< sc_lv<24> > yn_0_V_1_payload_A;
    sc_signal< sc_lv<24> > yn_0_V_1_payload_B;
    sc_signal< sc_logic > yn_0_V_1_sel_rd;
    sc_signal< sc_logic > yn_0_V_1_sel_wr;
    sc_signal< sc_logic > yn_0_V_1_sel;
    sc_signal< sc_logic > yn_0_V_1_load_A;
    sc_signal< sc_logic > yn_0_V_1_load_B;
    sc_signal< sc_lv<2> > yn_0_V_1_state;
    sc_signal< sc_logic > yn_0_V_1_state_cmp_full;
    sc_signal< sc_lv<24> > yn_1_V_1_data_out;
    sc_signal< sc_logic > yn_1_V_1_vld_in;
    sc_signal< sc_logic > yn_1_V_1_vld_out;
    sc_signal< sc_logic > yn_1_V_1_ack_in;
    sc_signal< sc_logic > yn_1_V_1_ack_out;
    sc_signal< sc_lv<24> > yn_1_V_1_payload_A;
    sc_signal< sc_lv<24> > yn_1_V_1_payload_B;
    sc_signal< sc_logic > yn_1_V_1_sel_rd;
    sc_signal< sc_logic > yn_1_V_1_sel_wr;
    sc_signal< sc_logic > yn_1_V_1_sel;
    sc_signal< sc_logic > yn_1_V_1_load_A;
    sc_signal< sc_logic > yn_1_V_1_load_B;
    sc_signal< sc_lv<2> > yn_1_V_1_state;
    sc_signal< sc_logic > yn_1_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > delay_ptr_V;
    sc_signal< sc_logic > xn_0_V_TDATA_blk_n;
    sc_signal< sc_logic > yn_0_V_TDATA_blk_n;
    sc_signal< sc_lv<1> > exitcond_fu_1424_p2;
    sc_signal< sc_lv<1> > tweeter_enabled_load_reg_1799;
    sc_signal< sc_logic > yn_1_V_TDATA_blk_n;
    sc_signal< sc_lv<1> > buf_clr_read_read_fu_354_p2;
    sc_signal< sc_lv<1> > woofer_enabled_load_reg_1848;
    sc_signal< sc_lv<16> > reg_768;
    sc_signal< sc_lv<16> > reg_773;
    sc_signal< sc_lv<16> > reg_778;
    sc_signal< sc_lv<64> > reg_783;
    sc_signal< sc_lv<1> > tmp_5_fu_1080_p2;
    sc_signal< sc_logic > grp_filter_c_engine_fu_720_ap_idle;
    sc_signal< sc_logic > grp_filter_c_engine_fu_720_ap_ready;
    sc_signal< sc_logic > grp_filter_c_engine_fu_720_ap_done;
    sc_signal< bool > ap_predicate_op269_write_state23;
    sc_signal< bool > ap_block_state23_io;
    sc_signal< sc_lv<1> > newSel4_fu_1341_p3;
    sc_signal< sc_lv<1> > ap_phi_mux_cfg_filt_en_load_phi_phi_fu_658_p24;
    sc_signal< sc_lv<64> > tmp_11_fu_1158_p1;
    sc_signal< sc_lv<1> > exitcond3_fu_1146_p2;
    sc_signal< sc_lv<16> > reg_788;
    sc_signal< sc_lv<24> > reg_793;
    sc_signal< sc_lv<5> > tmp_11_cast_fu_1170_p1;
    sc_signal< sc_lv<16> > reg_798;
    sc_signal< sc_lv<7> > tmp_12_cast1_fu_1259_p1;
    sc_signal< sc_lv<24> > reg_803;
    sc_signal< sc_lv<5> > grp_fu_1440_p2;
    sc_signal< sc_lv<5> > reg_808;
    sc_signal< sc_lv<16> > reg_814;
    sc_signal< sc_lv<24> > reg_819;
    sc_signal< sc_lv<7> > tmp_11_cast1_fu_1162_p1;
    sc_signal< sc_lv<24> > reg_824;
    sc_signal< sc_lv<6> > tmp_12_cast_fu_1263_p1;
    sc_signal< sc_lv<6> > tmp_9_cast_fu_1436_p1;
    sc_signal< sc_lv<1> > exitcond1_fu_1247_p2;
    sc_signal< bool > ap_block_state34_io;
    sc_signal< sc_lv<24> > xn_woofer_V_3_fu_1072_p3;
    sc_signal< sc_lv<24> > reg_834;
    sc_signal< sc_lv<7> > reg_839;
    sc_signal< sc_lv<1> > tmp_5_reg_1641;
    sc_signal< sc_lv<7> > reg_1719;
    sc_signal< sc_lv<7> > reg_1724;
    sc_signal< sc_lv<6> > tmp_11_cast2_fu_1166_p1;
    sc_signal< sc_lv<24> > grp_fu_1105_p2;
    sc_signal< sc_lv<4> > i_3_reg_1729;
    sc_signal< sc_lv<1> > newSel4_reg_1785;
    sc_signal< sc_logic > grp_filter_c_engine_fu_720_ap_start;
    sc_signal< sc_lv<24> > grp_filter_c_engine_fu_720_buf_xn_2_V_read;
    sc_signal< sc_lv<24> > grp_filter_c_engine_fu_720_ap_return_0;
    sc_signal< sc_lv<24> > grp_filter_c_engine_fu_720_ap_return_1;
    sc_signal< sc_lv<24> > grp_filter_c_engine_fu_720_ap_return_2;
    sc_signal< sc_lv<24> > grp_filter_c_engine_fu_720_ap_return_3;
    sc_signal< sc_lv<24> > grp_filter_c_engine_fu_720_ap_return_4;
    sc_signal< sc_logic > grp_filter_c_engine_fu_720_ap_ce;
    sc_signal< sc_lv<24> > xn_woofer_V_3_xn_woo_fu_1116_p3;
    sc_signal< sc_lv<24> > ap_phi_mux_p_051_1_phi_fu_628_p4;
    sc_signal< sc_lv<24> > p_051_1_reg_625;
    sc_signal< sc_lv<24> > xn_woofer_V_xn_woofe_fu_1123_p3;
    sc_signal< sc_lv<24> > p_065_1_reg_634;
    sc_signal< sc_lv<4> > ap_phi_mux_i2_phi_fu_648_p4;
    sc_signal< sc_lv<4> > i2_reg_644;
    sc_signal< sc_lv<1> > cfg_filt_en_load_phi_reg_655;
    sc_signal< sc_lv<5> > i3_reg_685;
    sc_signal< sc_lv<5> > i_reg_697;
    sc_signal< sc_lv<5> > i1_reg_709;
    sc_signal< sc_lv<1> > exitcond2_fu_1487_p2;
    sc_signal< sc_logic > grp_filter_c_engine_fu_720_ap_start_reg;
    sc_signal< sc_lv<64> > addr_cast_fu_1111_p1;
    sc_signal< sc_lv<64> > addr10_cast_fu_1194_p1;
    sc_signal< sc_lv<64> > addr11_cast_fu_1205_p1;
    sc_signal< sc_lv<64> > addr12_cast_fu_1216_p1;
    sc_signal< sc_lv<64> > addr13_cast_fu_1227_p1;
    sc_signal< sc_lv<64> > addr14_cast_fu_1237_p1;
    sc_signal< sc_lv<64> > tmp_12_fu_1253_p1;
    sc_signal< sc_lv<64> > addr5_cast_fu_1362_p1;
    sc_signal< sc_lv<64> > addr6_cast_fu_1373_p1;
    sc_signal< sc_lv<64> > addr7_cast_fu_1384_p1;
    sc_signal< sc_lv<64> > addr8_cast_fu_1395_p1;
    sc_signal< sc_lv<64> > addr9_cast_fu_1405_p1;
    sc_signal< sc_lv<64> > addr1_cast_fu_1446_p1;
    sc_signal< sc_lv<64> > addr2_cast_fu_1467_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_1472_p1;
    sc_signal< sc_lv<64> > addr3_cast_fu_1482_p1;
    sc_signal< sc_lv<64> > addr4_cast_fu_1509_p1;
    sc_signal< sc_lv<5> > grp_fu_1096_p2;
    sc_signal< sc_lv<1> > tweeter_enabled_fu_206;
    sc_signal< sc_lv<24> > xn_0_gain_V_1_fu_210;
    sc_signal< sc_lv<1> > woofer_enabled_fu_214;
    sc_signal< sc_lv<24> > xn_woofer_V_2_fu_218;
    sc_signal< bool > ap_block_state35;
    sc_signal< bool > ap_predicate_op329_write_state35;
    sc_signal< bool > ap_block_state35_io;
    sc_signal< sc_lv<30> > p_Val2_s_fu_1514_p2;
    sc_signal< sc_lv<1> > tmp_22_fu_869_p3;
    sc_signal< sc_lv<1> > newsignbit_fu_893_p3;
    sc_signal< sc_lv<1> > tmp_23_fu_886_p3;
    sc_signal< sc_lv<1> > tmp_8_fu_901_p2;
    sc_signal< sc_lv<3> > p_Result_8_fu_920_p4;
    sc_signal< sc_lv<4> > p_Result_9_fu_935_p4;
    sc_signal< sc_lv<1> > carry_fu_907_p2;
    sc_signal< sc_lv<1> > Range1_all_ones_fu_944_p2;
    sc_signal< sc_lv<1> > Range1_all_zeros_fu_950_p2;
    sc_signal< sc_lv<1> > tmp_25_fu_913_p3;
    sc_signal< sc_lv<1> > Range2_all_ones_fu_929_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_964_p2;
    sc_signal< sc_lv<1> > p_41_i_fu_970_p2;
    sc_signal< sc_lv<1> > deleted_zeros_fu_956_p3;
    sc_signal< sc_lv<1> > p_not_i_fu_990_p2;
    sc_signal< sc_lv<1> > signbit_fu_853_p3;
    sc_signal< sc_lv<1> > brmerge_i_fu_996_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_1002_p2;
    sc_signal< sc_lv<1> > deleted_ones_fu_976_p3;
    sc_signal< sc_lv<1> > p_38_i_fu_984_p2;
    sc_signal< sc_lv<1> > brmerge40_demorgan_i_fu_1014_p2;
    sc_signal< sc_lv<1> > tmp_demorgan_fu_1020_p2;
    sc_signal< sc_lv<1> > tmp_fu_1026_p2;
    sc_signal< sc_lv<1> > underflow_fu_1032_p2;
    sc_signal< sc_lv<1> > overflow_fu_1008_p2;
    sc_signal< sc_lv<1> > tmp1_fu_1044_p2;
    sc_signal< sc_lv<1> > brmerge_i_i_fu_1038_p2;
    sc_signal< sc_lv<1> > underflow_not_fu_1050_p2;
    sc_signal< sc_lv<24> > p_Val2_2_mux_fu_1056_p3;
    sc_signal< sc_lv<24> > p_Val2_2_37_fu_1064_p3;
    sc_signal< sc_lv<5> > grp_fu_1096_p0;
    sc_signal< sc_lv<5> > tmp_7_cast_fu_1102_p0;
    sc_signal< sc_lv<24> > grp_fu_1105_p0;
    sc_signal< sc_lv<7> > tmp_9_cast1_fu_1457_p1;
    sc_signal< sc_lv<7> > tmp_7_cast_fu_1102_p1;
    sc_signal< sc_lv<7> > tmp_cast_fu_1499_p1;
    sc_signal< sc_lv<24> > grp_fu_1105_p1;
    sc_signal< sc_lv<24> > tmp_3_fu_876_p1;
    sc_signal< sc_lv<7> > addr_cast_fu_1111_p0;
    sc_signal< sc_lv<5> > addr10_cast_fu_1194_p0;
    sc_signal< sc_lv<6> > addr11_cast_fu_1205_p0;
    sc_signal< sc_lv<7> > addr12_cast_fu_1216_p0;
    sc_signal< sc_lv<7> > addr13_cast_fu_1227_p0;
    sc_signal< sc_lv<7> > addr14_cast_fu_1237_p0;
    sc_signal< sc_lv<1> > sel_tmp8_fu_1291_p2;
    sc_signal< sc_lv<1> > sel_tmp6_fu_1285_p2;
    sc_signal< sc_lv<1> > sel_tmp4_fu_1279_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_1273_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_1267_p2;
    sc_signal< sc_lv<1> > or_cond_fu_1303_p2;
    sc_signal< sc_lv<1> > newSel_fu_1297_p3;
    sc_signal< sc_lv<1> > newSel1_fu_1309_p3;
    sc_signal< sc_lv<1> > or_cond1_fu_1315_p2;
    sc_signal< sc_lv<1> > or_cond2_fu_1335_p2;
    sc_signal< sc_lv<1> > newSel3_fu_1327_p3;
    sc_signal< sc_lv<1> > newSel2_fu_1321_p3;
    sc_signal< sc_lv<6> > addr5_cast_fu_1362_p0;
    sc_signal< sc_lv<6> > addr6_cast_fu_1373_p0;
    sc_signal< sc_lv<7> > addr7_cast_fu_1384_p0;
    sc_signal< sc_lv<7> > addr8_cast_fu_1395_p0;
    sc_signal< sc_lv<7> > addr9_cast_fu_1405_p0;
    sc_signal< sc_lv<5> > grp_fu_1440_p0;
    sc_signal< sc_lv<6> > addr1_cast_fu_1446_p0;
    sc_signal< sc_lv<7> > addr2_cast_fu_1467_p0;
    sc_signal< sc_lv<6> > addr3_cast_fu_1482_p0;
    sc_signal< sc_lv<7> > addr4_cast_fu_1509_p0;
    sc_signal< sc_lv<6> > p_Val2_s_fu_1514_p1;
    sc_signal< sc_logic > grp_fu_1096_ap_start;
    sc_signal< sc_logic > grp_fu_1096_ap_done;
    sc_signal< sc_logic > grp_fu_1096_ce;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<30> > p_Val2_s_fu_1514_p10;
    sc_signal< bool > ap_condition_1341;
    sc_signal< bool > ap_condition_410;
    sc_signal< bool > ap_condition_1349;
    sc_signal< bool > ap_condition_1353;
    sc_signal< bool > ap_condition_1358;
    sc_signal< bool > ap_condition_110;
    sc_signal< bool > ap_condition_115;
    sc_signal< bool > ap_condition_120;
    sc_signal< bool > ap_condition_190;
    sc_signal< bool > ap_condition_195;
    sc_signal< bool > ap_condition_200;
    sc_signal< bool > ap_condition_267;
    sc_signal< bool > ap_condition_272;
    sc_signal< bool > ap_condition_277;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<6> ap_ST_fsm_state7;
    static const sc_lv<6> ap_ST_fsm_state8;
    static const sc_lv<6> ap_ST_fsm_state9;
    static const sc_lv<6> ap_ST_fsm_state10;
    static const sc_lv<6> ap_ST_fsm_state11;
    static const sc_lv<6> ap_ST_fsm_state12;
    static const sc_lv<6> ap_ST_fsm_state13;
    static const sc_lv<6> ap_ST_fsm_state14;
    static const sc_lv<6> ap_ST_fsm_state15;
    static const sc_lv<6> ap_ST_fsm_state16;
    static const sc_lv<6> ap_ST_fsm_state17;
    static const sc_lv<6> ap_ST_fsm_state18;
    static const sc_lv<6> ap_ST_fsm_state19;
    static const sc_lv<6> ap_ST_fsm_state20;
    static const sc_lv<6> ap_ST_fsm_state21;
    static const sc_lv<6> ap_ST_fsm_state22;
    static const sc_lv<6> ap_ST_fsm_state23;
    static const sc_lv<6> ap_ST_fsm_state24;
    static const sc_lv<6> ap_ST_fsm_state25;
    static const sc_lv<6> ap_ST_fsm_state26;
    static const sc_lv<6> ap_ST_fsm_state27;
    static const sc_lv<6> ap_ST_fsm_state28;
    static const sc_lv<6> ap_ST_fsm_state29;
    static const sc_lv<6> ap_ST_fsm_state30;
    static const sc_lv<6> ap_ST_fsm_state31;
    static const sc_lv<6> ap_ST_fsm_state32;
    static const sc_lv<6> ap_ST_fsm_state33;
    static const sc_lv<6> ap_ST_fsm_state34;
    static const sc_lv<6> ap_ST_fsm_state35;
    static const sc_lv<6> ap_ST_fsm_state36;
    static const sc_lv<6> ap_ST_fsm_state37;
    static const sc_lv<6> ap_ST_fsm_state38;
    static const sc_lv<6> ap_ST_fsm_state39;
    static const sc_lv<6> ap_ST_fsm_state40;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<24> ap_const_lv24_7FFFFF;
    static const sc_lv<24> ap_const_lv24_800000;
    static const sc_lv<6> ap_const_lv6_12;
    static const sc_lv<7> ap_const_lv7_5A;
    static const sc_lv<7> ap_const_lv7_36;
    static const sc_lv<6> ap_const_lv6_24;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<7> ap_const_lv7_48;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<5> ap_const_lv5_D;
    static const sc_lv<5> ap_const_lv5_E;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_18;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Range1_all_ones_fu_944_p2();
    void thread_Range1_all_zeros_fu_950_p2();
    void thread_Range2_all_ones_fu_929_p2();
    void thread_addr10_cast_fu_1194_p0();
    void thread_addr10_cast_fu_1194_p1();
    void thread_addr11_cast_fu_1205_p0();
    void thread_addr11_cast_fu_1205_p1();
    void thread_addr12_cast_fu_1216_p0();
    void thread_addr12_cast_fu_1216_p1();
    void thread_addr13_cast_fu_1227_p0();
    void thread_addr13_cast_fu_1227_p1();
    void thread_addr14_cast_fu_1237_p0();
    void thread_addr14_cast_fu_1237_p1();
    void thread_addr1_cast_fu_1446_p0();
    void thread_addr1_cast_fu_1446_p1();
    void thread_addr2_cast_fu_1467_p0();
    void thread_addr2_cast_fu_1467_p1();
    void thread_addr3_cast_fu_1482_p0();
    void thread_addr3_cast_fu_1482_p1();
    void thread_addr4_cast_fu_1509_p0();
    void thread_addr4_cast_fu_1509_p1();
    void thread_addr5_cast_fu_1362_p0();
    void thread_addr5_cast_fu_1362_p1();
    void thread_addr6_cast_fu_1373_p0();
    void thread_addr6_cast_fu_1373_p1();
    void thread_addr7_cast_fu_1384_p0();
    void thread_addr7_cast_fu_1384_p1();
    void thread_addr8_cast_fu_1395_p0();
    void thread_addr8_cast_fu_1395_p1();
    void thread_addr9_cast_fu_1405_p0();
    void thread_addr9_cast_fu_1405_p1();
    void thread_addr_cast_fu_1111_p0();
    void thread_addr_cast_fu_1111_p1();
    void thread_ap_block_state1();
    void thread_ap_block_state23_io();
    void thread_ap_block_state34_io();
    void thread_ap_block_state35();
    void thread_ap_block_state35_io();
    void thread_ap_condition_110();
    void thread_ap_condition_115();
    void thread_ap_condition_120();
    void thread_ap_condition_1341();
    void thread_ap_condition_1349();
    void thread_ap_condition_1353();
    void thread_ap_condition_1358();
    void thread_ap_condition_190();
    void thread_ap_condition_195();
    void thread_ap_condition_200();
    void thread_ap_condition_267();
    void thread_ap_condition_272();
    void thread_ap_condition_277();
    void thread_ap_condition_410();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_cfg_filt_en_load_phi_phi_fu_658_p24();
    void thread_ap_phi_mux_i2_phi_fu_648_p4();
    void thread_ap_phi_mux_p_051_1_phi_fu_628_p4();
    void thread_ap_predicate_op269_write_state23();
    void thread_ap_predicate_op329_write_state35();
    void thread_ap_ready();
    void thread_brmerge40_demorgan_i_fu_1014_p2();
    void thread_brmerge_i_fu_996_p2();
    void thread_brmerge_i_i_fu_1038_p2();
    void thread_buf_clr_read_read_fu_354_p2();
    void thread_carry_fu_907_p2();
    void thread_coeff_mem_address0();
    void thread_coeff_mem_ce0();
    void thread_deleted_ones_fu_976_p3();
    void thread_deleted_zeros_fu_956_p3();
    void thread_exitcond1_fu_1247_p2();
    void thread_exitcond2_fu_1487_p2();
    void thread_exitcond3_fu_1146_p2();
    void thread_exitcond_fu_1424_p2();
    void thread_grp_filter_c_engine_fu_720_ap_ce();
    void thread_grp_filter_c_engine_fu_720_ap_start();
    void thread_grp_filter_c_engine_fu_720_buf_xn_2_V_read();
    void thread_grp_fu_1096_ap_start();
    void thread_grp_fu_1096_ce();
    void thread_grp_fu_1096_p0();
    void thread_grp_fu_1105_p0();
    void thread_grp_fu_1105_p1();
    void thread_grp_fu_1105_p2();
    void thread_grp_fu_1440_p0();
    void thread_grp_fu_1440_p2();
    void thread_mem_address0();
    void thread_mem_ce0();
    void thread_mem_d0();
    void thread_mem_we0();
    void thread_newSel1_fu_1309_p3();
    void thread_newSel2_fu_1321_p3();
    void thread_newSel3_fu_1327_p3();
    void thread_newSel4_fu_1341_p3();
    void thread_newSel_fu_1297_p3();
    void thread_newsignbit_fu_893_p3();
    void thread_or_cond1_fu_1315_p2();
    void thread_or_cond2_fu_1335_p2();
    void thread_or_cond_fu_1303_p2();
    void thread_overflow_fu_1008_p2();
    void thread_p_38_i_fu_984_p2();
    void thread_p_41_i_fu_970_p2();
    void thread_p_Result_8_fu_920_p4();
    void thread_p_Result_9_fu_935_p4();
    void thread_p_Val2_2_37_fu_1064_p3();
    void thread_p_Val2_2_mux_fu_1056_p3();
    void thread_p_Val2_s_fu_1514_p1();
    void thread_p_Val2_s_fu_1514_p10();
    void thread_p_not_i_fu_990_p2();
    void thread_sel_tmp2_fu_1273_p2();
    void thread_sel_tmp4_fu_1279_p2();
    void thread_sel_tmp6_fu_1285_p2();
    void thread_sel_tmp8_fu_1291_p2();
    void thread_sel_tmp_fu_1267_p2();
    void thread_signbit_fu_853_p3();
    void thread_tmp1_fu_1044_p2();
    void thread_tmp_11_cast1_fu_1162_p1();
    void thread_tmp_11_cast2_fu_1166_p1();
    void thread_tmp_11_cast_fu_1170_p1();
    void thread_tmp_11_fu_1158_p1();
    void thread_tmp_12_cast1_fu_1259_p1();
    void thread_tmp_12_cast_fu_1263_p1();
    void thread_tmp_12_fu_1253_p1();
    void thread_tmp_22_fu_869_p3();
    void thread_tmp_23_fu_886_p3();
    void thread_tmp_25_fu_913_p3();
    void thread_tmp_3_fu_876_p1();
    void thread_tmp_4_fu_1002_p2();
    void thread_tmp_5_fu_1080_p2();
    void thread_tmp_6_fu_964_p2();
    void thread_tmp_7_cast_fu_1102_p0();
    void thread_tmp_7_cast_fu_1102_p1();
    void thread_tmp_8_fu_901_p2();
    void thread_tmp_9_cast1_fu_1457_p1();
    void thread_tmp_9_cast_fu_1436_p1();
    void thread_tmp_9_fu_1472_p1();
    void thread_tmp_cast_fu_1499_p1();
    void thread_tmp_demorgan_fu_1020_p2();
    void thread_tmp_fu_1026_p2();
    void thread_underflow_fu_1032_p2();
    void thread_underflow_not_fu_1050_p2();
    void thread_xn_0_V_0_ack_in();
    void thread_xn_0_V_0_ack_out();
    void thread_xn_0_V_0_data_out();
    void thread_xn_0_V_0_load_A();
    void thread_xn_0_V_0_load_B();
    void thread_xn_0_V_0_sel();
    void thread_xn_0_V_0_state_cmp_full();
    void thread_xn_0_V_0_vld_in();
    void thread_xn_0_V_0_vld_out();
    void thread_xn_0_V_TDATA_blk_n();
    void thread_xn_0_V_TREADY();
    void thread_xn_woofer_V_3_fu_1072_p3();
    void thread_xn_woofer_V_3_xn_woo_fu_1116_p3();
    void thread_xn_woofer_V_xn_woofe_fu_1123_p3();
    void thread_yn_0_V_1_ack_in();
    void thread_yn_0_V_1_ack_out();
    void thread_yn_0_V_1_data_out();
    void thread_yn_0_V_1_load_A();
    void thread_yn_0_V_1_load_B();
    void thread_yn_0_V_1_sel();
    void thread_yn_0_V_1_state_cmp_full();
    void thread_yn_0_V_1_vld_in();
    void thread_yn_0_V_1_vld_out();
    void thread_yn_0_V_TDATA();
    void thread_yn_0_V_TDATA_blk_n();
    void thread_yn_0_V_TVALID();
    void thread_yn_1_V_1_ack_in();
    void thread_yn_1_V_1_ack_out();
    void thread_yn_1_V_1_data_out();
    void thread_yn_1_V_1_load_A();
    void thread_yn_1_V_1_load_B();
    void thread_yn_1_V_1_sel();
    void thread_yn_1_V_1_state_cmp_full();
    void thread_yn_1_V_1_vld_in();
    void thread_yn_1_V_1_vld_out();
    void thread_yn_1_V_TDATA();
    void thread_yn_1_V_TDATA_blk_n();
    void thread_yn_1_V_TVALID();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
