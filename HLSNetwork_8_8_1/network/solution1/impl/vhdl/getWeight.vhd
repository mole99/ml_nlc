-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity getWeight is
port (
    ap_ready : OUT STD_LOGIC;
    network_weights_weig : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_175 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_176 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_177 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_178 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_179 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_180 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_181 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_182 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_183 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_184 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_185 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_186 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_187 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_188 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_189 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_190 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_191 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_192 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_193 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_194 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_195 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_196 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_197 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_198 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_199 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_200 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_201 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_202 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_203 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_204 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_205 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_206 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_207 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_208 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_209 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_210 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_211 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_212 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_213 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_214 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_215 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_216 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_217 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_218 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_219 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_220 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_221 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_222 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_223 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_224 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_225 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_226 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_227 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_228 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_229 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_230 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_231 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_232 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_233 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_234 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_235 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_236 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_237 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_238 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_239 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_240 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_241 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_242 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_243 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_244 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_245 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_246 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_247 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_248 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_249 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_250 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_251 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_252 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_253 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_254 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_255 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_256 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_257 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_258 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_259 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_260 : IN STD_LOGIC_VECTOR (7 downto 0);
    network_weights_weig_261 : IN STD_LOGIC_VECTOR (7 downto 0);
    layer : IN STD_LOGIC_VECTOR (3 downto 0);
    index_0 : IN STD_LOGIC_VECTOR (3 downto 0);
    index_1 : IN STD_LOGIC_VECTOR (3 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of getWeight is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal trunc_ln11_fu_750_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln11_1_fu_754_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_758_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_770_p17 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln14_fu_808_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_812_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_824_p65 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln8_fu_980_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln8_2_fu_996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_770_p18 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_824_p66 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln8_1_fu_990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln8_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_958_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln8_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln8_fu_1002_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln8_1_fu_1016_p3 : STD_LOGIC_VECTOR (7 downto 0);

    component network_top_mux_1cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (7 downto 0);
        din10 : IN STD_LOGIC_VECTOR (7 downto 0);
        din11 : IN STD_LOGIC_VECTOR (7 downto 0);
        din12 : IN STD_LOGIC_VECTOR (7 downto 0);
        din13 : IN STD_LOGIC_VECTOR (7 downto 0);
        din14 : IN STD_LOGIC_VECTOR (7 downto 0);
        din15 : IN STD_LOGIC_VECTOR (7 downto 0);
        din16 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component network_top_mux_6dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        din62_WIDTH : INTEGER;
        din63_WIDTH : INTEGER;
        din64_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (7 downto 0);
        din10 : IN STD_LOGIC_VECTOR (7 downto 0);
        din11 : IN STD_LOGIC_VECTOR (7 downto 0);
        din12 : IN STD_LOGIC_VECTOR (7 downto 0);
        din13 : IN STD_LOGIC_VECTOR (7 downto 0);
        din14 : IN STD_LOGIC_VECTOR (7 downto 0);
        din15 : IN STD_LOGIC_VECTOR (7 downto 0);
        din16 : IN STD_LOGIC_VECTOR (7 downto 0);
        din17 : IN STD_LOGIC_VECTOR (7 downto 0);
        din18 : IN STD_LOGIC_VECTOR (7 downto 0);
        din19 : IN STD_LOGIC_VECTOR (7 downto 0);
        din20 : IN STD_LOGIC_VECTOR (7 downto 0);
        din21 : IN STD_LOGIC_VECTOR (7 downto 0);
        din22 : IN STD_LOGIC_VECTOR (7 downto 0);
        din23 : IN STD_LOGIC_VECTOR (7 downto 0);
        din24 : IN STD_LOGIC_VECTOR (7 downto 0);
        din25 : IN STD_LOGIC_VECTOR (7 downto 0);
        din26 : IN STD_LOGIC_VECTOR (7 downto 0);
        din27 : IN STD_LOGIC_VECTOR (7 downto 0);
        din28 : IN STD_LOGIC_VECTOR (7 downto 0);
        din29 : IN STD_LOGIC_VECTOR (7 downto 0);
        din30 : IN STD_LOGIC_VECTOR (7 downto 0);
        din31 : IN STD_LOGIC_VECTOR (7 downto 0);
        din32 : IN STD_LOGIC_VECTOR (7 downto 0);
        din33 : IN STD_LOGIC_VECTOR (7 downto 0);
        din34 : IN STD_LOGIC_VECTOR (7 downto 0);
        din35 : IN STD_LOGIC_VECTOR (7 downto 0);
        din36 : IN STD_LOGIC_VECTOR (7 downto 0);
        din37 : IN STD_LOGIC_VECTOR (7 downto 0);
        din38 : IN STD_LOGIC_VECTOR (7 downto 0);
        din39 : IN STD_LOGIC_VECTOR (7 downto 0);
        din40 : IN STD_LOGIC_VECTOR (7 downto 0);
        din41 : IN STD_LOGIC_VECTOR (7 downto 0);
        din42 : IN STD_LOGIC_VECTOR (7 downto 0);
        din43 : IN STD_LOGIC_VECTOR (7 downto 0);
        din44 : IN STD_LOGIC_VECTOR (7 downto 0);
        din45 : IN STD_LOGIC_VECTOR (7 downto 0);
        din46 : IN STD_LOGIC_VECTOR (7 downto 0);
        din47 : IN STD_LOGIC_VECTOR (7 downto 0);
        din48 : IN STD_LOGIC_VECTOR (7 downto 0);
        din49 : IN STD_LOGIC_VECTOR (7 downto 0);
        din50 : IN STD_LOGIC_VECTOR (7 downto 0);
        din51 : IN STD_LOGIC_VECTOR (7 downto 0);
        din52 : IN STD_LOGIC_VECTOR (7 downto 0);
        din53 : IN STD_LOGIC_VECTOR (7 downto 0);
        din54 : IN STD_LOGIC_VECTOR (7 downto 0);
        din55 : IN STD_LOGIC_VECTOR (7 downto 0);
        din56 : IN STD_LOGIC_VECTOR (7 downto 0);
        din57 : IN STD_LOGIC_VECTOR (7 downto 0);
        din58 : IN STD_LOGIC_VECTOR (7 downto 0);
        din59 : IN STD_LOGIC_VECTOR (7 downto 0);
        din60 : IN STD_LOGIC_VECTOR (7 downto 0);
        din61 : IN STD_LOGIC_VECTOR (7 downto 0);
        din62 : IN STD_LOGIC_VECTOR (7 downto 0);
        din63 : IN STD_LOGIC_VECTOR (7 downto 0);
        din64 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component network_top_mux_8eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    network_top_mux_1cud_U23 : component network_top_mux_1cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 5,
        dout_WIDTH => 8)
    port map (
        din0 => network_weights_weig,
        din1 => network_weights_weig_175,
        din2 => network_weights_weig_176,
        din3 => network_weights_weig_177,
        din4 => network_weights_weig_178,
        din5 => network_weights_weig_179,
        din6 => network_weights_weig_180,
        din7 => network_weights_weig_181,
        din8 => network_weights_weig_182,
        din9 => network_weights_weig_183,
        din10 => network_weights_weig_184,
        din11 => network_weights_weig_185,
        din12 => network_weights_weig_186,
        din13 => network_weights_weig_187,
        din14 => network_weights_weig_188,
        din15 => network_weights_weig_189,
        din16 => tmp_fu_770_p17,
        dout => tmp_fu_770_p18);

    network_top_mux_6dEe_U24 : component network_top_mux_6dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 7,
        dout_WIDTH => 8)
    port map (
        din0 => network_weights_weig_190,
        din1 => network_weights_weig_191,
        din2 => network_weights_weig_192,
        din3 => network_weights_weig_193,
        din4 => network_weights_weig_194,
        din5 => network_weights_weig_195,
        din6 => network_weights_weig_196,
        din7 => network_weights_weig_197,
        din8 => network_weights_weig_198,
        din9 => network_weights_weig_199,
        din10 => network_weights_weig_200,
        din11 => network_weights_weig_201,
        din12 => network_weights_weig_202,
        din13 => network_weights_weig_203,
        din14 => network_weights_weig_204,
        din15 => network_weights_weig_205,
        din16 => network_weights_weig_206,
        din17 => network_weights_weig_207,
        din18 => network_weights_weig_208,
        din19 => network_weights_weig_209,
        din20 => network_weights_weig_210,
        din21 => network_weights_weig_211,
        din22 => network_weights_weig_212,
        din23 => network_weights_weig_213,
        din24 => network_weights_weig_214,
        din25 => network_weights_weig_215,
        din26 => network_weights_weig_216,
        din27 => network_weights_weig_217,
        din28 => network_weights_weig_218,
        din29 => network_weights_weig_219,
        din30 => network_weights_weig_220,
        din31 => network_weights_weig_221,
        din32 => network_weights_weig_222,
        din33 => network_weights_weig_223,
        din34 => network_weights_weig_224,
        din35 => network_weights_weig_225,
        din36 => network_weights_weig_226,
        din37 => network_weights_weig_227,
        din38 => network_weights_weig_228,
        din39 => network_weights_weig_229,
        din40 => network_weights_weig_230,
        din41 => network_weights_weig_231,
        din42 => network_weights_weig_232,
        din43 => network_weights_weig_233,
        din44 => network_weights_weig_234,
        din45 => network_weights_weig_235,
        din46 => network_weights_weig_236,
        din47 => network_weights_weig_237,
        din48 => network_weights_weig_238,
        din49 => network_weights_weig_239,
        din50 => network_weights_weig_240,
        din51 => network_weights_weig_241,
        din52 => network_weights_weig_242,
        din53 => network_weights_weig_243,
        din54 => network_weights_weig_244,
        din55 => network_weights_weig_245,
        din56 => network_weights_weig_246,
        din57 => network_weights_weig_247,
        din58 => network_weights_weig_248,
        din59 => network_weights_weig_249,
        din60 => network_weights_weig_250,
        din61 => network_weights_weig_251,
        din62 => network_weights_weig_252,
        din63 => network_weights_weig_253,
        din64 => tmp_1_fu_824_p65,
        dout => tmp_1_fu_824_p66);

    network_top_mux_8eOg_U25 : component network_top_mux_8eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => network_weights_weig_254,
        din1 => network_weights_weig_255,
        din2 => network_weights_weig_256,
        din3 => network_weights_weig_257,
        din4 => network_weights_weig_258,
        din5 => network_weights_weig_259,
        din6 => network_weights_weig_260,
        din7 => network_weights_weig_261,
        din8 => trunc_ln14_fu_808_p1,
        dout => tmp_2_fu_958_p10);




    ap_ready <= ap_const_logic_1;
    ap_return <= 
        select_ln8_fu_1002_p3 when (or_ln8_fu_1010_p2(0) = '1') else 
        select_ln8_1_fu_1016_p3;
    icmp_ln8_1_fu_990_p2 <= "1" when (trunc_ln8_fu_980_p1 = ap_const_lv2_1) else "0";
    icmp_ln8_2_fu_996_p2 <= "1" when (trunc_ln8_fu_980_p1 = ap_const_lv2_0) else "0";
    icmp_ln8_fu_984_p2 <= "1" when (trunc_ln8_fu_980_p1 = ap_const_lv2_2) else "0";
    or_ln8_fu_1010_p2 <= (icmp_ln8_2_fu_996_p2 or icmp_ln8_1_fu_990_p2);
    select_ln8_1_fu_1016_p3 <= 
        tmp_2_fu_958_p10 when (icmp_ln8_fu_984_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln8_fu_1002_p3 <= 
        tmp_fu_770_p18 when (icmp_ln8_2_fu_996_p2(0) = '1') else 
        tmp_1_fu_824_p66;
    tmp_1_fu_824_p65 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_812_p3),7));
    tmp_3_fu_758_p3 <= (trunc_ln11_fu_750_p1 & trunc_ln11_1_fu_754_p1);
    tmp_4_fu_812_p3 <= (trunc_ln11_fu_750_p1 & trunc_ln14_fu_808_p1);
    tmp_fu_770_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_758_p3),5));
    trunc_ln11_1_fu_754_p1 <= index_1(1 - 1 downto 0);
    trunc_ln11_fu_750_p1 <= index_0(3 - 1 downto 0);
    trunc_ln14_fu_808_p1 <= index_1(3 - 1 downto 0);
    trunc_ln8_fu_980_p1 <= layer(2 - 1 downto 0);
end behav;
