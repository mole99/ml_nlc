-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity getBias is
port (
    ap_ready : OUT STD_LOGIC;
    network_weights_bias : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_33 : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_34 : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_35 : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_36 : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_37 : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_38 : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_39 : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_40 : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_41 : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_42 : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_43 : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_44 : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_45 : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_46 : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_47 : IN STD_LOGIC_VECTOR (31 downto 0);
    network_weights_bias_48 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer : IN STD_LOGIC_VECTOR (3 downto 0);
    index : IN STD_LOGIC_VECTOR (3 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of getBias is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal trunc_ln29_fu_166_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln26_fu_214_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln26_2_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_170_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_192_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_1_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln26_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_fu_236_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_1_fu_250_p3 : STD_LOGIC_VECTOR (31 downto 0);

    component network_top_mux_8bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    network_top_mux_8bkb_U1 : component network_top_mux_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => network_weights_bias,
        din1 => network_weights_bias_33,
        din2 => network_weights_bias_34,
        din3 => network_weights_bias_35,
        din4 => network_weights_bias_36,
        din5 => network_weights_bias_37,
        din6 => network_weights_bias_38,
        din7 => network_weights_bias_39,
        din8 => trunc_ln29_fu_166_p1,
        dout => tmp_fu_170_p10);

    network_top_mux_8bkb_U2 : component network_top_mux_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => network_weights_bias_40,
        din1 => network_weights_bias_41,
        din2 => network_weights_bias_42,
        din3 => network_weights_bias_43,
        din4 => network_weights_bias_44,
        din5 => network_weights_bias_45,
        din6 => network_weights_bias_46,
        din7 => network_weights_bias_47,
        din8 => trunc_ln29_fu_166_p1,
        dout => tmp_3_fu_192_p10);




    ap_ready <= ap_const_logic_1;
    ap_return <= 
        select_ln26_fu_236_p3 when (or_ln26_fu_244_p2(0) = '1') else 
        select_ln26_1_fu_250_p3;
    icmp_ln26_1_fu_224_p2 <= "1" when (trunc_ln26_fu_214_p1 = ap_const_lv2_1) else "0";
    icmp_ln26_2_fu_230_p2 <= "1" when (trunc_ln26_fu_214_p1 = ap_const_lv2_0) else "0";
    icmp_ln26_fu_218_p2 <= "1" when (trunc_ln26_fu_214_p1 = ap_const_lv2_2) else "0";
    or_ln26_fu_244_p2 <= (icmp_ln26_2_fu_230_p2 or icmp_ln26_1_fu_224_p2);
    select_ln26_1_fu_250_p3 <= 
        network_weights_bias_48 when (icmp_ln26_fu_218_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln26_fu_236_p3 <= 
        tmp_fu_170_p10 when (icmp_ln26_2_fu_230_p2(0) = '1') else 
        tmp_3_fu_192_p10;
    trunc_ln26_fu_214_p1 <= layer(2 - 1 downto 0);
    trunc_ln29_fu_166_p1 <= index(3 - 1 downto 0);
end behav;
