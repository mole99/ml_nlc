// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module getWeight (
        ap_ready,
        network_weights_weig,
        network_weights_weig_175,
        network_weights_weig_176,
        network_weights_weig_177,
        network_weights_weig_178,
        network_weights_weig_179,
        network_weights_weig_180,
        network_weights_weig_181,
        network_weights_weig_182,
        network_weights_weig_183,
        network_weights_weig_184,
        network_weights_weig_185,
        network_weights_weig_186,
        network_weights_weig_187,
        network_weights_weig_188,
        network_weights_weig_189,
        network_weights_weig_190,
        network_weights_weig_191,
        network_weights_weig_192,
        network_weights_weig_193,
        network_weights_weig_194,
        network_weights_weig_195,
        network_weights_weig_196,
        network_weights_weig_197,
        network_weights_weig_198,
        network_weights_weig_199,
        network_weights_weig_200,
        network_weights_weig_201,
        network_weights_weig_202,
        network_weights_weig_203,
        network_weights_weig_204,
        network_weights_weig_205,
        network_weights_weig_206,
        network_weights_weig_207,
        network_weights_weig_208,
        network_weights_weig_209,
        network_weights_weig_210,
        network_weights_weig_211,
        network_weights_weig_212,
        network_weights_weig_213,
        network_weights_weig_214,
        network_weights_weig_215,
        network_weights_weig_216,
        network_weights_weig_217,
        network_weights_weig_218,
        network_weights_weig_219,
        network_weights_weig_220,
        network_weights_weig_221,
        network_weights_weig_222,
        network_weights_weig_223,
        network_weights_weig_224,
        network_weights_weig_225,
        network_weights_weig_226,
        network_weights_weig_227,
        network_weights_weig_228,
        network_weights_weig_229,
        network_weights_weig_230,
        network_weights_weig_231,
        network_weights_weig_232,
        network_weights_weig_233,
        network_weights_weig_234,
        network_weights_weig_235,
        network_weights_weig_236,
        network_weights_weig_237,
        network_weights_weig_238,
        network_weights_weig_239,
        network_weights_weig_240,
        network_weights_weig_241,
        network_weights_weig_242,
        network_weights_weig_243,
        network_weights_weig_244,
        network_weights_weig_245,
        network_weights_weig_246,
        network_weights_weig_247,
        network_weights_weig_248,
        network_weights_weig_249,
        network_weights_weig_250,
        network_weights_weig_251,
        network_weights_weig_252,
        network_weights_weig_253,
        network_weights_weig_254,
        network_weights_weig_255,
        network_weights_weig_256,
        network_weights_weig_257,
        network_weights_weig_258,
        network_weights_weig_259,
        network_weights_weig_260,
        network_weights_weig_261,
        layer,
        index_0,
        index_1,
        ap_return
);


output   ap_ready;
input  [7:0] network_weights_weig;
input  [7:0] network_weights_weig_175;
input  [7:0] network_weights_weig_176;
input  [7:0] network_weights_weig_177;
input  [7:0] network_weights_weig_178;
input  [7:0] network_weights_weig_179;
input  [7:0] network_weights_weig_180;
input  [7:0] network_weights_weig_181;
input  [7:0] network_weights_weig_182;
input  [7:0] network_weights_weig_183;
input  [7:0] network_weights_weig_184;
input  [7:0] network_weights_weig_185;
input  [7:0] network_weights_weig_186;
input  [7:0] network_weights_weig_187;
input  [7:0] network_weights_weig_188;
input  [7:0] network_weights_weig_189;
input  [7:0] network_weights_weig_190;
input  [7:0] network_weights_weig_191;
input  [7:0] network_weights_weig_192;
input  [7:0] network_weights_weig_193;
input  [7:0] network_weights_weig_194;
input  [7:0] network_weights_weig_195;
input  [7:0] network_weights_weig_196;
input  [7:0] network_weights_weig_197;
input  [7:0] network_weights_weig_198;
input  [7:0] network_weights_weig_199;
input  [7:0] network_weights_weig_200;
input  [7:0] network_weights_weig_201;
input  [7:0] network_weights_weig_202;
input  [7:0] network_weights_weig_203;
input  [7:0] network_weights_weig_204;
input  [7:0] network_weights_weig_205;
input  [7:0] network_weights_weig_206;
input  [7:0] network_weights_weig_207;
input  [7:0] network_weights_weig_208;
input  [7:0] network_weights_weig_209;
input  [7:0] network_weights_weig_210;
input  [7:0] network_weights_weig_211;
input  [7:0] network_weights_weig_212;
input  [7:0] network_weights_weig_213;
input  [7:0] network_weights_weig_214;
input  [7:0] network_weights_weig_215;
input  [7:0] network_weights_weig_216;
input  [7:0] network_weights_weig_217;
input  [7:0] network_weights_weig_218;
input  [7:0] network_weights_weig_219;
input  [7:0] network_weights_weig_220;
input  [7:0] network_weights_weig_221;
input  [7:0] network_weights_weig_222;
input  [7:0] network_weights_weig_223;
input  [7:0] network_weights_weig_224;
input  [7:0] network_weights_weig_225;
input  [7:0] network_weights_weig_226;
input  [7:0] network_weights_weig_227;
input  [7:0] network_weights_weig_228;
input  [7:0] network_weights_weig_229;
input  [7:0] network_weights_weig_230;
input  [7:0] network_weights_weig_231;
input  [7:0] network_weights_weig_232;
input  [7:0] network_weights_weig_233;
input  [7:0] network_weights_weig_234;
input  [7:0] network_weights_weig_235;
input  [7:0] network_weights_weig_236;
input  [7:0] network_weights_weig_237;
input  [7:0] network_weights_weig_238;
input  [7:0] network_weights_weig_239;
input  [7:0] network_weights_weig_240;
input  [7:0] network_weights_weig_241;
input  [7:0] network_weights_weig_242;
input  [7:0] network_weights_weig_243;
input  [7:0] network_weights_weig_244;
input  [7:0] network_weights_weig_245;
input  [7:0] network_weights_weig_246;
input  [7:0] network_weights_weig_247;
input  [7:0] network_weights_weig_248;
input  [7:0] network_weights_weig_249;
input  [7:0] network_weights_weig_250;
input  [7:0] network_weights_weig_251;
input  [7:0] network_weights_weig_252;
input  [7:0] network_weights_weig_253;
input  [7:0] network_weights_weig_254;
input  [7:0] network_weights_weig_255;
input  [7:0] network_weights_weig_256;
input  [7:0] network_weights_weig_257;
input  [7:0] network_weights_weig_258;
input  [7:0] network_weights_weig_259;
input  [7:0] network_weights_weig_260;
input  [7:0] network_weights_weig_261;
input  [3:0] layer;
input  [3:0] index_0;
input  [3:0] index_1;
output  [7:0] ap_return;

wire   [2:0] trunc_ln11_fu_750_p1;
wire   [0:0] trunc_ln11_1_fu_754_p1;
wire   [3:0] tmp_3_fu_758_p3;
wire   [4:0] tmp_fu_770_p17;
wire   [2:0] trunc_ln14_fu_808_p1;
wire   [5:0] tmp_4_fu_812_p3;
wire   [6:0] tmp_1_fu_824_p65;
wire   [1:0] trunc_ln8_fu_980_p1;
wire   [0:0] icmp_ln8_2_fu_996_p2;
wire   [7:0] tmp_fu_770_p18;
wire   [7:0] tmp_1_fu_824_p66;
wire   [0:0] icmp_ln8_1_fu_990_p2;
wire   [0:0] icmp_ln8_fu_984_p2;
wire   [7:0] tmp_2_fu_958_p10;
wire   [0:0] or_ln8_fu_1010_p2;
wire   [7:0] select_ln8_fu_1002_p3;
wire   [7:0] select_ln8_1_fu_1016_p3;

network_top_mux_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
network_top_mux_1cud_U23(
    .din0(network_weights_weig),
    .din1(network_weights_weig_175),
    .din2(network_weights_weig_176),
    .din3(network_weights_weig_177),
    .din4(network_weights_weig_178),
    .din5(network_weights_weig_179),
    .din6(network_weights_weig_180),
    .din7(network_weights_weig_181),
    .din8(network_weights_weig_182),
    .din9(network_weights_weig_183),
    .din10(network_weights_weig_184),
    .din11(network_weights_weig_185),
    .din12(network_weights_weig_186),
    .din13(network_weights_weig_187),
    .din14(network_weights_weig_188),
    .din15(network_weights_weig_189),
    .din16(tmp_fu_770_p17),
    .dout(tmp_fu_770_p18)
);

network_top_mux_6dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
network_top_mux_6dEe_U24(
    .din0(network_weights_weig_190),
    .din1(network_weights_weig_191),
    .din2(network_weights_weig_192),
    .din3(network_weights_weig_193),
    .din4(network_weights_weig_194),
    .din5(network_weights_weig_195),
    .din6(network_weights_weig_196),
    .din7(network_weights_weig_197),
    .din8(network_weights_weig_198),
    .din9(network_weights_weig_199),
    .din10(network_weights_weig_200),
    .din11(network_weights_weig_201),
    .din12(network_weights_weig_202),
    .din13(network_weights_weig_203),
    .din14(network_weights_weig_204),
    .din15(network_weights_weig_205),
    .din16(network_weights_weig_206),
    .din17(network_weights_weig_207),
    .din18(network_weights_weig_208),
    .din19(network_weights_weig_209),
    .din20(network_weights_weig_210),
    .din21(network_weights_weig_211),
    .din22(network_weights_weig_212),
    .din23(network_weights_weig_213),
    .din24(network_weights_weig_214),
    .din25(network_weights_weig_215),
    .din26(network_weights_weig_216),
    .din27(network_weights_weig_217),
    .din28(network_weights_weig_218),
    .din29(network_weights_weig_219),
    .din30(network_weights_weig_220),
    .din31(network_weights_weig_221),
    .din32(network_weights_weig_222),
    .din33(network_weights_weig_223),
    .din34(network_weights_weig_224),
    .din35(network_weights_weig_225),
    .din36(network_weights_weig_226),
    .din37(network_weights_weig_227),
    .din38(network_weights_weig_228),
    .din39(network_weights_weig_229),
    .din40(network_weights_weig_230),
    .din41(network_weights_weig_231),
    .din42(network_weights_weig_232),
    .din43(network_weights_weig_233),
    .din44(network_weights_weig_234),
    .din45(network_weights_weig_235),
    .din46(network_weights_weig_236),
    .din47(network_weights_weig_237),
    .din48(network_weights_weig_238),
    .din49(network_weights_weig_239),
    .din50(network_weights_weig_240),
    .din51(network_weights_weig_241),
    .din52(network_weights_weig_242),
    .din53(network_weights_weig_243),
    .din54(network_weights_weig_244),
    .din55(network_weights_weig_245),
    .din56(network_weights_weig_246),
    .din57(network_weights_weig_247),
    .din58(network_weights_weig_248),
    .din59(network_weights_weig_249),
    .din60(network_weights_weig_250),
    .din61(network_weights_weig_251),
    .din62(network_weights_weig_252),
    .din63(network_weights_weig_253),
    .din64(tmp_1_fu_824_p65),
    .dout(tmp_1_fu_824_p66)
);

network_top_mux_8eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
network_top_mux_8eOg_U25(
    .din0(network_weights_weig_254),
    .din1(network_weights_weig_255),
    .din2(network_weights_weig_256),
    .din3(network_weights_weig_257),
    .din4(network_weights_weig_258),
    .din5(network_weights_weig_259),
    .din6(network_weights_weig_260),
    .din7(network_weights_weig_261),
    .din8(trunc_ln14_fu_808_p1),
    .dout(tmp_2_fu_958_p10)
);

assign ap_ready = 1'b1;

assign ap_return = ((or_ln8_fu_1010_p2[0:0] === 1'b1) ? select_ln8_fu_1002_p3 : select_ln8_1_fu_1016_p3);

assign icmp_ln8_1_fu_990_p2 = ((trunc_ln8_fu_980_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln8_2_fu_996_p2 = ((trunc_ln8_fu_980_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_984_p2 = ((trunc_ln8_fu_980_p1 == 2'd2) ? 1'b1 : 1'b0);

assign or_ln8_fu_1010_p2 = (icmp_ln8_2_fu_996_p2 | icmp_ln8_1_fu_990_p2);

assign select_ln8_1_fu_1016_p3 = ((icmp_ln8_fu_984_p2[0:0] === 1'b1) ? tmp_2_fu_958_p10 : 8'd0);

assign select_ln8_fu_1002_p3 = ((icmp_ln8_2_fu_996_p2[0:0] === 1'b1) ? tmp_fu_770_p18 : tmp_1_fu_824_p66);

assign tmp_1_fu_824_p65 = tmp_4_fu_812_p3;

assign tmp_3_fu_758_p3 = {{trunc_ln11_fu_750_p1}, {trunc_ln11_1_fu_754_p1}};

assign tmp_4_fu_812_p3 = {{trunc_ln11_fu_750_p1}, {trunc_ln14_fu_808_p1}};

assign tmp_fu_770_p17 = tmp_3_fu_758_p3;

assign trunc_ln11_1_fu_754_p1 = index_1[0:0];

assign trunc_ln11_fu_750_p1 = index_0[2:0];

assign trunc_ln14_fu_808_p1 = index_1[2:0];

assign trunc_ln8_fu_980_p1 = layer[1:0];

endmodule //getWeight
